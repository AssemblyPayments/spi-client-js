pool:
  vmImage: 'ubuntu-latest'

pr:
  branches:
    include:
    - '*'

trigger:
  branches:
    include:
      - '*'
  tags:
    include:
       - '*'

variables:
  - group: global-variables
  - name: ARTIFACT_NAME
    value: spi-client-js
  - name: BRANCH_NAME
    value: $[variables['Build.SourceBranch']]

stages:
- stage: build
  displayName: Build
  jobs:
  - job: build
    cancelTimeoutInMinutes: 5
    displayName: Build
    steps:
    - task: Npm@1
      displayName: Install dependencies
      inputs:
        command: 'install'

    - task: Npm@1
      displayName: Build
      inputs:
        command: 'custom'
        customCommand: 'run build'

    - task: Npm@1
      displayName: Test
      inputs:
        command: 'custom'
        customCommand: 'test'

    - script: dir
      workingDirectory: $(System.DefaultWorkingDirectory)/coverage
      displayName: List contents of a folder
    
    - task: PublishTestResults@2
      displayName: 'publish unit test results'    
      condition: succeededOrFailed()
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/TESTS-*.xml'


    - task: PublishCodeCoverageResults@1
      displayName: "Publish code coverage"
      condition: succeededOrFailed()
      inputs:
        codeCoverageTool: cobertura
        summaryFileLocation: '$(System.DefaultWorkingDirectory)/coverage/cobertura.xml'
        reportDirectory: '$(System.DefaultWorkingDirectory)/coverage'

    - script: |
        npm install codecov
        ./node_modules/.bin/codecov
      condition: and(succeeded(), contains(variables['BRANCH_NAME'], 'master'))
      displayName: Upload coverage report
      env:
        CODECOV_TOKEN: $(codecovToken)
      timeoutInMinutes: 5

    - bash: ./deploy-check.sh $(echo ${BRANCH_NAME/refs\/tags\//})
      condition: and(succeeded(), contains(variables['BRANCH_NAME'], 'refs/tags/'))
      displayName: Check package version matches tag
      failOnStderr: true

    - publish: $(System.DefaultWorkingDirectory)
      artifact: $(ARTIFACT_NAME)
      condition: and(succeeded(), contains(variables['BRANCH_NAME'], 'refs/tags/'))
      displayName: Publish Arfifact

- stage: deploy
  condition: and(succeeded(), contains(variables['BRANCH_NAME'], 'refs/tags/'))
  dependsOn: build
  displayName: Deploy
  jobs:
  - deployment:
    cancelTimeoutInMinutes: 5
    displayName: Deploy
    environment: production
    strategy:
      runOnce:
        deploy:
          steps:
          - task: Npm@1
            displayName: Install dependencies
            inputs:
              command: 'install'
              workingDir: '$(Agent.BuildDirectory)/$(ARTIFACT_NAME)'

          - task: Npm@1
            displayName: Publish
            inputs:
              command: 'publish'
              publishEndpoint: npm
              verbose: true
              workingDir: '$(Agent.BuildDirectory)/$(ARTIFACT_NAME)'

