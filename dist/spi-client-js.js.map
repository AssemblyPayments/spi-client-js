{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./node_modules/aes-js/index.js","webpack:///./node_modules/bn.js/lib/bn.js","webpack:///./node_modules/jssha/src/sha.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/Crypto.js","webpack:///./src/Messages.js","webpack:///./src/SpiModels.js","webpack:///./src/RequestIdHelper.js","webpack:///./src/Pairing.js","webpack:///./src/Secrets.js","webpack:///./src/DiffieHellman.js","webpack:///./src/PairingHelper.js","webpack:///./src/Connection.js","webpack:///./src/Purchase.js","webpack:///./src/PayAtTable.js","webpack:///./src/SpiPayAtTable.js","webpack:///./src/Preauth.js","webpack:///./src/SpiPreauth.js","webpack:///./src/Cashout.js","webpack:///./src/Settlement.js","webpack:///./src/PosInfo.js","webpack:///./src/PurchaseHelper.js","webpack:///./src/KeyRollingHelper.js","webpack:///./src/PingHelper.js","webpack:///./src/Service/DeviceService.js","webpack:///./src/Printing.js","webpack:///./src/TerminalStatus.js","webpack:///./src/Spi.js","webpack:///./src/Logger.js","webpack:///./index.js"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","checkInt","parseInt","checkInts","arrayish","length","coerceArray","arg","copy","buffer","ArrayBuffer","isView","slice","Array","isArray","Error","Uint8Array","createArray","copyArray","sourceArray","targetArray","targetStart","sourceStart","sourceEnd","set","convertUtf8","toBytes","text","result","encodeURI","charCodeAt","push","substr","fromBytes","bytes","String","fromCharCode","join","convertHex","Hex","v","numberOfRounds","16","24","32","rcon","S","Si","T1","T2","T3","T4","T5","T6","T7","T8","U1","U2","U3","U4","convertToInt32","AES","this","_prepare","rounds","_Ke","_Kd","index","roundKeyCount","KC","tk","tt","rconpointer","encrypt","plaintext","decrypt","ciphertext","ModeOfOperationECB","description","_aes","block","ModeOfOperationCBC","iv","_lastCipherblock","j","ModeOfOperationCFB","segmentSize","_shiftRegister","xorSegment","encrypted","ModeOfOperationOFB","_lastPrecipher","_lastPrecipherIndex","Counter","initialValue","_counter","setValue","setBytes","Number","MAX_SAFE_INTEGER","increment","ModeOfOperationCTR","counter","_remainingCounter","_remainingCounterIndex","aesjs","ModeOfOperation","ecb","cbc","cfb","ofb","ctr","utils","hex","utf8","padding","pkcs7","pad","data","padder","strip","_arrayTest","assert","val","msg","inherits","ctor","superCtor","super_","TempCtor","constructor","BN","number","base","endian","isBN","negative","words","red","_init","Buffer","wordSize","e","parseHex","str","start","end","len","Math","min","parseBase","mul","num","max","left","right","cmp","_initNumber","_initArray","toString","replace","_parseHex","_parseBase","toArray","ceil","w","off","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","dest","clone","_expand","size","_normSign","inspect","zeros","groupSizes","groupBases","smallMulTo","self","out","b","lo","carry","k","ncarry","rword","maxJ","groupSize","groupBase","isZero","modn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","ArrayType","byteLength","reqLength","littleEndian","res","q","andln","iushrn","clz32","_countBits","_zeroBits","bitLength","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","sub","comb10MulTo","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","x","y","mulTo","hncarry","bigMulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","toBitArray","iushln","bits","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","acc","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","input","output","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u","__WEBPACK_AMD_DEFINE_RESULT__","Y","f","I","encoding","numRounds","K","Z","lastIndexOf","L","F","M","setHMACKey","binLen","update","getHash","shakeLen","O","P","Q","R","getHMAC","charAt","outputUpper","toUpperCase","b64Pad","isNaN","search","indexOf","T","aa","ba","U","ca","da","ea","fa","ga","ha","ia","ja","ka","G","la","H","ma","na","oa","J","E","V","W","X","undefined","webpackPolyfill","deprecate","paths","children","Crypto","_classCallCheck","_createClass","textBytes","encryptedBytes","decryptedBytes","messageToSign","shaObj","jsSHA","Events","SuccessState","Unknown","Success","Failed","MessageStamp","posId","secrets","serverTimeDelta","Messages_classCallCheck","PosId","Secrets","ServerTimeDelta","Message","id","eventName","needsEncryption","Id","EventName","Data","DateTimeStamp","IncommingHmac","_needsEncryption","DecryptedJson","Messages_createClass","success","error_reason","error_detail","now","Date","dts","getTime","stamp","tzoffset","getTimezoneOffset","adjustedTime","toISOString","envelope","message","event","datetime","pos_id","JSON","stringify","encMsg","AesEncrypt","EncKey","encrMessageEnvelope","enc","hmac","HmacSignature","HmacKey","bankDate","concat","date","time","msgJson","env","parse","decryptedJson","AesDecrypt","decryptedMsg","IncomingHmac","SpiStatus","PairedConnected","PairedConnecting","Unpaired","SpiFlow","Pairing","Transaction","Idle","TransactionType","Purchase","Refund","CashoutOnly","MOTO","Settle","SettlementEnquiry","GetLastTransaction","Preauth","AccountVerify","InitiateTxResult","initiated","SpiModels_classCallCheck","Initiated","MidTxResult","valid","Valid","TransactionFlowState","posRefId","type","amountCents","PosRefId","Type","DisplayMessage","AmountCents","RequestSent","RequestTime","LastStateRequestTime","AttemptingToCancel","AwaitingSignatureCheck","AwaitingPhoneForAuth","Finished","Response","SignatureRequiredMessage","PhoneForAuthRequiredMessage","CancelAttemptTime","Request","AwaitingGltResponse","GLTResponsePosRefId","SpiModels_createClass","response","spiMessage","state","SubmitAuthCodeResult","validFormat","ValidFormat","SpiConfig","PromptForCustomerCopyOnEftpos","SignatureFlowOnEftpos","PrintMerchantCopy","messageData","prompt_for_customer_copy","print_for_signature_required_transactions","print_merchant_copy","TransactionOptions","_customerReceiptHeader","_customerReceiptFooter","_merchantReceiptHeader","_merchantReceiptFooter","customerReceiptHeader","customerReceiptFooter","merchantReceiptHeader","merchantReceiptFooter","customer_receipt_header","customer_receipt_footer","merchant_receipt_header","merchant_receipt_footer","__RequestIdHelperCounter","RequestIdHelper","RequestIdHelper_classCallCheck","RequestIdHelper_createClass","prefix","PairRequest","Pairing_classCallCheck","Pairing_createClass","KeyResponse","requestId","Benc","Bhmac","RequestId","DropKeysRequest","encKey","hmacKey","Secrets_classCallCheck","Secrets_createClass","localStorage","setItem","getItem","removeItem","DiffieHellman","DiffieHellman_classCallCheck","DiffieHellman_createClass","maxValue","maxValueBN","shiftDistance","floor","random","randBitInt","privateKey","aHex","gHex","montPrime","theirPublicKey","yourPrivateKey","bHex","AHex","GROUP14_2048_BIT_MODP","PairingHelper","PairingHelper_classCallCheck","PairingHelper_createClass","keyRequest","encPubAndSec","_calculateMyPublicKeyAndSecret","Aenc","MyPublicKey","Senc","SharedSecretKey","hmacPubAndSec","Ahmac","Shmac","SecretsAndKeyResponse","keyResponse","diffieHellman","myPrivateBI","RandomPrivateKey","myPublicBI","PublicKey","secretBI","Secret","secret","DHSecretToSPISecret","PublicKeyAndSecret","padStart","GenerateHash","myPublicKey","sharedSecretKey","ConnectionState","Disconnected","Connecting","Connected","SPI_PROTOCOL","ConnectionStateEventArgs","connectionState","Connection_classCallCheck","MessageEventArgs","Connection","Address","State","SpiProtocol","_ws","WebSocket","Connection_createClass","UseSecureWebSockets","_this","onopen","pollWebSocketConnection","onmessage","payload","onMessageReceived","onclose","onClosed","onerror","err","onError","document","dispatchEvent","CustomEvent","detail","readyState","CLOSED","close","send","_this2","count","arguments","OPEN","onOpened","setTimeout","Disconnect","PurchaseRequest","Purchase_classCallCheck","PurchaseAmount","TipAmount","CashoutAmount","PromptForCashout","SurchargeAmount","Config","Options","Purchase_createClass","toFixed","pos_ref_id","purchase_amount","tip_amount","cash_amount","prompt_for_cashout","surcharge_amount","addReceiptConfig","AddOptions","PurchaseResponse","_m","SchemeName","scheme_name","SchemeAppName","GetSuccessState","rrn","bank_noncash_amount","bank_cash_amount","customer_receipt","merchant_receipt","host_response_text","host_response_code","terminal_ref_id","card_entry","account_type","auth_code","bank_date","bank_time","masked_pan","terminal_id","merchant_receipt_printed","customer_receipt_printed","dateStr","bank_settlement_date","ParseBankDate","attribute","GetAccountType","GetAuthCode","GetBankDate","GetBankTime","GetResponseCode","GetResponseText","GetMaskedPan","GetPurchaseAmount","GetRRN","GetTerminalId","GetTerminalReferenceId","GetTipAmount","GetSurchargeAmount","CancelTransactionRequest","CancelTransactionResponse","GetLastTransactionRequest","GetLastTransactionResponse","GetError","startsWith","WasOperationInProgressError","GetPosRefId","transaction_type","amount_purchase","amount_transaction_type","cr","mr","RefundRequest","isSuppressMerchantPassword","IsSuppressMerchantPassword","refund_amount","suppress_merchant_password","RefundResponse","SignatureRequired","_receiptToSign","receiptToSign","SignatureDecline","SignatureAccept","MotoPurchaseRequest","surchargeAmount","MotoPurchaseResponse","PhoneForAuthRequired","_len","args","_key","_phoneNumber","_merchantId","auth_centre_phone_number","merchant_id","AuthCodeAdvice","authCode","AuthCode","BillStatusResponse","PayAtTable_classCallCheck","Result","BillId","TableId","TotalAmount","OutstandingAmount","BillData","PayAtTable_createClass","map","bill","PaymentHistoryEntry","payment_type","payment_summary","messageId","BillRetrievalResult","SUCCESS","bill_id","table_id","bill_total_amount","bill_outstanding_amount","bill_payment_history","getBillPaymentHistory","INVALID_TABLE_ID","INVALID_BILL_ID","INVALID_OPERATOR_ID","paymentType","paymentSummary","PaymentType","PaymentSummary","PayAtTableConfig","PayAtTabledEnabled","OperatorIdEnabled","SplitByAmountEnabled","EqualSplitEnabled","TippingEnabled","SummaryReportEnabled","LabelPayButton","LabelOperatorId","LabelTableId","AllowedOperatorIds","pay_at_table_enabled","operator_id_enabled","split_by_amount_enabled","equal_split_enabled","tipping_enabled","summary_report_enabled","pay_button_label","operator_id_label","table_id_label","operator_id_list","SpiPayAtTable","spi","SpiPayAtTable_classCallCheck","_spi","_log","console","assign","SpiPayAtTable_createClass","billId","tableId","operatorId","Exception","billPayment","updatedBillData","_send","ToMessage","billStatus","GetBillStatus","info","BillPayment","_incomingAdvice","OperatorId","pt","purchaseMsg","existingBillStatus","warn","existingPaymentHistory","find","phe","GetTerminalRefId","updatedHistoryEntries","toLowerCase","ToPaymentSummary","ToBillData","updatedBillStatus","BillPaymentReceived","PreauthEvents","AccountVerifyRequest","Preauth_classCallCheck","Preauth_createClass","PreauthOpenRequest","PreauthAmount","preauth_amount","PreauthTopupRequest","preauthId","topupAmountCents","PreauthId","TopupAmount","preauth_id","topup_amount","PreauthPartialCancellationRequest","partialCancellationAmountCents","PartialCancellationAmount","preauth_cancel_amount","PreauthExtendRequest","PreauthCancelRequest","PreauthCompletionRequest","completionAmountCents","CompletionAmount","completion_amount","SpiPreauth","SpiPreauth_classCallCheck","SpiPreauth_createClass","verifyMsg","tfs","_initiatePreauthTx","sentMsg","CurrentStatus","CurrentFlow","CurrentTxFlowState","Sent","_handleAccountVerifyResponse","_handlePreauthResponse","incomingPosRefId","currentTxFlowState","Completed","CashoutOnlyRequest","Cashout_classCallCheck","Cashout_createClass","CashoutOnlyResponse","SettleRequest","Settlement_classCallCheck","Settlement_createClass","Settlement","accumulated_settle_by_acquirer_count","accumulated_settle_by_acquirer_value","accumulated_total_count","accumulated_total_value","timeStr","settlement_period_start_time","settlement_period_start_date","ParseBankDateTimeStr","settlement_period_end_time","settlement_period_end_date","settlement_triggered_time","settlement_triggered_date","transaction_range","schemes","scheme","SchemeSettlementEntry","SettleByAcquirer","settle_by_acquirer","TotalValue","total_value","TotalCount","total_count","SettlementEnquiryRequest","SetPosInfoRequest","version","vendorId","libraryLanguage","libraryVersion","otherInfo","PosInfo_classCallCheck","_version","_vendorId","_libraryLanguage","_libraryVersion","_otherInfo","PosInfo_createClass","pos_version","pos_vendor_id","library_language","library_version","other_info","SetPosInfoResponse","_success","DeviceInfo","deviceInfo","navigator","userAgent","PurchaseHelper","PurchaseHelper_classCallCheck","PurchaseHelper_createClass","purchaseId","purchaseAmount","tipAmount","cashoutAmount","promptForCashout","KeyRollingHelper","KeyRollingHelper_classCallCheck","KeyRollingHelper_createClass","krRequest","currentSecrets","status","newSecrets","KeyRollingResult","keyRollingConfirmation","KeyRollingConfirmation","NewSecrets","PongHelper","PingHelper_classCallCheck","PingHelper_createClass","ping","PingHelper","DeviceAddressStatus","useSecureWebSockets","DeviceService_classCallCheck","ip","fqdn","last_updated","DeviceService_createClass","address","addreses","DeviceAddressService","serialNumber","apiKey","acquirerCode","isSecureConnection","isTestMode","path","deviceAddressUri","fetch","method","headers","ASM-MSP-DEVICE-ADDRESS-API-KEY","then","json","catch","error","StatusCode","PrintingRequest","Printing_classCallCheck","_payload","Printing_createClass","PrintingResponse","Printer","element","_render","innerText","scrollTop","scrollHeight","TerminalStatusRequest","TerminalStatus_classCallCheck","TerminalStatus_createClass","TerminalStatusResponse","battery_level","charging","TerminalBattery","BatteryLevel","Spi","eftposAddress","Spi_classCallCheck","_posId","_serialNumber","_secrets","_forceSecureWebSockets","_eftposAddress","CurrentDeviceStatus","_deviceApiKey","_acquirerCode","_inTestMode","_autoAddressResolutionEnabled","_spiMessageStamp","_posVendorId","_posVersion","_hasSetInfo","_mostRecentPingSent","_mostRecentPongReceived","_missedPongsCount","_retriesSinceLastDeviceAddressResolution","_mostRecentLoginResponse","_pongTimeout","_pingFrequency","_readyToTransact","_periodicPingThread","_txMonitorCheckFrequency","_checkOnTxFrequency","_maxWaitForCancelTx","_sleepBeforeReconnectMs","_missedPongsToDisconnect","_retriesBeforeResolvingDeviceAddress","CurrentPairingFlowState","_currentStatus","_spiPat","_spiPreauth","Warn","_resetConn","_startTransactionMonitoringThread","_conn","Connect","deviceApiKey","was","HasSerialNumberChanged","_autoResolveEftposAddress","autoAddressResolutionEnable","testMode","posVendorId","posVersion","PairingFlowState","AwaitingCheckFromEftpos","AwaitingCheckFromPos","ConfirmationCode","Successful","_onPairingSuccess","_onReadyToTransact","_onPairingFailed","_doUnpair","purchaseRequest","CreatePurchaseRequest","options","purchase","CreatePurchaseRequestV2","AmountSummary","refundRequest","CreateRefundRequest","refundMsg","accepted","SignatureResponded","AuthCodeSent","cancelReq","Cancelling","cashoutOnlyRequest","cashoutMsg","motoPurchaseRequest","settleRequestMsg","stlEnqMsg","gltRequestMsg","txType","gltResponse","GltMatch","toMessage","GenerateSecretsAndKeyResponse","KeyRequest","keyCheck","KeyCheck","substring","pairResp","PairResponse","_startPeriodicPing","krRes","PerformKeyRolling","phoneForAuthRequired","GetPhoneNumber","GetMerchantId","_callGetLastTransaction","txState","GotGltResponse","gtlResponse","WasRetrievedSuccessfully","CopyMerchantReceiptToCustomerReceipt","successState","UnknownCompleted","IsStillInProgress","IsWaitingForSignatureResponse","IsWaitingForAuthCode","WasTimeOutOfSyncError","cancelResponse","GetErrorReason","GetErrorDetail","CancelFailed","isSuccess","getErrorReason","getErrorDetail","needsPublishing","CallingGlt","BatteryLevelChanged","_isUsingHttps","addEventListener","_onSpiConnectionStatusChanged","_onSpiMessageReceived","_onWsErrorReceived","_this3","pr","NewPairRequest","_stopPeriodicPing","_this4","setInterval","_periodicPing","_this5","_doPing","_callSetPosInfo","PushPayAtTableConfig","setPosInfoRequest","GetAppDeviceInfo","clearInterval","GeneratePingRequest","_mostRecentPingSentTime","GetServerTimeDelta","debug","pong","GeneratePongRessponse","gltRequest","messageJson","FromJson","IsPreauthEvent","_handlePreauthMessage","_handleKeyRequest","_handleKeyCheck","_handlePairResponse","_handleDropKeysAdvice","_handlePurchaseResponse","_handleRefundResponse","_handleCashoutOnlyResponse","_handleMotoPurchaseResponse","_handleSignatureRequired","_handleAuthCodeRequired","_handleGetLastTransactionResponse","HandleSettleResponse","_handleSettlementEnquiryResponse","_handleIncomingPing","_handleIncomingPong","_handleKeyRollingRequest","_handleCancelTransactionResponse","_handleSetPosInfoResponse","FeatureDisableMessage","_handleGetTableConfig","_handleGetBillDetailsRequest","_handleBillPaymentAdvice","_handlePrintingResponse","_handleTerminalStatusResponse","_handleBatteryLevelChanged","_handleErrorEvent","ToJson","Send","updatedSerialNumber","updatedEftposAddress","_this6","service","RetrieveService","deviceAddressStatus","HasEftposAddressChanged","protocol","location","Logger","lineSeperator","Logger_classCallCheck","_len2","_key2","_len3","_key3","_len4","_key4","_len5","_key5","log","__webpack_exports__","Spi_Spi","SpiModels_SpiFlow","SpiModels_SpiStatus","Printing_PrintingResponse","Purchase_RefundResponse","Purchase_PurchaseResponse","Purchase_GetLastTransactionResponse","Cashout_CashoutOnlyResponse","Settlement_Settlement"],"mappings":"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AApN,EAAA,mBAAAoN,EAAApN,EAAA,mBAAAoN,EAAApN,EAAA,mBAAAoN,EAAApN,EAAA,mBAAAoN,EAAApN,EAAA,mBAAAoN,EAAApN,EAAA,mBAAAoN,EAAApN,EAAA,mBAAAoN,EAAApN,EAAA,oBAAAoN,EAAApN,EAAA,oBAAAoN,EAAApN,EAAA,oBAAAoN,EAAApN,EAAA,mBAAAoN,EAAApN,EAAA,mBAAAoN,EAAApN,EAAA,oBAAAoN,EAAApN,EAAA,oBAAAoN,EAAApN,EAAA,mBAAAoN,EAAApN,EAAA,gBACnE,IAAAoN,EAAApN,EAAA,oBAAAoN,EAAApN,EAAA,oBAAAoN,EAAApN,EAAA,oBAAAoN,EAAApN,EAAA,oBAAAoN,EAAApN,EAAA,oBAAAoN,EAAApN,EAAA,oBAAAoN,EAAApN,EAAA,mBAAAoN,EAAApN,EAAA,oBAAAoN,EAAApN,EAAA,oBAAAoN,EAAApN,EAAA,oBAAAoN,EAAApN,EAAA,oBAAAoN,EAAApN,EAAA,oBAAAoN,EAAApN,EAAA,mBAAAoN,EAAApN,EAAA,oBAAAoN,EAAApN,EAAA,oBAAAoN,EAAApN,EAAA,oBAAAoN,EAAApN,EAAA,oBAAAoN,EAAApN,EAAA,oBAAAoN,EAAApN,EAAA,oBAAAoN,EAAApN,EAAA,oBAAAoN,EAAApN,EAAA,eACA,IAAAoN,EAAApN,EAAA,oBAAAoN,EAAApN,EAAA,oBAAAoN,EAAApN,EAAA,oBAAAoN,EAAApN,EAAA,mBAAAoN,EAAApN,EAAA,oBAAAoN,EAAApN,EAAA,oBAAAoN,EAAApN,EAAA,oBAAAoN,EAAApN,EAAA,mBAAAoN,EAAApN,EAAA,oBAAAoN,EAAApN,EAAA,oBAAAoN,EAAApN,EAAA,oBAAAoN,EAAApN,EAAA,oBAAAoN,EAAApN,EAAA,oBAAAoN,EAAApN,EAAA,oBAAAoN,EAAApN,EAAA,oBAAAoN,EAAApN,EAAA,oBAAAoN,EAAApN,EAAA,oBAAAoN,EAAApN,EAAA,oBAAAoN,EAAApN,EAAA,oBAAAoN,EAAApN,EAAA,mBAAAoN,EAAApN,EAAA,mBAAAoN,EAAApN,EAAA,IACA,gBAAAoN,EAAApN,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","file":"spi-client-js.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","(function(root) {\n    \"use strict\";\n\n    function checkInt(value) {\n        return (parseInt(value) === value);\n    }\n\n    function checkInts(arrayish) {\n        if (!checkInt(arrayish.length)) { return false; }\n\n        for (var i = 0; i < arrayish.length; i++) {\n            if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function coerceArray(arg, copy) {\n\n        // ArrayBuffer view\n        if (arg.buffer && ArrayBuffer.isView(arg) && arg.name === 'Uint8Array') {\n\n            if (copy) {\n                if (arg.slice) {\n                    arg = arg.slice();\n                } else {\n                    arg = Array.prototype.slice.call(arg);\n                }\n            }\n\n            return arg;\n        }\n\n        // It's an array; check it is a valid representation of a byte\n        if (Array.isArray(arg)) {\n            if (!checkInts(arg)) {\n                throw new Error('Array contains invalid value: ' + arg);\n            }\n\n            return new Uint8Array(arg);\n        }\n\n        // Something else, but behaves like an array (maybe a Buffer? Arguments?)\n        if (checkInt(arg.length) && checkInts(arg)) {\n            return new Uint8Array(arg);\n        }\n\n        throw new Error('unsupported array-like object');\n    }\n\n    function createArray(length) {\n        return new Uint8Array(length);\n    }\n\n    function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {\n        if (sourceStart != null || sourceEnd != null) {\n            if (sourceArray.slice) {\n                sourceArray = sourceArray.slice(sourceStart, sourceEnd);\n            } else {\n                sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);\n            }\n        }\n        targetArray.set(sourceArray, targetStart);\n    }\n\n\n\n    var convertUtf8 = (function() {\n        function toBytes(text) {\n            var result = [], i = 0;\n            text = encodeURI(text);\n            while (i < text.length) {\n                var c = text.charCodeAt(i++);\n\n                // if it is a % sign, encode the following 2 bytes as a hex value\n                if (c === 37) {\n                    result.push(parseInt(text.substr(i, 2), 16))\n                    i += 2;\n\n                // otherwise, just the actual byte\n                } else {\n                    result.push(c)\n                }\n            }\n\n            return coerceArray(result);\n        }\n\n        function fromBytes(bytes) {\n            var result = [], i = 0;\n\n            while (i < bytes.length) {\n                var c = bytes[i];\n\n                if (c < 128) {\n                    result.push(String.fromCharCode(c));\n                    i++;\n                } else if (c > 191 && c < 224) {\n                    result.push(String.fromCharCode(((c & 0x1f) << 6) | (bytes[i + 1] & 0x3f)));\n                    i += 2;\n                } else {\n                    result.push(String.fromCharCode(((c & 0x0f) << 12) | ((bytes[i + 1] & 0x3f) << 6) | (bytes[i + 2] & 0x3f)));\n                    i += 3;\n                }\n            }\n\n            return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n    var convertHex = (function() {\n        function toBytes(text) {\n            var result = [];\n            for (var i = 0; i < text.length; i += 2) {\n                result.push(parseInt(text.substr(i, 2), 16));\n            }\n\n            return result;\n        }\n\n        // http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html\n        var Hex = '0123456789abcdef';\n\n        function fromBytes(bytes) {\n                var result = [];\n                for (var i = 0; i < bytes.length; i++) {\n                    var v = bytes[i];\n                    result.push(Hex[(v & 0xf0) >> 4] + Hex[v & 0x0f]);\n                }\n                return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n\n    // Number of rounds by keysize\n    var numberOfRounds = {16: 10, 24: 12, 32: 14}\n\n    // Round constant words\n    var rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];\n\n    // S-box and Inverse S-box (S is for Substitution)\n    var S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\n    var Si =[0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];\n\n    // Transformations for encryption\n    var T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\n    var T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\n    var T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\n    var T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];\n\n    // Transformations for decryption\n    var T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\n    var T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\n    var T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\n    var T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];\n\n    // Transformations for decryption key expansion\n    var U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\n    var U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\n    var U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\n    var U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\n\n    function convertToInt32(bytes) {\n        var result = [];\n        for (var i = 0; i < bytes.length; i += 4) {\n            result.push(\n                (bytes[i    ] << 24) |\n                (bytes[i + 1] << 16) |\n                (bytes[i + 2] <<  8) |\n                 bytes[i + 3]\n            );\n        }\n        return result;\n    }\n\n    var AES = function(key) {\n        if (!(this instanceof AES)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        Object.defineProperty(this, 'key', {\n            value: coerceArray(key, true)\n        });\n\n        this._prepare();\n    }\n\n\n    AES.prototype._prepare = function() {\n\n        var rounds = numberOfRounds[this.key.length];\n        if (rounds == null) {\n            throw new Error('invalid key size (must be 16, 24 or 32 bytes)');\n        }\n\n        // encryption round keys\n        this._Ke = [];\n\n        // decryption round keys\n        this._Kd = [];\n\n        for (var i = 0; i <= rounds; i++) {\n            this._Ke.push([0, 0, 0, 0]);\n            this._Kd.push([0, 0, 0, 0]);\n        }\n\n        var roundKeyCount = (rounds + 1) * 4;\n        var KC = this.key.length / 4;\n\n        // convert the key into ints\n        var tk = convertToInt32(this.key);\n\n        // copy values into round key arrays\n        var index;\n        for (var i = 0; i < KC; i++) {\n            index = i >> 2;\n            this._Ke[index][i % 4] = tk[i];\n            this._Kd[rounds - index][i % 4] = tk[i];\n        }\n\n        // key expansion (fips-197 section 5.2)\n        var rconpointer = 0;\n        var t = KC, tt;\n        while (t < roundKeyCount) {\n            tt = tk[KC - 1];\n            tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^\n                      (S[(tt >>  8) & 0xFF] << 16) ^\n                      (S[ tt        & 0xFF] <<  8) ^\n                       S[(tt >> 24) & 0xFF]        ^\n                      (rcon[rconpointer] << 24));\n            rconpointer += 1;\n\n            // key expansion (for non-256 bit)\n            if (KC != 8) {\n                for (var i = 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n\n            // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n            } else {\n                for (var i = 1; i < (KC / 2); i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n                tt = tk[(KC / 2) - 1];\n\n                tk[KC / 2] ^= (S[ tt        & 0xFF]        ^\n                              (S[(tt >>  8) & 0xFF] <<  8) ^\n                              (S[(tt >> 16) & 0xFF] << 16) ^\n                              (S[(tt >> 24) & 0xFF] << 24));\n\n                for (var i = (KC / 2) + 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n            }\n\n            // copy values into round key arrays\n            var i = 0, r, c;\n            while (i < KC && t < roundKeyCount) {\n                r = t >> 2;\n                c = t % 4;\n                this._Ke[r][c] = tk[i];\n                this._Kd[rounds - r][c] = tk[i++];\n                t++;\n            }\n        }\n\n        // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n        for (var r = 1; r < rounds; r++) {\n            for (var c = 0; c < 4; c++) {\n                tt = this._Kd[r][c];\n                this._Kd[r][c] = (U1[(tt >> 24) & 0xFF] ^\n                                  U2[(tt >> 16) & 0xFF] ^\n                                  U3[(tt >>  8) & 0xFF] ^\n                                  U4[ tt        & 0xFF]);\n            }\n        }\n    }\n\n    AES.prototype.encrypt = function(plaintext) {\n        if (plaintext.length != 16) {\n            throw new Error('invalid plaintext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Ke.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(plaintext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Ke[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T1[(t[ i         ] >> 24) & 0xff] ^\n                        T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n                        T3[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T4[ t[(i + 3) % 4]        & 0xff] ^\n                        this._Ke[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Ke[rounds][i];\n            result[4 * i    ] = (S[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (S[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (S[ t[(i + 3) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n    AES.prototype.decrypt = function(ciphertext) {\n        if (ciphertext.length != 16) {\n            throw new Error('invalid ciphertext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Kd.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(ciphertext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Kd[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T5[(t[ i          ] >> 24) & 0xff] ^\n                        T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n                        T7[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T8[ t[(i + 1) % 4]        & 0xff] ^\n                        this._Kd[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Kd[rounds][i];\n            result[4 * i    ] = (Si[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (Si[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (Si[ t[(i + 1) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n\n    /**\n     *  Mode Of Operation - Electonic Codebook (ECB)\n     */\n    var ModeOfOperationECB = function(key) {\n        if (!(this instanceof ModeOfOperationECB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Electronic Code Block\";\n        this.name = \"ecb\";\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationECB.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n            block = this._aes.encrypt(block);\n            copyArray(block, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationECB.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n            copyArray(block, plaintext, i);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Block Chaining (CBC)\n     */\n    var ModeOfOperationCBC = function(key, iv) {\n        if (!(this instanceof ModeOfOperationCBC)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Block Chaining\";\n        this.name = \"cbc\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastCipherblock = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCBC.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n\n            for (var j = 0; j < 16; j++) {\n                block[j] ^= this._lastCipherblock[j];\n            }\n\n            this._lastCipherblock = this._aes.encrypt(block);\n            copyArray(this._lastCipherblock, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationCBC.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n\n            for (var j = 0; j < 16; j++) {\n                plaintext[i + j] = block[j] ^ this._lastCipherblock[j];\n            }\n\n            copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Feedback (CFB)\n     */\n    var ModeOfOperationCFB = function(key, iv, segmentSize) {\n        if (!(this instanceof ModeOfOperationCFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Feedback\";\n        this.name = \"cfb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 size)');\n        }\n\n        if (!segmentSize) { segmentSize = 1; }\n\n        this.segmentSize = segmentSize;\n\n        this._shiftRegister = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCFB.prototype.encrypt = function(plaintext) {\n        if ((plaintext.length % this.segmentSize) != 0) {\n            throw new Error('invalid plaintext size (must be segmentSize bytes)');\n        }\n\n        var encrypted = coerceArray(plaintext, true);\n\n        var xorSegment;\n        for (var i = 0; i < encrypted.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n            for (var j = 0; j < this.segmentSize; j++) {\n                encrypted[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return encrypted;\n    }\n\n    ModeOfOperationCFB.prototype.decrypt = function(ciphertext) {\n        if ((ciphertext.length % this.segmentSize) != 0) {\n            throw new Error('invalid ciphertext size (must be segmentSize bytes)');\n        }\n\n        var plaintext = coerceArray(ciphertext, true);\n\n        var xorSegment;\n        for (var i = 0; i < plaintext.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n\n            for (var j = 0; j < this.segmentSize; j++) {\n                plaintext[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return plaintext;\n    }\n\n    /**\n     *  Mode Of Operation - Output Feedback (OFB)\n     */\n    var ModeOfOperationOFB = function(key, iv) {\n        if (!(this instanceof ModeOfOperationOFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Output Feedback\";\n        this.name = \"ofb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastPrecipher = coerceArray(iv, true);\n        this._lastPrecipherIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationOFB.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._lastPrecipherIndex === 16) {\n                this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);\n                this._lastPrecipherIndex = 0;\n            }\n            encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;\n\n\n    /**\n     *  Counter object for CTR common mode of operation\n     */\n    var Counter = function(initialValue) {\n        if (!(this instanceof Counter)) {\n            throw Error('Counter must be instanitated with `new`');\n        }\n\n        // We allow 0, but anything false-ish uses the default 1\n        if (initialValue !== 0 && !initialValue) { initialValue = 1; }\n\n        if (typeof(initialValue) === 'number') {\n            this._counter = createArray(16);\n            this.setValue(initialValue);\n\n        } else {\n            this.setBytes(initialValue);\n        }\n    }\n\n    Counter.prototype.setValue = function(value) {\n        if (typeof(value) !== 'number' || parseInt(value) != value) {\n            throw new Error('invalid counter value (must be an integer)');\n        }\n\n        // We cannot safely handle numbers beyond the safe range for integers\n        if (value > Number.MAX_SAFE_INTEGER) {\n            throw new Error('integer value out of safe range');\n        }\n\n        for (var index = 15; index >= 0; --index) {\n            this._counter[index] = value % 256;\n            value = parseInt(value / 256);\n        }\n    }\n\n    Counter.prototype.setBytes = function(bytes) {\n        bytes = coerceArray(bytes, true);\n\n        if (bytes.length != 16) {\n            throw new Error('invalid counter bytes size (must be 16 bytes)');\n        }\n\n        this._counter = bytes;\n    };\n\n    Counter.prototype.increment = function() {\n        for (var i = 15; i >= 0; i--) {\n            if (this._counter[i] === 255) {\n                this._counter[i] = 0;\n            } else {\n                this._counter[i]++;\n                break;\n            }\n        }\n    }\n\n\n    /**\n     *  Mode Of Operation - Counter (CTR)\n     */\n    var ModeOfOperationCTR = function(key, counter) {\n        if (!(this instanceof ModeOfOperationCTR)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Counter\";\n        this.name = \"ctr\";\n\n        if (!(counter instanceof Counter)) {\n            counter = new Counter(counter)\n        }\n\n        this._counter = counter;\n\n        this._remainingCounter = null;\n        this._remainingCounterIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCTR.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._remainingCounterIndex === 16) {\n                this._remainingCounter = this._aes.encrypt(this._counter._counter);\n                this._remainingCounterIndex = 0;\n                this._counter.increment();\n            }\n            encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;\n\n\n    ///////////////////////\n    // Padding\n\n    // See:https://tools.ietf.org/html/rfc2315\n    function pkcs7pad(data) {\n        data = coerceArray(data, true);\n        var padder = 16 - (data.length % 16);\n        var result = createArray(data.length + padder);\n        copyArray(data, result);\n        for (var i = data.length; i < result.length; i++) {\n            result[i] = padder;\n        }\n        return result;\n    }\n\n    function pkcs7strip(data) {\n        data = coerceArray(data, true);\n        if (data.length < 16) { throw new Error('PKCS#7 invalid length'); }\n\n        var padder = data[data.length - 1];\n        if (padder > 16) { throw new Error('PKCS#7 padding byte out of range'); }\n\n        var length = data.length - padder;\n        for (var i = 0; i < padder; i++) {\n            if (data[length + i] !== padder) {\n                throw new Error('PKCS#7 invalid padding byte');\n            }\n        }\n\n        var result = createArray(length);\n        copyArray(data, result, 0, 0, length);\n        return result;\n    }\n\n    ///////////////////////\n    // Exporting\n\n\n    // The block cipher\n    var aesjs = {\n        AES: AES,\n        Counter: Counter,\n\n        ModeOfOperation: {\n            ecb: ModeOfOperationECB,\n            cbc: ModeOfOperationCBC,\n            cfb: ModeOfOperationCFB,\n            ofb: ModeOfOperationOFB,\n            ctr: ModeOfOperationCTR\n        },\n\n        utils: {\n            hex: convertHex,\n            utf8: convertUtf8\n        },\n\n        padding: {\n            pkcs7: {\n                pad: pkcs7pad,\n                strip: pkcs7strip\n            }\n        },\n\n        _arrayTest: {\n            coerceArray: coerceArray,\n            createArray: createArray,\n            copyArray: copyArray,\n        }\n    };\n\n\n    // node.js\n    if (typeof exports !== 'undefined') {\n        module.exports = aesjs\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(aesjs);\n\n    // Web Browsers\n    } else {\n\n        // If there was an existing library at \"aesjs\" make sure it's still available\n        if (root.aesjs) {\n            aesjs._aesjs = root.aesjs;\n        }\n\n        root.aesjs = aesjs;\n    }\n\n\n})(this);\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","/*\n A JavaScript implementation of the SHA family of hashes, as\n defined in FIPS PUB 180-4 and FIPS PUB 202, as well as the corresponding\n HMAC implementation as defined in FIPS PUB 198a\n\n Copyright Brian Turek 2008-2017\n Distributed under the BSD License\n See http://caligatio.github.com/jsSHA/ for more information\n\n Several functions taken from Paul Johnston\n*/\n'use strict';(function(Y){function C(c,a,b){var e=0,h=[],n=0,g,l,d,f,m,q,u,r,I=!1,v=[],w=[],t,y=!1,z=!1,x=-1;b=b||{};g=b.encoding||\"UTF8\";t=b.numRounds||1;if(t!==parseInt(t,10)||1>t)throw Error(\"numRounds must a integer >= 1\");if(\"SHA-1\"===c)m=512,q=K,u=Z,f=160,r=function(a){return a.slice()};else if(0===c.lastIndexOf(\"SHA-\",0))if(q=function(a,b){return L(a,b,c)},u=function(a,b,h,e){var k,f;if(\"SHA-224\"===c||\"SHA-256\"===c)k=(b+65>>>9<<4)+15,f=16;else if(\"SHA-384\"===c||\"SHA-512\"===c)k=(b+129>>>10<<\n5)+31,f=32;else throw Error(\"Unexpected error in SHA-2 implementation\");for(;a.length<=k;)a.push(0);a[b>>>5]|=128<<24-b%32;b=b+h;a[k]=b&4294967295;a[k-1]=b/4294967296|0;h=a.length;for(b=0;b<h;b+=f)e=L(a.slice(b,b+f),e,c);if(\"SHA-224\"===c)a=[e[0],e[1],e[2],e[3],e[4],e[5],e[6]];else if(\"SHA-256\"===c)a=e;else if(\"SHA-384\"===c)a=[e[0].a,e[0].b,e[1].a,e[1].b,e[2].a,e[2].b,e[3].a,e[3].b,e[4].a,e[4].b,e[5].a,e[5].b];else if(\"SHA-512\"===c)a=[e[0].a,e[0].b,e[1].a,e[1].b,e[2].a,e[2].b,e[3].a,e[3].b,e[4].a,\ne[4].b,e[5].a,e[5].b,e[6].a,e[6].b,e[7].a,e[7].b];else throw Error(\"Unexpected error in SHA-2 implementation\");return a},r=function(a){return a.slice()},\"SHA-224\"===c)m=512,f=224;else if(\"SHA-256\"===c)m=512,f=256;else if(\"SHA-384\"===c)m=1024,f=384;else if(\"SHA-512\"===c)m=1024,f=512;else throw Error(\"Chosen SHA variant is not supported\");else if(0===c.lastIndexOf(\"SHA3-\",0)||0===c.lastIndexOf(\"SHAKE\",0)){var F=6;q=D;r=function(a){var c=[],e;for(e=0;5>e;e+=1)c[e]=a[e].slice();return c};x=1;if(\"SHA3-224\"===\nc)m=1152,f=224;else if(\"SHA3-256\"===c)m=1088,f=256;else if(\"SHA3-384\"===c)m=832,f=384;else if(\"SHA3-512\"===c)m=576,f=512;else if(\"SHAKE128\"===c)m=1344,f=-1,F=31,z=!0;else if(\"SHAKE256\"===c)m=1088,f=-1,F=31,z=!0;else throw Error(\"Chosen SHA variant is not supported\");u=function(a,c,e,b,h){e=m;var k=F,f,g=[],n=e>>>5,l=0,d=c>>>5;for(f=0;f<d&&c>=e;f+=n)b=D(a.slice(f,f+n),b),c-=e;a=a.slice(f);for(c%=e;a.length<n;)a.push(0);f=c>>>3;a[f>>2]^=k<<f%4*8;a[n-1]^=2147483648;for(b=D(a,b);32*g.length<h;){a=b[l%\n5][l/5|0];g.push(a.b);if(32*g.length>=h)break;g.push(a.a);l+=1;0===64*l%e&&D(null,b)}return g}}else throw Error(\"Chosen SHA variant is not supported\");d=M(a,g,x);l=A(c);this.setHMACKey=function(a,b,h){var k;if(!0===I)throw Error(\"HMAC key already set\");if(!0===y)throw Error(\"Cannot set HMAC key after calling update\");if(!0===z)throw Error(\"SHAKE is not supported for HMAC\");g=(h||{}).encoding||\"UTF8\";b=M(b,g,x)(a);a=b.binLen;b=b.value;k=m>>>3;h=k/4-1;if(k<a/8){for(b=u(b,a,0,A(c),f);b.length<=h;)b.push(0);\nb[h]&=4294967040}else if(k>a/8){for(;b.length<=h;)b.push(0);b[h]&=4294967040}for(a=0;a<=h;a+=1)v[a]=b[a]^909522486,w[a]=b[a]^1549556828;l=q(v,l);e=m;I=!0};this.update=function(a){var c,b,k,f=0,g=m>>>5;c=d(a,h,n);a=c.binLen;b=c.value;c=a>>>5;for(k=0;k<c;k+=g)f+m<=a&&(l=q(b.slice(k,k+g),l),f+=m);e+=f;h=b.slice(f>>>5);n=a%m;y=!0};this.getHash=function(a,b){var k,g,d,m;if(!0===I)throw Error(\"Cannot call getHash after setting HMAC key\");d=N(b);if(!0===z){if(-1===d.shakeLen)throw Error(\"shakeLen must be specified in options\");\nf=d.shakeLen}switch(a){case \"HEX\":k=function(a){return O(a,f,x,d)};break;case \"B64\":k=function(a){return P(a,f,x,d)};break;case \"BYTES\":k=function(a){return Q(a,f,x)};break;case \"ARRAYBUFFER\":try{g=new ArrayBuffer(0)}catch(p){throw Error(\"ARRAYBUFFER not supported by this environment\");}k=function(a){return R(a,f,x)};break;default:throw Error(\"format must be HEX, B64, BYTES, or ARRAYBUFFER\");}m=u(h.slice(),n,e,r(l),f);for(g=1;g<t;g+=1)!0===z&&0!==f%32&&(m[m.length-1]&=16777215>>>24-f%32),m=u(m,f,\n0,A(c),f);return k(m)};this.getHMAC=function(a,b){var k,g,d,p;if(!1===I)throw Error(\"Cannot call getHMAC without first setting HMAC key\");d=N(b);switch(a){case \"HEX\":k=function(a){return O(a,f,x,d)};break;case \"B64\":k=function(a){return P(a,f,x,d)};break;case \"BYTES\":k=function(a){return Q(a,f,x)};break;case \"ARRAYBUFFER\":try{k=new ArrayBuffer(0)}catch(v){throw Error(\"ARRAYBUFFER not supported by this environment\");}k=function(a){return R(a,f,x)};break;default:throw Error(\"outputFormat must be HEX, B64, BYTES, or ARRAYBUFFER\");\n}g=u(h.slice(),n,e,r(l),f);p=q(w,A(c));p=u(g,f,m,p,f);return k(p)}}function b(c,a){this.a=c;this.b=a}function O(c,a,b,e){var h=\"\";a/=8;var n,g,d;d=-1===b?3:0;for(n=0;n<a;n+=1)g=c[n>>>2]>>>8*(d+n%4*b),h+=\"0123456789abcdef\".charAt(g>>>4&15)+\"0123456789abcdef\".charAt(g&15);return e.outputUpper?h.toUpperCase():h}function P(c,a,b,e){var h=\"\",n=a/8,g,d,p,f;f=-1===b?3:0;for(g=0;g<n;g+=3)for(d=g+1<n?c[g+1>>>2]:0,p=g+2<n?c[g+2>>>2]:0,p=(c[g>>>2]>>>8*(f+g%4*b)&255)<<16|(d>>>8*(f+(g+1)%4*b)&255)<<8|p>>>8*(f+\n(g+2)%4*b)&255,d=0;4>d;d+=1)8*g+6*d<=a?h+=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".charAt(p>>>6*(3-d)&63):h+=e.b64Pad;return h}function Q(c,a,b){var e=\"\";a/=8;var h,d,g;g=-1===b?3:0;for(h=0;h<a;h+=1)d=c[h>>>2]>>>8*(g+h%4*b)&255,e+=String.fromCharCode(d);return e}function R(c,a,b){a/=8;var e,h=new ArrayBuffer(a),d,g;g=new Uint8Array(h);d=-1===b?3:0;for(e=0;e<a;e+=1)g[e]=c[e>>>2]>>>8*(d+e%4*b)&255;return h}function N(c){var a={outputUpper:!1,b64Pad:\"=\",shakeLen:-1};c=c||{};\na.outputUpper=c.outputUpper||!1;!0===c.hasOwnProperty(\"b64Pad\")&&(a.b64Pad=c.b64Pad);if(!0===c.hasOwnProperty(\"shakeLen\")){if(0!==c.shakeLen%8)throw Error(\"shakeLen must be a multiple of 8\");a.shakeLen=c.shakeLen}if(\"boolean\"!==typeof a.outputUpper)throw Error(\"Invalid outputUpper formatting option\");if(\"string\"!==typeof a.b64Pad)throw Error(\"Invalid b64Pad formatting option\");return a}function M(c,a,b){switch(a){case \"UTF8\":case \"UTF16BE\":case \"UTF16LE\":break;default:throw Error(\"encoding must be UTF8, UTF16BE, or UTF16LE\");\n}switch(c){case \"HEX\":c=function(a,c,d){var g=a.length,l,p,f,m,q,u;if(0!==g%2)throw Error(\"String of HEX type must be in byte increments\");c=c||[0];d=d||0;q=d>>>3;u=-1===b?3:0;for(l=0;l<g;l+=2){p=parseInt(a.substr(l,2),16);if(isNaN(p))throw Error(\"String of HEX type contains invalid characters\");m=(l>>>1)+q;for(f=m>>>2;c.length<=f;)c.push(0);c[f]|=p<<8*(u+m%4*b)}return{value:c,binLen:4*g+d}};break;case \"TEXT\":c=function(c,h,d){var g,l,p=0,f,m,q,u,r,t;h=h||[0];d=d||0;q=d>>>3;if(\"UTF8\"===a)for(t=-1===\nb?3:0,f=0;f<c.length;f+=1)for(g=c.charCodeAt(f),l=[],128>g?l.push(g):2048>g?(l.push(192|g>>>6),l.push(128|g&63)):55296>g||57344<=g?l.push(224|g>>>12,128|g>>>6&63,128|g&63):(f+=1,g=65536+((g&1023)<<10|c.charCodeAt(f)&1023),l.push(240|g>>>18,128|g>>>12&63,128|g>>>6&63,128|g&63)),m=0;m<l.length;m+=1){r=p+q;for(u=r>>>2;h.length<=u;)h.push(0);h[u]|=l[m]<<8*(t+r%4*b);p+=1}else if(\"UTF16BE\"===a||\"UTF16LE\"===a)for(t=-1===b?2:0,l=\"UTF16LE\"===a&&1!==b||\"UTF16LE\"!==a&&1===b,f=0;f<c.length;f+=1){g=c.charCodeAt(f);\n!0===l&&(m=g&255,g=m<<8|g>>>8);r=p+q;for(u=r>>>2;h.length<=u;)h.push(0);h[u]|=g<<8*(t+r%4*b);p+=2}return{value:h,binLen:8*p+d}};break;case \"B64\":c=function(a,c,d){var g=0,l,p,f,m,q,u,r,t;if(-1===a.search(/^[a-zA-Z0-9=+\\/]+$/))throw Error(\"Invalid character in base-64 string\");p=a.indexOf(\"=\");a=a.replace(/\\=/g,\"\");if(-1!==p&&p<a.length)throw Error(\"Invalid '=' found in base-64 string\");c=c||[0];d=d||0;u=d>>>3;t=-1===b?3:0;for(p=0;p<a.length;p+=4){q=a.substr(p,4);for(f=m=0;f<q.length;f+=1)l=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".indexOf(q[f]),\nm|=l<<18-6*f;for(f=0;f<q.length-1;f+=1){r=g+u;for(l=r>>>2;c.length<=l;)c.push(0);c[l]|=(m>>>16-8*f&255)<<8*(t+r%4*b);g+=1}}return{value:c,binLen:8*g+d}};break;case \"BYTES\":c=function(a,c,d){var g,l,p,f,m,q;c=c||[0];d=d||0;p=d>>>3;q=-1===b?3:0;for(l=0;l<a.length;l+=1)g=a.charCodeAt(l),m=l+p,f=m>>>2,c.length<=f&&c.push(0),c[f]|=g<<8*(q+m%4*b);return{value:c,binLen:8*a.length+d}};break;case \"ARRAYBUFFER\":try{c=new ArrayBuffer(0)}catch(e){throw Error(\"ARRAYBUFFER not supported by this environment\");}c=\nfunction(a,c,d){var g,l,p,f,m,q;c=c||[0];d=d||0;l=d>>>3;m=-1===b?3:0;q=new Uint8Array(a);for(g=0;g<a.byteLength;g+=1)f=g+l,p=f>>>2,c.length<=p&&c.push(0),c[p]|=q[g]<<8*(m+f%4*b);return{value:c,binLen:8*a.byteLength+d}};break;default:throw Error(\"format must be HEX, TEXT, B64, BYTES, or ARRAYBUFFER\");}return c}function y(c,a){return c<<a|c>>>32-a}function S(c,a){return 32<a?(a-=32,new b(c.b<<a|c.a>>>32-a,c.a<<a|c.b>>>32-a)):0!==a?new b(c.a<<a|c.b>>>32-a,c.b<<a|c.a>>>32-a):c}function w(c,a){return c>>>\na|c<<32-a}function t(c,a){var k=null,k=new b(c.a,c.b);return k=32>=a?new b(k.a>>>a|k.b<<32-a&4294967295,k.b>>>a|k.a<<32-a&4294967295):new b(k.b>>>a-32|k.a<<64-a&4294967295,k.a>>>a-32|k.b<<64-a&4294967295)}function T(c,a){var k=null;return k=32>=a?new b(c.a>>>a,c.b>>>a|c.a<<32-a&4294967295):new b(0,c.a>>>a-32)}function aa(c,a,b){return c&a^~c&b}function ba(c,a,k){return new b(c.a&a.a^~c.a&k.a,c.b&a.b^~c.b&k.b)}function U(c,a,b){return c&a^c&b^a&b}function ca(c,a,k){return new b(c.a&a.a^c.a&k.a^a.a&\nk.a,c.b&a.b^c.b&k.b^a.b&k.b)}function da(c){return w(c,2)^w(c,13)^w(c,22)}function ea(c){var a=t(c,28),k=t(c,34);c=t(c,39);return new b(a.a^k.a^c.a,a.b^k.b^c.b)}function fa(c){return w(c,6)^w(c,11)^w(c,25)}function ga(c){var a=t(c,14),k=t(c,18);c=t(c,41);return new b(a.a^k.a^c.a,a.b^k.b^c.b)}function ha(c){return w(c,7)^w(c,18)^c>>>3}function ia(c){var a=t(c,1),k=t(c,8);c=T(c,7);return new b(a.a^k.a^c.a,a.b^k.b^c.b)}function ja(c){return w(c,17)^w(c,19)^c>>>10}function ka(c){var a=t(c,19),k=t(c,61);\nc=T(c,6);return new b(a.a^k.a^c.a,a.b^k.b^c.b)}function G(c,a){var b=(c&65535)+(a&65535);return((c>>>16)+(a>>>16)+(b>>>16)&65535)<<16|b&65535}function la(c,a,b,e){var h=(c&65535)+(a&65535)+(b&65535)+(e&65535);return((c>>>16)+(a>>>16)+(b>>>16)+(e>>>16)+(h>>>16)&65535)<<16|h&65535}function H(c,a,b,e,h){var d=(c&65535)+(a&65535)+(b&65535)+(e&65535)+(h&65535);return((c>>>16)+(a>>>16)+(b>>>16)+(e>>>16)+(h>>>16)+(d>>>16)&65535)<<16|d&65535}function ma(c,a){var d,e,h;d=(c.b&65535)+(a.b&65535);e=(c.b>>>16)+\n(a.b>>>16)+(d>>>16);h=(e&65535)<<16|d&65535;d=(c.a&65535)+(a.a&65535)+(e>>>16);e=(c.a>>>16)+(a.a>>>16)+(d>>>16);return new b((e&65535)<<16|d&65535,h)}function na(c,a,d,e){var h,n,g;h=(c.b&65535)+(a.b&65535)+(d.b&65535)+(e.b&65535);n=(c.b>>>16)+(a.b>>>16)+(d.b>>>16)+(e.b>>>16)+(h>>>16);g=(n&65535)<<16|h&65535;h=(c.a&65535)+(a.a&65535)+(d.a&65535)+(e.a&65535)+(n>>>16);n=(c.a>>>16)+(a.a>>>16)+(d.a>>>16)+(e.a>>>16)+(h>>>16);return new b((n&65535)<<16|h&65535,g)}function oa(c,a,d,e,h){var n,g,l;n=(c.b&\n65535)+(a.b&65535)+(d.b&65535)+(e.b&65535)+(h.b&65535);g=(c.b>>>16)+(a.b>>>16)+(d.b>>>16)+(e.b>>>16)+(h.b>>>16)+(n>>>16);l=(g&65535)<<16|n&65535;n=(c.a&65535)+(a.a&65535)+(d.a&65535)+(e.a&65535)+(h.a&65535)+(g>>>16);g=(c.a>>>16)+(a.a>>>16)+(d.a>>>16)+(e.a>>>16)+(h.a>>>16)+(n>>>16);return new b((g&65535)<<16|n&65535,l)}function B(c,a){return new b(c.a^a.a,c.b^a.b)}function A(c){var a=[],d;if(\"SHA-1\"===c)a=[1732584193,4023233417,2562383102,271733878,3285377520];else if(0===c.lastIndexOf(\"SHA-\",0))switch(a=\n[3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428],d=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],c){case \"SHA-224\":break;case \"SHA-256\":a=d;break;case \"SHA-384\":a=[new b(3418070365,a[0]),new b(1654270250,a[1]),new b(2438529370,a[2]),new b(355462360,a[3]),new b(1731405415,a[4]),new b(41048885895,a[5]),new b(3675008525,a[6]),new b(1203062813,a[7])];break;case \"SHA-512\":a=[new b(d[0],4089235720),new b(d[1],2227873595),\nnew b(d[2],4271175723),new b(d[3],1595750129),new b(d[4],2917565137),new b(d[5],725511199),new b(d[6],4215389547),new b(d[7],327033209)];break;default:throw Error(\"Unknown SHA variant\");}else if(0===c.lastIndexOf(\"SHA3-\",0)||0===c.lastIndexOf(\"SHAKE\",0))for(c=0;5>c;c+=1)a[c]=[new b(0,0),new b(0,0),new b(0,0),new b(0,0),new b(0,0)];else throw Error(\"No SHA variants supported\");return a}function K(c,a){var b=[],e,d,n,g,l,p,f;e=a[0];d=a[1];n=a[2];g=a[3];l=a[4];for(f=0;80>f;f+=1)b[f]=16>f?c[f]:y(b[f-\n3]^b[f-8]^b[f-14]^b[f-16],1),p=20>f?H(y(e,5),d&n^~d&g,l,1518500249,b[f]):40>f?H(y(e,5),d^n^g,l,1859775393,b[f]):60>f?H(y(e,5),U(d,n,g),l,2400959708,b[f]):H(y(e,5),d^n^g,l,3395469782,b[f]),l=g,g=n,n=y(d,30),d=e,e=p;a[0]=G(e,a[0]);a[1]=G(d,a[1]);a[2]=G(n,a[2]);a[3]=G(g,a[3]);a[4]=G(l,a[4]);return a}function Z(c,a,b,e){var d;for(d=(a+65>>>9<<4)+15;c.length<=d;)c.push(0);c[a>>>5]|=128<<24-a%32;a+=b;c[d]=a&4294967295;c[d-1]=a/4294967296|0;a=c.length;for(d=0;d<a;d+=16)e=K(c.slice(d,d+16),e);return e}function L(c,\na,k){var e,h,n,g,l,p,f,m,q,u,r,t,v,w,y,A,z,x,F,B,C,D,E=[],J;if(\"SHA-224\"===k||\"SHA-256\"===k)u=64,t=1,D=Number,v=G,w=la,y=H,A=ha,z=ja,x=da,F=fa,C=U,B=aa,J=d;else if(\"SHA-384\"===k||\"SHA-512\"===k)u=80,t=2,D=b,v=ma,w=na,y=oa,A=ia,z=ka,x=ea,F=ga,C=ca,B=ba,J=V;else throw Error(\"Unexpected error in SHA-2 implementation\");k=a[0];e=a[1];h=a[2];n=a[3];g=a[4];l=a[5];p=a[6];f=a[7];for(r=0;r<u;r+=1)16>r?(q=r*t,m=c.length<=q?0:c[q],q=c.length<=q+1?0:c[q+1],E[r]=new D(m,q)):E[r]=w(z(E[r-2]),E[r-7],A(E[r-15]),E[r-\n16]),m=y(f,F(g),B(g,l,p),J[r],E[r]),q=v(x(k),C(k,e,h)),f=p,p=l,l=g,g=v(n,m),n=h,h=e,e=k,k=v(m,q);a[0]=v(k,a[0]);a[1]=v(e,a[1]);a[2]=v(h,a[2]);a[3]=v(n,a[3]);a[4]=v(g,a[4]);a[5]=v(l,a[5]);a[6]=v(p,a[6]);a[7]=v(f,a[7]);return a}function D(c,a){var d,e,h,n,g=[],l=[];if(null!==c)for(e=0;e<c.length;e+=2)a[(e>>>1)%5][(e>>>1)/5|0]=B(a[(e>>>1)%5][(e>>>1)/5|0],new b(c[e+1],c[e]));for(d=0;24>d;d+=1){n=A(\"SHA3-\");for(e=0;5>e;e+=1){h=a[e][0];var p=a[e][1],f=a[e][2],m=a[e][3],q=a[e][4];g[e]=new b(h.a^p.a^f.a^\nm.a^q.a,h.b^p.b^f.b^m.b^q.b)}for(e=0;5>e;e+=1)l[e]=B(g[(e+4)%5],S(g[(e+1)%5],1));for(e=0;5>e;e+=1)for(h=0;5>h;h+=1)a[e][h]=B(a[e][h],l[e]);for(e=0;5>e;e+=1)for(h=0;5>h;h+=1)n[h][(2*e+3*h)%5]=S(a[e][h],W[e][h]);for(e=0;5>e;e+=1)for(h=0;5>h;h+=1)a[e][h]=B(n[e][h],new b(~n[(e+1)%5][h].a&n[(e+2)%5][h].a,~n[(e+1)%5][h].b&n[(e+2)%5][h].b));a[0][0]=B(a[0][0],X[d])}return a}var d,V,W,X;d=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,\n1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,\n2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];V=[new b(d[0],3609767458),new b(d[1],602891725),new b(d[2],3964484399),new b(d[3],2173295548),new b(d[4],4081628472),new b(d[5],3053834265),new b(d[6],2937671579),new b(d[7],3664609560),new b(d[8],2734883394),new b(d[9],1164996542),new b(d[10],1323610764),new b(d[11],3590304994),new b(d[12],4068182383),new b(d[13],991336113),new b(d[14],633803317),new b(d[15],3479774868),new b(d[16],2666613458),new b(d[17],944711139),new b(d[18],2341262773),\nnew b(d[19],2007800933),new b(d[20],1495990901),new b(d[21],1856431235),new b(d[22],3175218132),new b(d[23],2198950837),new b(d[24],3999719339),new b(d[25],766784016),new b(d[26],2566594879),new b(d[27],3203337956),new b(d[28],1034457026),new b(d[29],2466948901),new b(d[30],3758326383),new b(d[31],168717936),new b(d[32],1188179964),new b(d[33],1546045734),new b(d[34],1522805485),new b(d[35],2643833823),new b(d[36],2343527390),new b(d[37],1014477480),new b(d[38],1206759142),new b(d[39],344077627),\nnew b(d[40],1290863460),new b(d[41],3158454273),new b(d[42],3505952657),new b(d[43],106217008),new b(d[44],3606008344),new b(d[45],1432725776),new b(d[46],1467031594),new b(d[47],851169720),new b(d[48],3100823752),new b(d[49],1363258195),new b(d[50],3750685593),new b(d[51],3785050280),new b(d[52],3318307427),new b(d[53],3812723403),new b(d[54],2003034995),new b(d[55],3602036899),new b(d[56],1575990012),new b(d[57],1125592928),new b(d[58],2716904306),new b(d[59],442776044),new b(d[60],593698344),new b(d[61],\n3733110249),new b(d[62],2999351573),new b(d[63],3815920427),new b(3391569614,3928383900),new b(3515267271,566280711),new b(3940187606,3454069534),new b(4118630271,4000239992),new b(116418474,1914138554),new b(174292421,2731055270),new b(289380356,3203993006),new b(460393269,320620315),new b(685471733,587496836),new b(852142971,1086792851),new b(1017036298,365543100),new b(1126000580,2618297676),new b(1288033470,3409855158),new b(1501505948,4234509866),new b(1607167915,987167468),new b(1816402316,\n1246189591)];X=[new b(0,1),new b(0,32898),new b(2147483648,32906),new b(2147483648,2147516416),new b(0,32907),new b(0,2147483649),new b(2147483648,2147516545),new b(2147483648,32777),new b(0,138),new b(0,136),new b(0,2147516425),new b(0,2147483658),new b(0,2147516555),new b(2147483648,139),new b(2147483648,32905),new b(2147483648,32771),new b(2147483648,32770),new b(2147483648,128),new b(0,32778),new b(2147483648,2147483658),new b(2147483648,2147516545),new b(2147483648,32896),new b(0,2147483649),\nnew b(2147483648,2147516424)];W=[[0,36,3,41,18],[1,44,10,45,2],[62,6,43,15,61],[28,55,25,21,56],[27,20,39,8,14]];\"function\"===typeof define&&define.amd?define(function(){return C}):\"undefined\"!==typeof exports?(\"undefined\"!==typeof module&&module.exports&&(module.exports=C),exports=C):Y.jsSHA=C})(this);\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import jsSHA from 'jssha';\r\nimport aesjs from 'aes-js';\r\n\r\nexport class Crypto {\r\n    \r\n    constructor() {\r\n\r\n    }\r\n\r\n    // <summary>\r\n    // Encrypt a block using CBC and PKCS7.\r\n    // </summary>\r\n    // <param name=\"key\">The key value</param>\r\n    // <param name=\"data\">The message to encrypt</param>\r\n    // <returns>Returns the resulting encrypted string data as HEX.</returns>\r\n    static AesEncrypt (key, data) {\r\n        let bytes = aesjs.utils.hex.toBytes(key);\r\n        const iv = [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ];\r\n        const textBytes = aesjs.padding.pkcs7.pad(aesjs.utils.utf8.toBytes(data));\r\n        const aesCbc = new aesjs.ModeOfOperation.cbc(bytes, iv);\r\n        const encryptedBytes = aesCbc.encrypt(textBytes);\r\n        const encryptedString = aesjs.utils.hex.fromBytes(encryptedBytes);\r\n\r\n        return encryptedString;\r\n    }\r\n    \r\n    // <summary>\r\n    // Decrypt a block using a CBC and PKCS7.\r\n    // </summary>\r\n    // <param name=\"key\">The key value</param>\r\n    // <param name=\"data\">the data to decrypt</param>\r\n    // <returns>Returns the resulting data decrypted in plaintext.</returns>\r\n    static AesDecrypt(key, data) {\r\n        let bytes = aesjs.utils.hex.toBytes(key);\r\n        const iv = [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ];\r\n        const encryptedBytes = aesjs.utils.hex.toBytes(data);\r\n        const aesCbc = new aesjs.ModeOfOperation.cbc(bytes, iv);\r\n        const decryptedBytes = aesCbc.decrypt(encryptedBytes);\r\n        const decrypted = aesjs.utils.utf8.fromBytes(aesjs.padding.pkcs7.strip(decryptedBytes));\r\n    \r\n        return decrypted;\r\n    }\r\n\r\n    // <summary>\r\n    // Calculates the HMACSHA256 signature of a message.\r\n    // </summary>\r\n    // <param name=\"key\">The Hmac Key as HEX</param>\r\n    // <param name=\"messageToSign\">The message to sign</param>\r\n    // <returns>The HMACSHA256 signature as a hex string</returns>\r\n    static HmacSignature(key, messageToSign) {\r\n        let shaObj = new jsSHA(\"SHA-256\", \"TEXT\");\r\n\r\n        shaObj.setHMACKey(key,'HEX');\r\n        shaObj.update(messageToSign);\r\n        \r\n        return shaObj.getHMAC(\"HEX\");\r\n    }\r\n\r\n\r\n    /**\r\n     * This utility function calculates the SHA-256 value in hexadecimal format\r\n     * @param {String} value the value to be hashed\r\n     */\r\n    static GenerateHash(value) {\r\n        let shaObj = new jsSHA('SHA-256', 'HEX');\r\n        shaObj.update(value);\r\n        const shaHash = shaObj.getHash('HEX');\r\n        return shaHash;\r\n    }\r\n}\r\n","import {Crypto} from './Crypto';\r\n\r\n// <summary>\r\n// Events statically declares the various event names in messages.\r\n// </summary>\r\nexport const Events = {\r\n     PairRequest : \"pair_request\",\r\n     KeyRequest : \"key_request\",\r\n     KeyResponse : \"key_response\",\r\n     KeyCheck : \"key_check\",\r\n     PairResponse : \"pair_response\",\r\n     DropKeysAdvice : \"drop_keys\",\r\n\r\n     LoginRequest : \"login_request\",\r\n     LoginResponse : \"login_response\",\r\n\r\n     Ping : \"ping\",\r\n     Pong : \"pong\",\r\n\r\n     PurchaseRequest : \"purchase\",\r\n     PurchaseResponse : \"purchase_response\",\r\n     CancelTransactionRequest : \"cancel_transaction\",\r\n     CancelTransactionResponse : \"cancel_response\",\r\n     GetLastTransactionRequest : \"get_last_transaction\",\r\n     GetLastTransactionResponse : \"last_transaction\",\r\n     RefundRequest : \"refund\",\r\n     RefundResponse : \"refund_response\",\r\n     SignatureRequired : \"signature_required\",\r\n     SignatureDeclined : \"signature_decline\",\r\n     SignatureAccepted : \"signature_accept\",\r\n     AuthCodeRequired : \"authorisation_code_required\",\r\n     AuthCodeAdvice : \"authorisation_code_advice\",\r\n\r\n     CashoutOnlyRequest : \"cash\",\r\n     CashoutOnlyResponse : \"cash_response\",\r\n\r\n     MotoPurchaseRequest : \"moto_purchase\",\r\n     MotoPurchaseResponse : \"moto_purchase_response\",\r\n\r\n     SettleRequest : \"settle\",\r\n     SettleResponse : \"settle_response\",\r\n     SettlementEnquiryRequest : \"settlement_enquiry\",\r\n     SettlementEnquiryResponse : \"settlement_enquiry_response\",\r\n\r\n     SetPosInfoRequest : \"set_pos_info\",\r\n     SetPosInfoResponse : \"set_pos_info_response\",\r\n\r\n     KeyRollRequest : \"request_use_next_keys\",\r\n     KeyRollResponse : \"response_use_next_keys\",\r\n\r\n     Error : \"error\",\r\n    \r\n     InvalidHmacSignature : \"_INVALID_SIGNATURE_\",\r\n\r\n    // Pay At Table Related Messages\r\n    PayAtTableGetTableConfig : \"get_table_config\", // incoming. When eftpos wants to ask us for P@T configuration.\r\n    PayAtTableSetTableConfig : \"set_table_config\", // outgoing. When we want to instruct eftpos with the P@T configuration.\r\n    PayAtTableGetBillDetails : \"get_bill_details\", // incoming. When eftpos wants to aretrieve the bill for a table.\r\n    PayAtTableBillDetails : \"bill_details\",        // outgoing. We reply with this when eftpos requests to us get_bill_details.\r\n    PayAtTableBillPayment : \"bill_payment\",        // incoming. When the eftpos advices \r\n\r\n    PrintingRequest : \"print\",\r\n    PrintingResponse : \"print_response\",\r\n\r\n    TerminalStatusRequest : \"get_terminal_status\",\r\n    TerminalStatusResponse : \"terminal_status\",\r\n\r\n    BatteryLevelChanged : \"battery_level_changed\"\r\n};\r\n\r\nexport const SuccessState = {\r\n    Unknown: 'Unknown', Success: 'Success', Failed: 'Failed'\r\n};\r\n\r\n// <summary>\r\n// MessageStamp represents what is required to turn an outgoing Message into Json\r\n// including encryption and date setting.\r\n// </summary>\r\nexport class MessageStamp {\r\n    constructor(posId, secrets, serverTimeDelta) {\r\n        this.PosId = posId;\r\n        this.Secrets = secrets;\r\n        this.ServerTimeDelta = serverTimeDelta;\r\n    }\r\n}\r\n\r\n// <summary>\r\n// MessageEnvelope represents the outer structure of any message that is exchanged\r\n// between the Pos and the PinPad and vice-versa.\r\n// See http://www.simplepaymentapi.com/#/api/message-encryption\r\n// </summary>\r\nexport class MessageEnvelope {\r\n    constructor(message, enc, hmac, posId) {\r\n        // <summary>\r\n        // The Message field is set only when in Un-encrypted form.\r\n        // In fact it is the only field in an envelope in the Un-Encrypted form.\r\n        // </summary>\r\n        this.Message = message;\r\n\r\n        // <summary>\r\n        // The enc field is set only when in Encrypted form.\r\n        // It contains the encrypted Json of another MessageEnvelope \r\n        // </summary>\r\n        this.Enc = enc;\r\n\r\n        // <summary>\r\n        // The hmac field is set only when in Encrypted form.\r\n        // It is the signature of the \"enc\" field.\r\n        // </summary>\r\n        this.Hmac = hmac;\r\n\r\n        // <summary>\r\n        // The pos_id field is only filled for outgoing Encrypted messages.\r\n        // </summary>\r\n        this.PosId = posId;\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            message: this.Message,\r\n            enc: this.Enc,\r\n            hmac: this.Hmac,\r\n            pos_id: this.PosId\r\n        }\r\n    }\r\n}\r\n\r\n// <summary>\r\n// Message represents the contents of a Message.\r\n// See http://www.simplepaymentapi.com/#/api/message-encryption\r\n// </summary>\r\nexport class Message {\r\n    constructor(id, eventName, data, needsEncryption) {\r\n        this.Id = id;\r\n        this.EventName = eventName;\r\n        this.Data = data;\r\n        this.DateTimeStamp = '';\r\n        this.PosId = ''; // Pos_id is set here only for outgoing Un-encrypted messages. \r\n        this.IncommingHmac = ''; // Sometimes the logic around the incoming message might need access to the sugnature, for example in the key_check.\r\n        this._needsEncryption = needsEncryption; // Denotes whether an outgoing message needs to be encrypted in ToJson()\r\n        this.DecryptedJson = ''; // Set on an incoming message just so you can have a look at what it looked like in its json form.\r\n    }\r\n\r\n    GetSuccessState() {\r\n        if(!this.Data || typeof this.Data.success === \"undefined\") {\r\n            return SuccessState.Unknown;\r\n        }\r\n\r\n        return this.Data.success ? SuccessState.Success : SuccessState.Failed;\r\n    }\r\n\r\n    GetError() {\r\n        return this.Data.error_reason ? this.Data.error_reason : \"\";\r\n    }\r\n\r\n    GetErrorDetail() {\r\n        return this.Data.error_detail;\r\n    }\r\n\r\n    GetServerTimeDelta()\r\n    {\r\n        let now = Date.now();\r\n        \r\n        // Stamp format: 2018-04-19T01:42:38.279\r\n        let dts = this.DateTimeStamp.split(/[\\-\\+\\. :T]/);\r\n        let msgTime = new Date(\r\n            // year, month, date\r\n            dts[0], dts[1] - 1, dts[2],\r\n            // hour, minute, second, millis\r\n            dts[3], dts[4], dts[5], dts[6]\r\n        ).getTime(); // Local time zone\r\n\r\n        return msgTime - now;\r\n    }\r\n\r\n    // Helper method to parse bank date format 20042018 (ddMMyyyy)\r\n    static ParseBankDate(bankDate) {\r\n        if(bankDate.length !== 8) return null;\r\n\r\n        return new Date(`${bankDate.substr(4,4)}-${bankDate.substr(2,2)}-${bankDate.substr(0,2)}`);\r\n    }\r\n\r\n    // Parses a bank date & time str from \"05Oct17\" / \"05:00\" (\"ddMMMyy/HH:mm\") into date obj\r\n    static ParseBankDateTimeStr(date, time) {\r\n        return new Date(`${date.substr(0,2)} ${date.substr(2,3)} ${date.substr(5,2)} ${time}`);\r\n    }\r\n\r\n    static FromJson(msgJson, secrets) {\r\n        let env = JSON.parse(msgJson);\r\n\r\n        if(env.message != null) {\r\n            let message = new Message(env.message.id, env.message.event, env.message.data, false);\r\n            message.DecryptedJson = msgJson;\r\n            return message;\r\n        }\r\n\r\n        if (secrets == null)\r\n        {\r\n            // This may happen if we somehow received an encrypted message from eftpos but we're not configered with secrets.\r\n            // For example, if we cancel the pairing process a little late in the game and we get an encrypted key_check message after we've dropped the keys.\r\n            return new Message(\"UNKNOWN\", \"NOSECRETS\", null, false);\r\n        }\r\n\r\n        // Its encrypted, verify sig\r\n        let sig = Crypto.HmacSignature(secrets.HmacKey, env.enc);\r\n        if (sig.toUpperCase() != env.hmac) {\r\n            return new Message(\"_\", Events.InvalidHmacSignature, null, false);\r\n        }\r\n\r\n        let decryptedJson = Crypto.AesDecrypt(secrets.EncKey, env.enc);\r\n\r\n        try {\r\n            let decryptedMsg = JSON.parse(decryptedJson);\r\n\r\n            let message = new Message(decryptedMsg.message.id, decryptedMsg.message.event, decryptedMsg.message.data, true);\r\n\r\n            message.DateTimeStamp = decryptedMsg.message.datetime;\r\n            message.PosId = decryptedMsg.message.pos_id;\r\n            message.IncomingHmac = env.hmac; \r\n            message.DecryptedJson = decryptedJson;\r\n\r\n            return message;\r\n\r\n        } catch(e) {\r\n            return new Message(\"UNKNOWN\", \"UNPARSEABLE\", {\"msg\": decryptedJson}, false);\r\n        }\r\n    }\r\n\r\n    ToJson(stamp) {\r\n        let now = Date.now();\r\n        let tzoffset = new Date().getTimezoneOffset() * 60 * 1000;\r\n        let adjustedTime = new Date(now - tzoffset + stamp.ServerTimeDelta);\r\n\r\n        // Format date: \"yyyy-MM-ddTHH:mm:ss.fff\"\r\n        this.DateTimeStamp = adjustedTime.toISOString().slice(0,-1);\r\n        this.PosId = stamp.PosId;\r\n        \r\n        var envelope = {\r\n            message: {\r\n                id: this.Id,\r\n                event: this.EventName,\r\n                data: this.Data,\r\n                datetime: this.DateTimeStamp\r\n            }\r\n        };\r\n\r\n        if (!this._needsEncryption) {\r\n            // Unencrypted Messages need PosID inside the message\r\n            envelope.message.pos_id = this.PosId\r\n        }\r\n        this.DecryptedJson = JSON.stringify(envelope);\r\n\r\n        if (!this._needsEncryption) {\r\n            return this.DecryptedJson;\r\n        }\r\n\r\n        let encMsg = Crypto.AesEncrypt(stamp.Secrets.EncKey, this.DecryptedJson);\r\n        let hmacSig = Crypto.HmacSignature(stamp.Secrets.HmacKey, encMsg);\r\n        let encrMessageEnvelope = {enc: encMsg, hmac: hmacSig.toUpperCase(), pos_id: stamp.PosId};\r\n\r\n        return JSON.stringify(encrMessageEnvelope);\r\n    }\r\n}\r\n","import {SuccessState} from './Messages';\r\n\r\n// <summary>\r\n// Represents the 3 Pairing statuses that the Spi instanxce can be in.\r\n// </summary>\r\nexport const SpiStatus = \r\n{\r\n    // <summary>\r\n    // Paired and Connected\r\n    // </summary>\r\n    PairedConnected: 'PairedConnected',\r\n    \r\n    // <summary>\r\n    // Paired but trying to establish a connection \r\n    // </summary>\r\n    PairedConnecting: 'PairedConnecting',\r\n    \r\n    // <summary>\r\n    // Unpaired\r\n    // </summary>\r\n    Unpaired: 'Unpaired'\r\n};\r\n\r\n// <summary>\r\n// The Spi instance can be in one of these flows at any point in time.\r\n// </summary>\r\nexport const SpiFlow = \r\n{\r\n    // <summary>\r\n    // Currently going through the Pairing Process Flow.\r\n    // Happens during the Unpaired SpiStatus.\r\n    // </summary>\r\n    Pairing: 'Pairing',\r\n    \r\n    // <summary>\r\n    // Currently going through the transaction Process Flow.\r\n    // Cannot happen in the Unpaired SpiStatus.\r\n    // </summary>\r\n    Transaction: 'Transaction',\r\n\r\n    // <summary>\r\n    // Not in any of the other states.\r\n    // </summary>\r\n    Idle: 'Idle'\r\n};\r\n\r\n// <summary>\r\n// Represents the Pairing Flow State during the pairing process \r\n// </summary>\r\nexport class PairingFlowState\r\n{\r\n    constructor(state) {\r\n        // <summary>\r\n        // Some text that can be displayed in the Pairing Process Screen\r\n        // that indicates what the pairing process is up to.\r\n        // </summary>\r\n        this.Message = null;\r\n\r\n        // <summary>\r\n        // When true, it means that the EFTPOS is shoing the confirmation code,\r\n        // and your user needs to press YES or NO on the EFTPOS.\r\n        // </summary>\r\n        this.AwaitingCheckFromEftpos = null;\r\n        \r\n        // <summary>\r\n        // When true, you need to display the YES/NO buttons on you pairing screen\r\n        // for your user to confirm the code.\r\n        // </summary>\r\n        this.AwaitingCheckFromPos = null;\r\n        \r\n        // <summary>\r\n        // This is the confirmation code for the pairing process.\r\n        // </summary>\r\n        this.ConfirmationCode = null;\r\n        \r\n        // <summary>\r\n        // Indicates whether the Pairing Flow has finished its job.\r\n        // </summary>\r\n        this.Finished = null;\r\n        \r\n        // <summary>\r\n        // Indicates whether pairing was successful or not.\r\n        // </summary>\r\n        this.Successful = null;\r\n\r\n        if(state) {\r\n            Object.assign(this, state);\r\n        }\r\n    }   \r\n}\r\n\r\nexport const TransactionType = \r\n{\r\n    Purchase: 'Purchase',\r\n    Refund: 'Refund',\r\n    CashoutOnly: 'CashoutOnly',\r\n    MOTO: 'MOTO',\r\n    Settle: 'Settle',\r\n    SettlementEnquiry: 'SettlementEnquiry',\r\n    GetLastTransaction: 'GetLastTransaction',\r\n    \r\n    Preauth: 'Preauth',\r\n    AccountVerify: 'AccountVerify'\r\n};\r\n\r\n// <summary>\r\n// Used as a return in the InitiateTx methods to signify whether \r\n// the transaction was initiated or not, and a reason to go with it.\r\n// </summary>\r\nexport class InitiateTxResult\r\n{\r\n    constructor(initiated, message)\r\n    {\r\n        // <summary>\r\n        // Whether the tx was initiated.\r\n        // When true, you can expect updated to your registered callback.\r\n        // When false, you can retry calling the InitiateX method.\r\n        // </summary>\r\n        this.Initiated = initiated;\r\n\r\n        // <summary>\r\n        // Text that gives reason for the Initiated flag, especially in case of false. \r\n        // </summary>\r\n        this.Message = message;\r\n    }\r\n}\r\n\r\n// <summary>\r\n// Used as a return in calls mid transaction to let you know\r\n// whether the call was valid or not.\r\n// These attributes work for COM interop.\r\n// </summary>\r\nexport class MidTxResult\r\n{\r\n    // <summary>\r\n    // This default stucture works for COM interop.\r\n    // </summary>\r\n    constructor(valid, message)\r\n    {\r\n        this.Valid = valid;\r\n        this.Message = message;\r\n    }\r\n}    \r\n\r\n// <summary>\r\n// Represents the State during a TransactionFlow\r\n// </summary>\r\nexport class TransactionFlowState\r\n{\r\n    constructor(posRefId, type, amountCents, message, msg)\r\n    {\r\n        // <summary>\r\n        //  The id given to this transaction\r\n        // </summary>\r\n        this.PosRefId   = posRefId;\r\n        this.Id         = posRefId; // obsolete, but let's maintain it for now, to mean same as PosRefId.\r\n\r\n        // <summary>\r\n        // Purchase/Refund/Settle/...\r\n        // </summary>\r\n        this.Type = type;\r\n\r\n        // <summary>\r\n        // A text message to display on your Transaction Flow Screen\r\n        // </summary>\r\n        this.DisplayMessage = msg;\r\n\r\n        // <summary>\r\n        // Amount in cents for this transaction\r\n        // </summary>\r\n        this.AmountCents = amountCents;\r\n\r\n        // <summary>\r\n        // Whther the request has been sent to the EFTPOS yet or not.\r\n        // In the PairedConnecting state, the transaction is initiated\r\n        // but the request is only sent once the connection is recovered.\r\n        // </summary>\r\n        this.RequestSent = false;\r\n\r\n        // <summary>\r\n        // The time when the request was sent to the EFTPOS.\r\n        // </summary>\r\n        this.RequestTime = null;\r\n                \r\n        // <summary>\r\n        // The time when we last asked for an update, including the original request at first\r\n        // </summary>\r\n        this.LastStateRequestTime = null;\r\n        \r\n        // <summary>\r\n        // Whether we're currently attempting to Cancel the transaction.\r\n        // </summary>\r\n        this.AttemptingToCancel = null;\r\n    \r\n        // <summary>\r\n        // When this flag is on, you need to display the dignature accept/decline buttons in your \r\n        // transaction flow screen.\r\n        // </summary>\r\n        this.AwaitingSignatureCheck = false;\r\n\r\n        // <summary>\r\n        // When this flag is on, you need to show your user the phone number to call to get the authorisation code.\r\n        // Then you need to provide your user means to enter that given code and submit it via SubmitAuthCode().\r\n        // </summary>\r\n        this.AwaitingPhoneForAuth = null;\r\n\r\n        // <summary>\r\n        // Whether this transaction flow is over or not.\r\n        // </summary>\r\n        this.Finished = false;\r\n\r\n        // <summary>\r\n        // The success state of this transaction. Starts off as Unknown.\r\n        // When finished, can be Success, Failed OR Unknown.\r\n        // </summary>\r\n        this.Success = SuccessState.Unknown;\r\n\r\n        // <summary>\r\n        // The response at the end of the transaction. \r\n        // Might not be present in all edge cases.\r\n        // You can then turn this Message into the appropriate structure,\r\n        // such as PurchaseResponse, RefundResponse, etc\r\n        // </summary>\r\n        this.Response = null;\r\n\r\n        // <summary>\r\n        // The message the we received from EFTPOS that told us that signature is required.\r\n        // </summary>\r\n        this.SignatureRequiredMessage = null;\r\n    \r\n        // <summary>\r\n        // The message the we received from EFTPOS that told us that Phone For Auth is required.\r\n        // </summary>\r\n        this.PhoneForAuthRequiredMessage = null;\r\n\r\n        // <summary>\r\n        // The time when the cancel attempt was made.\r\n        // </summary>\r\n        this.CancelAttemptTime = null;\r\n\r\n        // <summary>\r\n        // The request message that we are sending/sent to the server.\r\n        // </summary>\r\n        this.Request = message;\r\n\r\n        // <summary>\r\n        // Whether we're currently waiting for a Get Last Transaction Response to get an update. \r\n        // </summary>\r\n        this.AwaitingGltResponse = null;\r\n\r\n        this.GLTResponsePosRefId = null;\r\n    }\r\n\r\n    Sent(msg)\r\n    {\r\n        this.RequestSent = true;\r\n        this.RequestTime = Date.now();\r\n        this.LastStateRequestTime = Date.now();\r\n        this.DisplayMessage = msg;\r\n    }\r\n\r\n    Cancelling(msg)\r\n    {\r\n        this.AttemptingToCancel = true;\r\n        this.CancelAttemptTime = Date.now();\r\n        this.DisplayMessage = msg;\r\n    }\r\n\r\n    CancelFailed(msg)\r\n    {\r\n        this.AttemptingToCancel = false;\r\n        this.DisplayMessage = msg;\r\n    }\r\n\r\n    CallingGlt()\r\n    {\r\n        this.AwaitingGltResponse = true;\r\n        this.LastStateRequestTime = Date.now();\r\n    }\r\n\r\n    GotGltResponse()\r\n    {\r\n        this.AwaitingGltResponse = false;\r\n    }\r\n    \r\n    Failed(response, msg)\r\n    {\r\n        this.Success = SuccessState.Failed;\r\n        this.Finished = true;\r\n        this.Response = response;\r\n        this.DisplayMessage = msg;\r\n    }\r\n\r\n    SignatureRequired(spiMessage, msg)\r\n    {\r\n        this.SignatureRequiredMessage = spiMessage;\r\n        this.AwaitingSignatureCheck = true;\r\n        this.DisplayMessage = msg;\r\n    }\r\n\r\n    SignatureResponded(msg)\r\n    {\r\n        this.AwaitingSignatureCheck = false;\r\n        this.DisplayMessage = msg;\r\n    }\r\n    \r\n    PhoneForAuthRequired(spiMessage, msg)\r\n    {\r\n        this.PhoneForAuthRequiredMessage = spiMessage;\r\n        this.AwaitingPhoneForAuth = true;\r\n        this.DisplayMessage = msg;\r\n    }\r\n    \r\n    AuthCodeSent(msg)\r\n    {\r\n        this.AwaitingPhoneForAuth = false;\r\n        this.DisplayMessage = msg;\r\n    }\r\n\r\n    Completed(state, response, msg)\r\n    {\r\n        this.Success = state;\r\n        this.Response = response;\r\n        this.Finished = true;\r\n        this.AttemptingToCancel = false;\r\n        this.AwaitingGltResponse = false;\r\n        this.AwaitingSignatureCheck = false;\r\n        this.AwaitingPhoneForAuth = false;\r\n        this.DisplayMessage = msg;\r\n    }\r\n\r\n    UnknownCompleted(msg)\r\n    {\r\n        this.Success = SuccessState.Unknown;\r\n        this.Response = null;\r\n        this.Finished = true;\r\n        this.AttemptingToCancel = false;\r\n        this.AwaitingGltResponse = false;\r\n        this.AwaitingSignatureCheck = false;\r\n        this.AwaitingPhoneForAuth = false;\r\n        this.DisplayMessage = msg;\r\n    }\r\n}\r\n\r\n// <summary>\r\n// Used as a return in the SubmitAuthCode method to signify whether Code is valid\r\n// </summary>\r\nexport class SubmitAuthCodeResult\r\n{\r\n    constructor(validFormat, message)\r\n    {\r\n        this.ValidFormat = validFormat;\r\n\r\n        // <summary>\r\n        // Text that gives reason for Invalidity\r\n        // </summary>\r\n        this.Message = message;\r\n    }\r\n}\r\n\r\nexport class SpiConfig\r\n{\r\n    constructor() {\r\n        this.PromptForCustomerCopyOnEftpos  = false;\r\n        this.SignatureFlowOnEftpos          = false;\r\n        this.PrintMerchantCopy              = false;\r\n    }\r\n\r\n    addReceiptConfig(messageData)\r\n    {\r\n        if (this.PromptForCustomerCopyOnEftpos)\r\n        {\r\n            messageData.prompt_for_customer_copy = this.PromptForCustomerCopyOnEftpos;\r\n        }\r\n        if (this.SignatureFlowOnEftpos)\r\n        {\r\n            messageData.print_for_signature_required_transactions = this.SignatureFlowOnEftpos;\r\n        }\r\n        if (this.PrintMerchantCopy)\r\n        {\r\n            messageData.print_merchant_copy = this.PrintMerchantCopy;\r\n        }\r\n        return messageData;\r\n    }\r\n\r\n    ToString()\r\n    {\r\n        return `PromptForCustomerCopyOnEftpos:${this.PromptForCustomerCopyOnEftpos} SignatureFlowOnEftpos:${this.SignatureFlowOnEftpos} PrintMerchantCopy: ${this.PrintMerchantCopy}`;\r\n    }\r\n}\r\n\r\nexport class TransactionOptions\r\n{\r\n    constructor() {\r\n        this._customerReceiptHeader = null;\r\n        this._customerReceiptFooter = null;\r\n        this._merchantReceiptHeader = null;\r\n        this._merchantReceiptFooter = null;\r\n    }\r\n\r\n    SetCustomerReceiptHeader(customerReceiptHeader)\r\n    {\r\n        this._customerReceiptHeader = customerReceiptHeader;\r\n    }\r\n\r\n    SetCustomerReceiptFooter(customerReceiptFooter)\r\n    {\r\n        this._customerReceiptFooter = customerReceiptFooter;\r\n    }\r\n    SetMerchantReceiptHeader(merchantReceiptHeader)\r\n    {\r\n        this._merchantReceiptHeader = merchantReceiptHeader;\r\n    }\r\n    SetMerchantReceiptFooter(merchantReceiptFooter)\r\n    {\r\n        this._merchantReceiptFooter = merchantReceiptFooter;\r\n    }\r\n    AddOptions(messageData)\r\n    {\r\n        messageData.customer_receipt_header = this._customerReceiptHeader;\r\n        messageData.customer_receipt_footer = this._customerReceiptFooter;\r\n        messageData.merchant_receipt_header = this._merchantReceiptHeader;\r\n        messageData.merchant_receipt_footer = this._merchantReceiptFooter;\r\n\r\n        return messageData;\r\n    }\r\n}","let __RequestIdHelperCounter = 1;\r\n\r\nexport class RequestIdHelper {\r\n    static Id(prefix) {\r\n        return prefix + __RequestIdHelperCounter++;\r\n    }\r\n}\r\n","import {Events, Message} from './Messages';\r\nimport {RequestIdHelper} from './RequestIdHelper';\r\n\r\n// <summary>\r\n// Pairing Interaction 1: Outgoing\r\n// </summary>\r\nexport class PairRequest {\r\n    ToMessage() {\r\n        let data = {padding: true};\r\n        return new Message(RequestIdHelper.Id(\"pr\"), Events.PairRequest, data, false);\r\n    }\r\n}\r\n\r\n// Pairing Interaction 2: Incoming\r\nexport class KeyRequest {\r\n    constructor(m) {\r\n        this.RequestId = m.Id;\r\n        this.Aenc = m.Data.enc.A;\r\n        this.Ahmac = m.Data.hmac.A;\r\n    }\r\n}\r\n\r\n// Pairing Interaction 3: Outgoing\r\nexport class KeyResponse {\r\n    constructor(requestId, Benc, Bhmac) {\r\n        this.RequestId = requestId;\r\n        this.Benc = Benc;\r\n        this.Bhmac = Bhmac;\r\n    }\r\n\r\n    ToMessage() {\r\n        let data = {\r\n            enc: {\r\n                B: this.Benc\r\n            },\r\n            hmac: {\r\n                B: this.Bhmac\r\n            }\r\n        };\r\n\r\n        return new Message(this.RequestId, Events.KeyResponse, data, false);\r\n    }\r\n}\r\n\r\n// Pairing Interaction 4: Incoming\r\nexport class KeyCheck {\r\n    constructor(m) {\r\n        this.ConfirmationCode = m.IncomingHmac.substring(0,6);\r\n    }\r\n}\r\n\r\n// Pairing Interaction 5: Incoming\r\nexport class PairResponse {\r\n    constructor(m) {\r\n        this.Success = m.Data.success;\r\n    }\r\n}\r\n\r\n// Holder class for Secrets and KeyResponse, so that we can use them together in method signatures.\r\nexport class SecretsAndKeyResponse {\r\n    constructor(secrets, keyResponse) {\r\n        this.Secrets = secrets;\r\n        this.KeyResponse = keyResponse;\r\n    }\r\n}\r\n\r\nexport class DropKeysRequest\r\n{\r\n    ToMessage()\r\n    {\r\n        return new Message(RequestIdHelper.Id(\"drpkys\"), Events.DropKeysAdvice, null, true);\r\n    }\r\n}","export class Secrets {\r\n    constructor(encKey, hmacKey) {\r\n        this.EncKey     = encKey;\r\n        this.HmacKey    = hmacKey;\r\n    }\r\n\r\n    static save(EncKey, HmacKey) {\r\n        localStorage.setItem('EncKey', EncKey);\r\n        localStorage.setItem('HmacKey', HmacKey);\r\n    }\r\n\r\n    static restore() {\r\n        return new Secrets(localStorage.getItem('EncKey'), localStorage.getItem('HmacKey'));\r\n    }\r\n\r\n    static isSaved() {\r\n        return localStorage.getItem('EncKey') && localStorage.getItem('HmacKey');\r\n    }\r\n\r\n    static Reset() {\r\n        localStorage.removeItem('EncKey');\r\n        localStorage.removeItem('HmacKey');\r\n    }\r\n}\r\n","import BN from 'bn.js';\r\n\r\n// This creates the private and public keys for diffie-hellman (https://en.wikipedia.org/wiki/Diffie%E2%80%93Hellman_key_exchange#Cryptographic_explanation)\r\n// REQUIREMENTS: bn.js\r\n// ASSUMPTIONS: Inputs to the functions are hexadecimal strings\r\n\r\n// <summary>\r\n// This class implements the Diffie-Hellman algorithm using BigIntegers.\r\n// It can do the 3 main things:\r\n// 1. Generate a random Private Key for you.\r\n// 2. Generate your Public Key based on your Private Key.\r\n// 3. Generate the Secret given their Public Key and your Private Key\r\n// p and g are the shared constants for the algorithm, aka primeP and primeG.\r\n// </summary>\r\nexport class DiffieHellman {\r\n\r\n    constructor () {\r\n\r\n    }\r\n\r\n    // <summary>\r\n    // Generates a random Private Key that you can use.\r\n    // </summary>\r\n    // <param name=\"p\"></param>\r\n    // <returns>Random Private Key</returns>\r\n    RandomPrivateKey(maxValue) {\r\n        let maxValueBN      = new BN(maxValue);\r\n        let shiftDistance   = Math.floor((Math.random() * 1000) + 1);\r\n        let randBitInt      = maxValueBN.shrn(shiftDistance); // Right shift divides by a power of 2\r\n        let min             = new BN(2);\r\n\r\n        if(randBitInt.cmp(min) == -1) {\r\n            return min;\r\n        }\r\n\r\n        return randBitInt;\r\n    }\r\n\r\n    // <summary>\r\n    // Calculates the Public Key from a Private Key.\r\n    // </summary>\r\n    // <param name=\"p\"></param>\r\n    // <param name=\"g\"></param>\r\n    // <param name=\"privateKey\"></param>\r\n    // <returns>Public Key (Hex)</returns>\r\n    PublicKey(p, g, privateKey) {\r\n        const aHex = new BN(privateKey, 16);\r\n        const gHex = new BN(g, 16);\r\n        const montPrime = BN.mont(new BN(p, 16));\r\n        const gRed = gHex.toRed(montPrime);\r\n        const secret = gRed.redPow(aHex).fromRed().toString(16);\r\n\r\n        return secret;  \r\n    }\r\n\r\n    // <summary>\r\n    // Calculates the shared secret given their Public Key (A) and your Private Key (b)\r\n    // </summary>\r\n    // <param name=\"p\"></param>\r\n    // <param name=\"theirPublicKey\"></param>\r\n    // <param name=\"yourPrivateKey\"></param>\r\n    // <returns></returns>\r\n    Secret(p, theirPublicKey, yourPrivateKey) {\r\n        const bHex = new BN(theirPublicKey, 16);\r\n        const AHex = new BN(yourPrivateKey, 16);\r\n        const montPrime = BN.mont(new BN(p, 16));\r\n        const BRed = bHex.toRed(montPrime);\r\n\r\n        return BRed.redPow(AHex).fromRed().toString(16).toUpperCase();\r\n    }\r\n\r\n}\r\n","import {PairRequest, KeyResponse, SecretsAndKeyResponse} from './Pairing';\r\nimport {Secrets} from './Secrets';\r\nimport {Crypto} from './Crypto';\r\nimport {DiffieHellman} from './DiffieHellman';\r\n\r\n// This is the generator used for diffie-hellman in 2048-bit MODP Group 14 as per (https://tools.ietf.org/html/rfc3526#section-3)\r\nexport const GENERATOR = 2;\r\n\r\n// This is the prime used for diffie-hellman using 2048-bit MODP Group 14 as per (https://tools.ietf.org/html/rfc3526#section-3)\r\nexport const GROUP14_2048_BIT_MODP = 'FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3DC2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F83655D23DCA3AD961C62F356208552BB9ED529077096966D670C354E4ABC9804F1746C08CA18217C32905E462E36CE3BE39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9DE2BCBF6955817183995497CEA956AE515D2261898FA051015728E5A8AACAA68FFFFFFFFFFFFFFFF';\r\n\r\n// <summary>\r\n// This static class helps you with the pairing process as documented here:\r\n// http://www.simplepaymentapi.com/#/api/pairing-process\r\n// </summary>\r\nexport class PairingHelper {\r\n    // <summary>\r\n    // Generates a pairing Request.\r\n    // </summary>\r\n    // <returns>New PairRequest</returns>\r\n    static NewPairRequest() {\r\n        return new PairRequest();\r\n    }\r\n\r\n    // <summary>\r\n    // Calculates/Generates Secrets and KeyResponse given an incoming KeyRequest.\r\n    // </summary>\r\n    // <param name=\"keyRequest\"></param>\r\n    // <returns>Secrets and KeyResponse to send back.</returns>\r\n    GenerateSecretsAndKeyResponse(keyRequest) {\r\n        let encPubAndSec = this._calculateMyPublicKeyAndSecret(keyRequest.Aenc);\r\n        let Benc = encPubAndSec.MyPublicKey;\r\n        let Senc = encPubAndSec.SharedSecretKey;\r\n\r\n        let hmacPubAndSec = this._calculateMyPublicKeyAndSecret(keyRequest.Ahmac);\r\n        let Bhmac = hmacPubAndSec.MyPublicKey;\r\n        let Shmac = hmacPubAndSec.SharedSecretKey;\r\n        \r\n        let secrets = new Secrets(Senc, Shmac);\r\n        let keyResponse = new KeyResponse(keyRequest.RequestId, Benc, Bhmac);\r\n\r\n        return new SecretsAndKeyResponse(secrets, keyResponse);\r\n    }\r\n\r\n    // <summary>\r\n    // Turns an incoming \"A\" value from the PinPad into the outgoing \"B\" value \r\n    // and the secret value using DiffieHelmman helper.\r\n    // </summary>\r\n    // <param name=\"theirPublicKey\">The incoming A value</param>\r\n    // <returns>Your B value and the Secret</returns>\r\n    _calculateMyPublicKeyAndSecret(theirPublicKey) {\r\n\r\n        let diffieHellman = new DiffieHellman();\r\n        let myPrivateBI = diffieHellman.RandomPrivateKey(GROUP14_2048_BIT_MODP);\r\n        let myPublicBI = diffieHellman.PublicKey(GROUP14_2048_BIT_MODP, GENERATOR, myPrivateBI);\r\n        let secretBI = diffieHellman.Secret(GROUP14_2048_BIT_MODP, theirPublicKey, myPrivateBI);\r\n\r\n        let secret = this.DHSecretToSPISecret(secretBI);\r\n\r\n        return new PublicKeyAndSecret(myPublicBI, secret);\r\n    }\r\n\r\n    // <summary>\r\n    // Converts the DH secret BigInteger into the hex-string to be used as the secret.\r\n    // There are some \"gotchyas\" here which is why this piece of work is abstracted so it can be tested separately.\r\n    // See: http://www.simplepaymentapi.com/#/api/pairing-process\r\n    // </summary>\r\n    // <param name=\"secretBI\">Secret as BigInteger</param>\r\n    // <returns>Secret as Hex-String</returns>\r\n    DHSecretToSPISecret(secret)\r\n    {      \r\n        // If the calculated hexadecimal secret doesn't have an even number of characters, we add an extra 0 to the start. This allows SHA-256 to operate on the hexadecimal secret as if it were a hexadecimal representation of a string.\r\n        if (secret.length % 2 === 1){\r\n            secret = '0' + secret;\r\n        }\r\n\r\n        secret = secret.padStart(512, '0');\r\n\r\n        // We sha256 that byte array and return the hex string result\r\n        return Crypto.GenerateHash(secret);\r\n    }\r\n}\r\n\r\n// <summary>\r\n// Internal Holder class for Public and Secret, so that we can use them together in method signatures. \r\n// </summary>\r\nexport class PublicKeyAndSecret {\r\n    constructor(myPublicKey, sharedSecretKey) {\r\n        this.MyPublicKey = myPublicKey;\r\n        this.SharedSecretKey = sharedSecretKey;\r\n    }\r\n}","export const ConnectionState = {\r\n    Disconnected: 'Disconnected',\r\n    Connecting: 'Connecting',\r\n    Connected: 'Connected'\r\n};\r\n\r\nexport const SPI_PROTOCOL   = 'spi.2.4.0';\r\n\r\nexport class ConnectionStateEventArgs\r\n{\r\n    constructor(connectionState) {\r\n        this.ConnectionState = connectionState;\r\n    }\r\n}\r\n\r\nexport class MessageEventArgs\r\n{\r\n    constructor(message) {\r\n        this.Message = message;\r\n    }\r\n}\r\n\r\nexport class Connection {\r\n    constructor() {\r\n        this.Address    = null;\r\n        this.Connected  = false;\r\n        this.State      = ConnectionState.Disconnected;\r\n        this.SpiProtocol = SPI_PROTOCOL;\r\n        this._ws        = null;\r\n\r\n        if(typeof WebSocket === 'undefined') {\r\n            throw new Error('Environment does not support WebSockets');\r\n        }\r\n    }\r\n\r\n    Connect(UseSecureWebSockets) {\r\n        if(this.State === ConnectionState.Connected || this.State === ConnectionState.Connecting) {\r\n            // already connected or connecting. disconnect first.\r\n            return;\r\n        }\r\n\r\n        this.State = ConnectionState.Connecting;\r\n\r\n        //Create a new socket instance specifying the url, SPI protocol and Websocket to use.\r\n        //The will create a TCP/IP socket connection to the provided URL and perform HTTP websocket negotiation\r\n        this._ws           = new WebSocket(this.Address, this.SpiProtocol);\r\n        this._ws.onopen    = () => this.pollWebSocketConnection();\r\n        this._ws.onmessage = (payload) => this.onMessageReceived(payload);\r\n        this._ws.onclose   = () => this.onClosed();\r\n        this._ws.onerror   = (err) => this.onError(err);\r\n\r\n        document.dispatchEvent(new CustomEvent('ConnectionStatusChanged', {detail: new ConnectionStateEventArgs(ConnectionState.Connecting)}));\r\n    }\r\n\r\n    Disconnect() {\r\n        if (this.State == ConnectionState.Disconnected) return;\r\n\r\n        if(this._ws && this._ws.readyState != this._ws.CLOSED) {\r\n            this._ws.close();\r\n        }\r\n\r\n        if (this._ws) {\r\n            this._ws.onopen    = null;\r\n            this._ws.onmessage = null;\r\n            this._ws.onclose   = null;\r\n            this._ws.onerror   = null;\r\n        }\r\n\r\n        this.onClosed();\r\n    }\r\n\r\n    Send(message) {\r\n        this._ws.send(message);\r\n    }\r\n\r\n    onOpened() {\r\n        this.State = ConnectionState.Connected;\r\n        this.Connected = true;\r\n        document.dispatchEvent(new CustomEvent('ConnectionStatusChanged', {detail: new ConnectionStateEventArgs(ConnectionState.Connected)}));\r\n    }\r\n\r\n    onClosed() {\r\n        this.Connected = false;\r\n        this.State = ConnectionState.Disconnected;\r\n        this._ws = null;\r\n        document.dispatchEvent(new CustomEvent('ConnectionStatusChanged', {detail: new ConnectionStateEventArgs(ConnectionState.Disconnected)}));\r\n    }\r\n\r\n    pollWebSocketConnection(count = 0) {\r\n        \r\n        if(this._ws.readyState === this._ws.OPEN) {\r\n            this.onOpened();\r\n            return true;\r\n        } else if(count < 25) {\r\n            count++;\r\n            setTimeout(() => this.pollWebSocketConnection(count), 200);\r\n        } else {\r\n            this.Disconnect();\r\n            return false;\r\n        }\r\n    }\r\n\r\n    onMessageReceived(message) {\r\n        document.dispatchEvent(new CustomEvent('MessageReceived', {detail: new MessageEventArgs(message.data)}));\r\n    }\r\n\r\n    onError(err) {\r\n        document.dispatchEvent(new CustomEvent('ErrorReceived', {detail: new MessageEventArgs(err)}));\r\n    }\r\n}\r\n","import {Events, SuccessState, Message} from './Messages';\r\nimport {RequestIdHelper} from './RequestIdHelper';\r\nimport {SpiConfig, TransactionOptions} from './SpiModels';\r\n\r\nexport class PurchaseRequest {\r\n    constructor(amountCents, posRefId) {\r\n        this.PosRefId = posRefId;\r\n        this.PurchaseAmount = amountCents;\r\n        this.TipAmount = 0;\r\n        this.CashoutAmount = 0;\r\n        this.PromptForCashout = false;\r\n        this.SurchargeAmount = 0;\r\n        this.Config = new SpiConfig();\r\n        this.Options = new TransactionOptions();\r\n\r\n        // Library Backwards Compatibility\r\n        this.Id = posRefId;\r\n        this.AmountCents = amountCents;\r\n    }\r\n\r\n    AmountSummary()\r\n    {\r\n        return `Purchase: ${(this.PurchaseAmount / 100.0).toFixed(2)}; \r\n            Tip: ${(this.TipAmount / 100.0).toFixed(2)}; \r\n            Cashout: ${(this.CashoutAmount / 100.0).toFixed(2)};`;\r\n    }\r\n\r\n    ToMessage() {\r\n        let data = {\r\n            pos_ref_id: this.PosRefId,\r\n            purchase_amount: this.PurchaseAmount,\r\n            tip_amount: this.TipAmount,\r\n            cash_amount: this.CashoutAmount,\r\n            prompt_for_cashout: this.PromptForCashout, \r\n            surcharge_amount: this.SurchargeAmount\r\n        };\r\n\r\n        this.Config.addReceiptConfig(data);\r\n        this.Options.AddOptions(data);\r\n        return new Message(RequestIdHelper.Id(\"prchs\"), Events.PurchaseRequest, data, true);\r\n    }\r\n}\r\n\r\nexport class PurchaseResponse\r\n{\r\n    constructor(m)\r\n    {\r\n        this._m = m;\r\n        this.RequestId = m.Id;\r\n        this.PosRefId = m.Data.pos_ref_id;\r\n        this.SchemeName = m.Data.scheme_name;\r\n        this.SchemeAppName = m.Data.scheme_name;\r\n        this.Success = m.GetSuccessState() == SuccessState.Success;\r\n    }\r\n\r\n    GetRRN()\r\n    {\r\n        return this._m.Data.rrn;\r\n    }\r\n\r\n    GetPurchaseAmount()\r\n    {\r\n        return this._m.Data.purchase_amount;\r\n    }\r\n\r\n    GetTipAmount()\r\n    {\r\n        return this._m.Data.tip_amount;\r\n    }\r\n\r\n    GetSurchargeAmount()\r\n    {\r\n        return this._m.Data.surcharge_amount;\r\n    }\r\n\r\n    GetCashoutAmount()\r\n    {\r\n        return this._m.Data.cash_amount;\r\n    }\r\n\r\n    GetBankNonCashAmount()\r\n    {\r\n        return this._m.Data.bank_noncash_amount;\r\n    }\r\n\r\n    GetBankCashAmount()\r\n    {\r\n        return this._m.Data.bank_cash_amount;\r\n    }\r\n\r\n    GetCustomerReceipt()\r\n    {\r\n        return this._m.Data.customer_receipt || \"\";\r\n    }\r\n\r\n    GetMerchantReceipt()\r\n    {\r\n        return this._m.Data.merchant_receipt || \"\";\r\n    }\r\n\r\n    GetResponseText()\r\n    {\r\n        return this._m.Data.host_response_text || \"\";\r\n    }\r\n\r\n    GetResponseCode()\r\n    {\r\n        return this._m.Data.host_response_code;\r\n    }\r\n    \r\n    GetTerminalReferenceId()\r\n    {\r\n        return this._m.Data.terminal_ref_id;\r\n    }\r\n\r\n    GetCardEntry()\r\n    {\r\n        return this._m.Data.card_entry;\r\n    }\r\n    \r\n    GetAccountType()\r\n    {\r\n        return this._m.Data.account_type;\r\n    }\r\n\r\n    GetAuthCode()\r\n    {\r\n        return this._m.Data.auth_code;\r\n    }\r\n\r\n    GetBankDate()\r\n    {\r\n        return this._m.Data.bank_date;\r\n    }\r\n\r\n    GetBankTime()\r\n    {\r\n        return this._m.Data.bank_time;\r\n    }\r\n    \r\n    GetMaskedPan()\r\n    {\r\n        return this._m.Data.masked_pan;\r\n    }\r\n    \r\n    GetTerminalId()\r\n    {\r\n        return this._m.Data.terminal_id;\r\n    }\r\n\r\n    WasMerchantReceiptPrinted()\r\n    {\r\n        return this._m.Data.merchant_receipt_printed;\r\n    }\r\n\r\n    WasCustomerReceiptPrinted()\r\n    {\r\n        return this._m.Data.customer_receipt_printed;\r\n    }\r\n    \r\n    GetSettlementDate()\r\n    {\r\n        //\"bank_settlement_date\":\"20042018\"\r\n        var dateStr = this._m.Data.bank_settlement_date;\r\n        if (!dateStr) return null;\r\n        return Message.ParseBankDate(dateStr);\r\n    }\r\n\r\n    GetResponseValue(attribute)\r\n    {\r\n        return this._m.Data[attribute];\r\n    }\r\n\r\n    ToPaymentSummary()\r\n    {\r\n        return {\r\n            account_type: this.GetAccountType(),\r\n            auth_code: this.GetAuthCode(),\r\n            bank_date: this.GetBankDate(),\r\n            bank_time: this.GetBankTime(),\r\n            host_response_code: this.GetResponseCode(),\r\n            host_response_text: this.GetResponseText(),\r\n            masked_pan: this.GetMaskedPan(),\r\n            purchase_amount: this.GetPurchaseAmount(),\r\n            rrn: this.GetRRN(),\r\n            scheme_name: this.SchemeName,\r\n            terminal_id: this.GetTerminalId(),\r\n            terminal_ref_id: this.GetTerminalReferenceId(),\r\n            tip_amount: this.GetTipAmount(),\r\n            surcharge_amount: this.GetSurchargeAmount()\r\n        };\r\n    }\r\n}\r\n\r\nexport class CancelTransactionRequest\r\n{\r\n    \r\n    ToMessage()\r\n    {\r\n        return new Message(RequestIdHelper.Id(\"ctx\"), Events.CancelTransactionRequest, null, true);\r\n    }\r\n}\r\n\r\nexport class CancelTransactionResponse\r\n{\r\n    constructor(m)\r\n    {\r\n        this._m = m;\r\n        this.PosRefId = this._m.Data.pos_ref_id;\r\n        this.Success = this._m.GetSuccessState() == SuccessState.Success;\r\n    }\r\n\r\n    GetErrorReason()\r\n    {\r\n        return this._m.Data.error_reason;\r\n    }\r\n\r\n    GetErrorDetail()\r\n    {\r\n        return this._m.Data.error_detail;\r\n    }\r\n\r\n    GetResponseValueWithAttribute(attribute)\r\n    {\r\n        return this._m.Data[attribute];\r\n    }\r\n}\r\n\r\nexport class GetLastTransactionRequest\r\n{\r\n    ToMessage()\r\n    {\r\n        return new Message(RequestIdHelper.Id(\"glt\"), Events.GetLastTransactionRequest, null, true);\r\n    }\r\n}\r\n\r\nexport class GetLastTransactionResponse\r\n{\r\n    constructor(m)\r\n    {\r\n        this._m = m;\r\n    }\r\n\r\n    WasRetrievedSuccessfully()\r\n    {\r\n        // We can't rely on checking \"success\" flag or \"error\" fields here,\r\n        // as retrieval may be successful, but the retrieved transaction was a fail.\r\n        // So we check if we got back an ResponseCode.\r\n        // (as opposed to say an operation_in_progress_error)\r\n        return !!this.GetResponseCode();\r\n    }\r\n\r\n    WasTimeOutOfSyncError()\r\n    {\r\n        return this._m.GetError().startsWith(\"TIME_OUT_OF_SYNC\");\r\n    }\r\n\r\n    WasOperationInProgressError()\r\n    {\r\n        return this._m.GetError().startsWith(\"OPERATION_IN_PROGRESS\");\r\n    }\r\n\r\n    IsWaitingForSignatureResponse()\r\n    {\r\n        return this._m.GetError().startsWith(\"OPERATION_IN_PROGRESS_AWAITING_SIGNATURE\");\r\n    }\r\n\r\n    IsWaitingForAuthCode()\r\n    {\r\n        return this._m.GetError().startsWith(\"OPERATION_IN_PROGRESS_AWAITING_PHONE_AUTH_CODE\");\r\n    }\r\n    \r\n    IsStillInProgress(posRefId)\r\n    {\r\n        return this.WasOperationInProgressError() && this.GetPosRefId() == posRefId;\r\n    }\r\n\r\n    GetSuccessState()\r\n    {\r\n        return this._m.GetSuccessState();\r\n    }\r\n\r\n    WasSuccessfulTx()\r\n    {\r\n        return this._m.GetSuccessState() == SuccessState.Success;\r\n    }\r\n\r\n    GetTxType()\r\n    {\r\n        return this._m.Data.transaction_type;\r\n    }\r\n\r\n    GetPosRefId()\r\n    {\r\n        return this._m.Data.pos_ref_id;\r\n    }\r\n\r\n    GetSchemeApp()\r\n    {\r\n        return this._m.Data.scheme_name;\r\n    }\r\n\r\n    GetSchemeName()\r\n    {\r\n        return this._m.Data.scheme_name;\r\n    }\r\n\r\n    GetAmount()\r\n    {\r\n        return this._m.Data.amount_purchase;\r\n    }\r\n\r\n    GetTransactionAmount()\r\n    {\r\n        return this._m.Data.amount_transaction_type;\r\n    }\r\n\r\n    GetBankDateTimeString()\r\n    {\r\n        var ds = this._m.Data.bank_date + this._m.Data.bank_time;\r\n        return ds;\r\n    }\r\n\r\n    GetRRN()\r\n    {\r\n        return this._m.Data.rrn;\r\n    }\r\n    \r\n    GetResponseText()\r\n    {\r\n        return this._m.Data.host_response_text | \"\";\r\n    }\r\n\r\n    GetResponseCode()\r\n    {\r\n        return this._m.Data.host_response_code;\r\n    }\r\n\r\n    // <summary>\r\n    // There is a bug, VSV-920, whereby the customer_receipt is missing from a glt response.\r\n    // The current recommendation is to use the merchant receipt in place of it if required.\r\n    // This method modifies the underlying incoming message data by copying\r\n    // the merchant receipt into the customer receipt only if there \r\n    // is a merchant_receipt and there is not a customer_receipt.   \r\n    // </summary>\r\n    CopyMerchantReceiptToCustomerReceipt()\r\n    {\r\n        var cr = this._m.Data.customer_receipt;\r\n        var mr = this._m.Data.merchant_receipt;\r\n        if (mr != \"\" && !(cr))\r\n        {\r\n            this._m.Data.customer_receipt = mr;\r\n        }\r\n    }\r\n}\r\n\r\nexport class RefundRequest\r\n{\r\n    constructor(amountCents, posRefId, isSuppressMerchantPassword)\r\n    {\r\n        this.AmountCents = amountCents;\r\n        this.Id = RequestIdHelper.Id(\"refund\");\r\n        this.PosRefId = posRefId;\r\n        this.IsSuppressMerchantPassword = isSuppressMerchantPassword;\r\n        this.Config = new SpiConfig();\r\n        this.Options = new TransactionOptions();\r\n    }\r\n    \r\n    ToMessage()\r\n    {\r\n        let data = {\r\n            refund_amount: this.AmountCents, \r\n            pos_ref_id: this.PosRefId,\r\n            suppress_merchant_password: this.IsSuppressMerchantPassword\r\n        };\r\n        \r\n        this.Config.addReceiptConfig(data);\r\n        this.Options.AddOptions(data);\r\n        return new Message(RequestIdHelper.Id(\"refund\"), Events.RefundRequest, data, true);\r\n    }\r\n}\r\n\r\nexport class RefundResponse\r\n{\r\n    constructor(m)\r\n    {\r\n        this._m = m;\r\n        this.RequestId = m.Id;\r\n        this.PosRefId = m.Data.pos_ref_id;\r\n        this.SchemeName = m.Data.scheme_name;\r\n        this.SchemeAppName = m.Data.scheme_name;\r\n        this.Success = m.GetSuccessState() == SuccessState.Success;\r\n    }\r\n\r\n    GetRefundAmount()\r\n    {\r\n        return this._m.Data.refund_amount;\r\n    }\r\n\r\n    GetRRN()\r\n    {\r\n        return this._m.Data.rrn;\r\n    }\r\n\r\n    GetCustomerReceipt()\r\n    {\r\n        return this._m.Data.customer_receipt || \"\";\r\n    }\r\n\r\n    GetMerchantReceipt()\r\n    {\r\n        return this._m.Data.merchant_receipt;\r\n    }\r\n    \r\n    GetResponseText()\r\n    {\r\n        return this._m.Data.host_response_text || \"\";\r\n    }\r\n\r\n    GetResponseCode()\r\n    {\r\n        return this._m.Data.host_response_code || \"\";\r\n    }\r\n\r\n\r\n    GetTerminalReferenceId()\r\n    {\r\n        return this._m.Data.terminal_ref_id || \"\";\r\n    }\r\n    GetCardEntry()\r\n    {\r\n        return this._m.Data.card_entry || \"\";\r\n    }\r\n    GetAccountType()\r\n    {\r\n        return this._m.Data.account_type || \"\";\r\n    }\r\n    GetAuthCode()\r\n    {\r\n        return this._m.Data.auth_code || \"\";\r\n    }\r\n    GetBankDate()\r\n    {\r\n        return this._m.Data.bank_date || \"\";\r\n    }\r\n    GetBankTime()\r\n    {\r\n        return this._m.Data.bank_time || \"\";\r\n    }\r\n    GetMaskedPan()\r\n    {\r\n        return this._m.Data.masked_pan || \"\";\r\n    }\r\n    GetTerminalId()\r\n    {\r\n        return this._m.Data.terminal_id || \"\";\r\n    }\r\n    WasMerchantReceiptPrinted()\r\n    {\r\n        return this._m.Data.merchant_receipt_printed;\r\n    }\r\n    WasCustomerReceiptPrinted()\r\n    {\r\n        return this._m.Data.customer_receipt_printed;\r\n    }\r\n    GetSettlementDate()\r\n    {\r\n        //\"bank_settlement_date\":\"20042018\"\r\n        var dateStr = this._m.Data.bank_settlement_date;\r\n        if (!dateStr) return null;\r\n        return Message.ParseBankDate(dateStr);\r\n    }\r\n\r\n    GetResponseValue(attribute)\r\n    {\r\n        return this._m.Data[attribute];\r\n    }\r\n}\r\n\r\nexport class SignatureRequired\r\n{\r\n    constructor(m)\r\n    {\r\n        this.RequestId = m.Id;\r\n        this.PosRefId = m.Data.pos_ref_id;\r\n        this._receiptToSign = m.Data.merchant_receipt;\r\n    }\r\n    \r\n    SignatureRequired(posRefId, requestId, receiptToSign)\r\n    {\r\n        this.RequestId = requestId;\r\n        this.PosRefId = posRefId;\r\n        this._receiptToSign = receiptToSign;\r\n    }\r\n\r\n    GetMerchantReceipt()\r\n    {\r\n        return this._receiptToSign;\r\n    }\r\n}\r\n\r\nexport class SignatureDecline\r\n{\r\n    constructor(posRefId)\r\n    {\r\n        this.PosRefId = posRefId;\r\n    }\r\n\r\n    ToMessage()\r\n    {\r\n        var data = {\r\n            pos_ref_id: this.PosRefId\r\n        };\r\n        return new Message(RequestIdHelper.Id(\"sigdec\"), Events.SignatureDeclined, data, true);\r\n    }\r\n}\r\n\r\nexport class SignatureAccept\r\n{\r\n    constructor(posRefId)\r\n    {\r\n        this.PosRefId = posRefId;\r\n    }\r\n\r\n    ToMessage()\r\n    {\r\n        var data = {\r\n            pos_ref_id: this.PosRefId\r\n        };\r\n        return new Message(RequestIdHelper.Id(\"sigacc\"), Events.SignatureAccepted, data, true);\r\n    }\r\n}\r\n\r\nexport class MotoPurchaseRequest\r\n{\r\n    constructor(amountCents, posRefId, surchargeAmount)\r\n    {\r\n        this.PosRefId = posRefId;\r\n        this.PurchaseAmount = amountCents;\r\n        this.SurchargeAmount = surchargeAmount;\r\n        this.Config = new SpiConfig();\r\n        this.Options = new TransactionOptions();\r\n    }\r\n\r\n    ToMessage()\r\n    {\r\n        var data = {\r\n            pos_ref_id: this.PosRefId,\r\n            purchase_amount: this.PurchaseAmount,\r\n            surcharge_amount: this.SurchargeAmount\r\n        };\r\n        this.Config.addReceiptConfig(data);\r\n        this.Options.AddOptions(data);\r\n        return new Message(RequestIdHelper.Id(\"moto\"), Events.MotoPurchaseRequest, data, true);\r\n    }\r\n}\r\n\r\nexport class MotoPurchaseResponse\r\n{\r\n    constructor(m)\r\n    {\r\n        this.PurchaseResponse = new PurchaseResponse(m);\r\n        this.PosRefId = PurchaseResponse.PosRefId;\r\n    }\r\n}\r\n\r\nexport class PhoneForAuthRequired\r\n{\r\n    constructor(...args)\r\n    {\r\n        if(args.length === 4) {\r\n            this.PosRefId = args[0];\r\n            this.RequestId = args[1];\r\n            this._phoneNumber = args[2];\r\n            this._merchantId = args[3];\r\n        } else if(args.length === 1) {\r\n            this.RequestId = args[0].Id;\r\n            this.PosRefId = args[0].Data.pos_ref_id;\r\n            this._phoneNumber = args[0].Data.auth_centre_phone_number;\r\n            this._merchantId = args[0].Data.merchant_id;\r\n        } else {\r\n            throw new Error('Invalid call sig for Phone auth required class');\r\n        }\r\n    }\r\n    \r\n    GetPhoneNumber()\r\n    {\r\n        return this._phoneNumber;\r\n    }\r\n    \r\n    GetMerchantId()\r\n    {\r\n        return this._merchantId;\r\n    }\r\n}\r\n\r\nexport class AuthCodeAdvice\r\n{\r\n    constructor(posRefId, authCode)\r\n    {\r\n        this.PosRefId = posRefId;\r\n        this.AuthCode = authCode;\r\n    }\r\n\r\n    ToMessage()\r\n    {\r\n        var data = {\r\n            pos_ref_id: this.PosRefId,\r\n            auth_code: this.AuthCode\r\n        };\r\n        return new Message(RequestIdHelper.Id(\"authad\"), Events.AuthCodeAdvice, data, true);\r\n    }\r\n}","import {Events, Message} from './Messages';\r\nimport {PurchaseResponse} from './Purchase';\r\n\r\n// <summary>\r\n// This class represents the BillDetails that the POS will be asked for throughout a PayAtTable flow.\r\n// </summary>\r\nexport class BillStatusResponse\r\n{\r\n    constructor() {\r\n        // <summary>\r\n        // Set this Error accordingly if you are not able to return the BillDetails that were asked from you.\r\n        // </summary>\r\n        this.Result = null;\r\n        \r\n        // <summary>\r\n        // This is a unique identifier that you assign to each bill.\r\n        // It migt be for example, the timestamp of when the cover was opened.\r\n        // </summary>\r\n        this.BillId = null;\r\n        \r\n        // <summary>\r\n        // This is the table id that this bill was for.\r\n        // The waiter will enter it on the Eftpos at the start of the PayAtTable flow and the Eftpos will \r\n        // retrieve the bill using the table id. \r\n        // </summary>\r\n        this.TableId = null;\r\n        \r\n        // <summary>\r\n        // The Total Amount on this bill, in cents.\r\n        // </summary>\r\n        this.TotalAmount = 0;\r\n        \r\n        // <summary>\r\n        // The currently outsanding amount on this bill, in cents.\r\n        // </summary>\r\n        this.OutstandingAmount = 0;\r\n\r\n        // <summary>\r\n        // Your POS is required to persist some state on behalf of the Eftpos so the Eftpos can recover state.\r\n        // It is just a piece of string that you save against your billId.\r\n        // WHenever you're asked for BillDetails, make sure you return this piece of data if you have it.\r\n        // </summary>\r\n        this.BillData = \"\";\r\n    }\r\n\r\n    getBillPaymentHistory()\r\n    {\r\n        if (!this.BillData)\r\n        {\r\n            return [];\r\n        }\r\n        \r\n        let billPaymentHistory = [];\r\n        let savedBillData = JSON.parse(this.BillData);\r\n\r\n        return savedBillData.map((bill) => {\r\n            return new PaymentHistoryEntry(bill.payment_type, bill.payment_summary);\r\n        });\r\n    }\r\n\r\n    static ToBillData(ph)\r\n    {\r\n        if (ph.length < 1)\r\n        {\r\n            return \"\";\r\n        }\r\n\r\n        return JSON.stringify(ph);\r\n    }\r\n    \r\n    ToMessage(messageId)\r\n    {\r\n        var data = {\r\n            \"success\": this.Result==BillRetrievalResult.SUCCESS\r\n        };\r\n        \r\n        if (this.BillId) data.bill_id = this.BillId;\r\n        if (this.TableId) data.table_id = this.TableId;\r\n\r\n        if (this.Result == BillRetrievalResult.SUCCESS)\r\n        {\r\n            data.bill_total_amount = this.TotalAmount;\r\n            data.bill_outstanding_amount = this.OutstandingAmount;\r\n            data.bill_payment_history = this.getBillPaymentHistory();\r\n        }\r\n        else\r\n        {\r\n            data.error_reason = this.Result.toString();\r\n            data.error_detail = this.Result.toString();\r\n        }\r\n\r\n        return new Message(messageId, Events.PayAtTableBillDetails, data, true);\r\n    }\r\n}\r\n\r\nexport const BillRetrievalResult = \r\n{\r\n    SUCCESS: 'SUCCESS',\r\n    INVALID_TABLE_ID: 'INVALID_TABLE_ID',\r\n    INVALID_BILL_ID: 'INVALID_BILL_ID',\r\n    INVALID_OPERATOR_ID: 'INVALID_OPERATOR_ID'\r\n};\r\n\r\nexport const PaymentType = \r\n{\r\n    CARD: 'CARD',\r\n    CASH: 'CASH' \r\n};\r\n\r\nexport class BillPayment\r\n{\r\n    constructor(m)\r\n    {\r\n        this._incomingAdvice = m;\r\n        this.BillId = this._incomingAdvice.Data[\"bill_id\"];\r\n        this.TableId = this._incomingAdvice.Data[\"table_id\"];\r\n        this.OperatorId = this._incomingAdvice.Data[\"operator_id\"];\r\n        \r\n        var pt = this._incomingAdvice.Data[\"payment_type\"];\r\n        this.PaymentType = pt;\r\n        \r\n        // this is when we ply the sub object \"payment_details\" into a purchase response for convenience.\r\n        var purchaseMsg = new Message(m.Id, \"payment_details\", m.Data[\"payment_details\"], false);\r\n        this.PurchaseResponse = new PurchaseResponse(purchaseMsg);\r\n\r\n        this.PurchaseAmount = this.PurchaseResponse.GetPurchaseAmount();\r\n        this.TipAmount = this.PurchaseResponse.GetTipAmount();\r\n    }\r\n}\r\n\r\nexport class PaymentHistoryEntry\r\n{\r\n    constructor(paymentType, paymentSummary)\r\n    {\r\n        this.PaymentType = paymentType;\r\n        this.PaymentSummary = paymentSummary;\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            payment_type: this.PaymentType,\r\n            payment_summary: this.PaymentSummary\r\n        };\r\n    }\r\n    \r\n    GetTerminalRefId()\r\n    {\r\n        return this.PaymentSummary[\"terminal_ref_id\"];\r\n    }\r\n}\r\n\r\nexport class PayAtTableConfig\r\n{\r\n    constructor() {\r\n        this.PayAtTabledEnabled = false;\r\n        this.OperatorIdEnabled = false;\r\n        this.SplitByAmountEnabled = false;\r\n        this.EqualSplitEnabled = false;\r\n    \r\n        this.TippingEnabled = false;\r\n    \r\n        this.SummaryReportEnabled = false;\r\n    \r\n        this.LabelPayButton = '';\r\n        this.LabelOperatorId = '';\r\n        this.LabelTableId = '';\r\n    \r\n        // \r\n        // <summary>\r\n        // Fill in with operator ids that the eftpos terminal will validate against. \r\n        // Leave Empty to allow any operator_id through. \r\n        // </summary>\r\n       this.AllowedOperatorIds = [];\r\n    }\r\n\r\n    ToMessage(messageId)\r\n    {\r\n        var data = {\r\n            \"pay_at_table_enabled\": this.PayAtTabledEnabled,\r\n            \"operator_id_enabled\": this.OperatorIdEnabled,\r\n            \"split_by_amount_enabled\": this.SplitByAmountEnabled,\r\n            \"equal_split_enabled\": this.EqualSplitEnabled,\r\n            \"tipping_enabled\": this.TippingEnabled,\r\n            \"summary_report_enabled\": this.SummaryReportEnabled,\r\n            \"pay_button_label\": this.LabelPayButton,\r\n            \"operator_id_label\": this.LabelOperatorId,\r\n            \"table_id_label\": this.LabelTableId,\r\n            \"operator_id_list\": this.AllowedOperatorIds\r\n        };\r\n\r\n        return new Message(messageId, Events.PayAtTableSetTableConfig, data, true);\r\n    }\r\n    \r\n    static FeatureDisableMessage(messageId) {\r\n        var data = {\r\n            \"pay_at_table_enabled\": false\r\n        };\r\n        return new Message(messageId, Events.PayAtTableSetTableConfig, data, true);\r\n    }\r\n}\r\n\r\n    ","import {RequestIdHelper} from './RequestIdHelper';\r\nimport {BillPayment, PayAtTableConfig, PaymentHistoryEntry, BillRetrievalResult, BillStatusResponse} from './PayAtTable';\r\n\r\nexport class SpiPayAtTable\r\n{  \r\n    constructor(spi)\r\n    {\r\n        this._spi = spi;\r\n        this._log = console;\r\n\r\n        this.Config = Object.assign(new PayAtTableConfig(), {\r\n            PayAtTabledEnabled: true,\r\n            OperatorIdEnabled: true,\r\n            AllowedOperatorIds: [],\r\n            EqualSplitEnabled: true,\r\n            SplitByAmountEnabled: true,\r\n            SummaryReportEnabled: true,\r\n            TippingEnabled: true,\r\n            LabelOperatorId: \"Operator ID\",\r\n            LabelPayButton: \"Pay at Table\",\r\n            LabelTableId: \"Table Number\"\r\n        });\r\n    }\r\n\r\n    // <summary>\r\n    // This delegate will be called when the Eftpos needs to know the current state of a bill for a table. \r\n    // <para />\r\n    // Parameters:<para />\r\n    // billId - The unique identifier of the bill. If empty, it means that the PayAtTable flow on the Eftpos is just starting, and the lookup is by tableId.<para />\r\n    // tableId - The identifier of the table that the bill is for. <para />\r\n    // operatorId - The id of the operator entered on the eftpos. <para />\r\n    // <para />\r\n    // Return:<para />\r\n    // You need to return the current state of the bill.\r\n    // </summary>\r\n    GetBillStatus(billId, tableId, operatorId) {\r\n        throw new Exception('Method not implemented. Please overwrite this method in your POS');\r\n    }\r\n\r\n    // Abstract method, must implement in POS system\r\n    BillPaymentReceived(billPayment, updatedBillData) {\r\n        throw new Exception('Method not implemented. Please overwrite this method in your POS');\r\n    }\r\n\r\n    PushPayAtTableConfig()\r\n    {\r\n        this._spi._send(this.Config.ToMessage(RequestIdHelper.Id(\"patconf\")));\r\n    } \r\n    \r\n    _handleGetBillDetailsRequest(m)\r\n    {\r\n        var operatorId = m.Data[\"operator_id\"];\r\n        var tableId = m.Data[\"table_id\"];\r\n\r\n        // Ask POS for Bill Details for this tableId, inluding encoded PaymentData\r\n        var billStatus = this.GetBillStatus(null, tableId, operatorId);\r\n        billStatus.TableId = tableId;\r\n        if (billStatus.TotalAmount <= 0)\r\n        {\r\n            this._log.info(\"Table has 0 total amount. not sending it to eftpos.\");\r\n            billStatus.Result = BillRetrievalResult.INVALID_TABLE_ID;\r\n        }\r\n        \r\n        this._spi._send(billStatus.ToMessage(m.Id));\r\n    }\r\n\r\n    _handleBillPaymentAdvice(m)\r\n    {\r\n        var billPayment = new BillPayment(m);\r\n        \r\n        // Ask POS for Bill Details, inluding encoded PaymentData\r\n        var existingBillStatus = this.GetBillStatus(billPayment.BillId, billPayment.TableId, billPayment.OperatorId);\r\n        if (existingBillStatus.Result != BillRetrievalResult.SUCCESS)\r\n        {\r\n            this._log.warn(\"Could not retrieve Bill Status for Payment Advice. Sending Error to Eftpos.\");\r\n            this._spi._send(existingBillStatus.ToMessage(m.Id));\r\n        }\r\n                    \r\n        var existingPaymentHistory = existingBillStatus.getBillPaymentHistory();\r\n   \r\n        var foundExistingEntry = existingPaymentHistory.find(phe => phe.GetTerminalRefId() == billPayment.PurchaseResponse.GetTerminalReferenceId());\r\n        if (foundExistingEntry)\r\n        {\r\n            // We have already processed this payment.\r\n            // perhaps Eftpos did get our acknowledgement.\r\n            // Let's update Eftpos.\r\n            this._log.warn(\"Had already received this bill_paymemnt advice from eftpos. Ignoring.\");\r\n            this._spi._send(existingBillStatus.ToMessage(m.Id));\r\n            return;\r\n        }\r\n\r\n        // Let's add the new entry to the history\r\n        var updatedHistoryEntries = existingPaymentHistory;\r\n        updatedHistoryEntries.push(\r\n            new PaymentHistoryEntry(billPayment.PaymentType.toLowerCase(), billPayment.PurchaseResponse.ToPaymentSummary())\r\n        );\r\n        \r\n        var updatedBillData = BillStatusResponse.ToBillData(updatedHistoryEntries);\r\n\r\n        // Advise POS of new payment against this bill, and the updated BillData to Save.\r\n        var updatedBillStatus = this.BillPaymentReceived(billPayment, updatedBillData);\r\n\r\n        // Just in case client forgot to set these:\r\n        updatedBillStatus.BillId = billPayment.BillId;\r\n        updatedBillStatus.TableId = billPayment.TableId;\r\n\r\n        if (updatedBillStatus.Result != BillRetrievalResult.SUCCESS)\r\n        {\r\n            this._log.warn(\"POS Errored when being Advised of Payment. Letting EFTPOS know, and sending existing bill data.\");\r\n            updatedBillStatus.BillData = existingBillStatus.BillData;\r\n        }\r\n        else\r\n        {\r\n            updatedBillStatus.BillData = updatedBillData;\r\n        }\r\n    \r\n        this._spi._send(updatedBillStatus.ToMessage(m.Id));\r\n    }\r\n    \r\n    _handleGetTableConfig(m)\r\n    {\r\n        this._spi._send(this.Config.ToMessage(m.Id));\r\n    }\r\n}\r\n","import {RequestIdHelper} from './RequestIdHelper';\r\nimport {Message} from './Messages';\r\nimport {PurchaseResponse} from './Purchase';\r\n\r\nexport const PreauthEvents = \r\n{\r\n    AccountVerifyRequest: \"account_verify\",\r\n    AccountVerifyResponse: \"account_verify_response\",\r\n    \r\n    PreauthOpenRequest : \"preauth\",\r\n    PreauthOpenResponse : \"preauth_response\",\r\n\r\n    PreauthTopupRequest: \"preauth_topup\",\r\n    PreauthTopupResponse: \"preauth_topup_response\",\r\n\r\n    PreauthExtendRequest: \"preauth_extend\",\r\n    PreauthExtendResponse: \"preauth_extend_response\",\r\n\r\n    PreauthPartialCancellationRequest : \"preauth_partial_cancellation\",\r\n    PreauthPartialCancellationResponse : \"preauth_partial_cancellation_response\",\r\n    \r\n    PreauthCancellationRequest : \"preauth_cancellation\",\r\n    PreauthCancellationResponse : \"preauth_cancellation_response\",\r\n\r\n    PreauthCompleteRequest : \"completion\",\r\n    PreauthCompleteResponse : \"completion_response\"\r\n};\r\n\r\nexport class AccountVerifyRequest\r\n{\r\n    constructor(posRefId)\r\n    {\r\n        this.PosRefId = posRefId;\r\n    }\r\n\r\n    ToMessage()\r\n    {\r\n        var data = {\r\n            \"pos_ref_id\": this.PosRefId\r\n        };\r\n\r\n        return new Message(RequestIdHelper.Id(\"prav\"), PreauthEvents.AccountVerifyRequest, data, true);\r\n    }\r\n}\r\n\r\nexport class AccountVerifyResponse\r\n{\r\n    constructor(m)\r\n    {\r\n        this.Details = new PurchaseResponse(m);\r\n        this.PosRefId = this.Details.PosRefId;\r\n        this._m = m;\r\n    }\r\n}\r\n\r\nexport class PreauthOpenRequest\r\n{\r\n    constructor(amountCents, posRefId)\r\n    {\r\n        this.PosRefId = posRefId;\r\n        this.PreauthAmount = amountCents;\r\n    }\r\n\r\n    ToMessage()\r\n    {\r\n        var data = {\r\n            \"pos_ref_id\": this.PosRefId,\r\n            \"preauth_amount\": this.PreauthAmount\r\n        };\r\n\r\n        return new Message(RequestIdHelper.Id(\"prac\"), PreauthEvents.PreauthOpenRequest, data, true);\r\n    }\r\n}\r\n\r\nexport class PreauthTopupRequest\r\n{\r\n    constructor(preauthId, topupAmountCents, posRefId)\r\n    {\r\n        this.PreauthId = preauthId;\r\n        this.TopupAmount = topupAmountCents;\r\n        this.PosRefId = posRefId;\r\n    }\r\n\r\n    ToMessage()\r\n    {\r\n        var data = {\r\n            \"pos_ref_id\": this.PosRefId,\r\n            \"preauth_id\": this.PreauthId,\r\n            \"topup_amount\": this.TopupAmount\r\n        };\r\n\r\n        return new Message(RequestIdHelper.Id(\"prtu\"), PreauthEvents.PreauthTopupRequest, data, true);\r\n    }\r\n}\r\n\r\nexport class PreauthPartialCancellationRequest\r\n{\r\n    constructor(preauthId, partialCancellationAmountCents, posRefId)\r\n    {\r\n        this.PreauthId = preauthId;\r\n        this.PartialCancellationAmount = partialCancellationAmountCents;\r\n        this.PosRefId = posRefId;\r\n    }\r\n\r\n    ToMessage()\r\n    {\r\n        var data = {\r\n            \"pos_ref_id\": this.PosRefId,\r\n            \"preauth_id\": this.PreauthId,\r\n            \"preauth_cancel_amount\": this.PartialCancellationAmount\r\n        };\r\n\r\n        return new Message(RequestIdHelper.Id(\"prpc\"), PreauthEvents.PreauthPartialCancellationRequest, data, true);\r\n    }\r\n}\r\n\r\nexport class PreauthExtendRequest\r\n{\r\n    constructor(preauthId, posRefId)\r\n    {\r\n        this.PreauthId = preauthId;\r\n        this.PosRefId = posRefId;\r\n    }\r\n\r\n    ToMessage()\r\n    {\r\n        var data = {\r\n            \"pos_ref_id\": this.PosRefId,\r\n            \"preauth_id\": this.PreauthId\r\n        };\r\n\r\n        return new Message(RequestIdHelper.Id(\"prext\"), PreauthEvents.PreauthExtendRequest, data, true);\r\n    }\r\n}\r\n\r\nexport class PreauthCancelRequest\r\n{\r\n    constructor(preauthId, posRefId)\r\n    {\r\n        this.PreauthId = preauthId;\r\n        this.PosRefId = posRefId;\r\n    }\r\n\r\n    ToMessage()\r\n    {\r\n        var data = {\r\n            \"pos_ref_id\": this.PosRefId,\r\n            \"preauth_id\": this.PreauthId\r\n        };\r\n\r\n        return new Message(RequestIdHelper.Id(\"prac\"), PreauthEvents.PreauthCancellationRequest, data, true);\r\n    }\r\n}\r\n\r\nexport class PreauthCompletionRequest\r\n{\r\n    constructor(preauthId, completionAmountCents, posRefId, surchargeAmount)\r\n    {\r\n        this.PreauthId = preauthId;\r\n        this.CompletionAmount = completionAmountCents;\r\n        this.PosRefId = posRefId;\r\n        this.SurchargeAmount = surchargeAmount;\r\n    }\r\n\r\n    ToMessage()\r\n    {\r\n        var data = {\r\n            \"pos_ref_id\": this.PosRefId,\r\n            \"preauth_id\": this.PreauthId,\r\n            \"completion_amount\": this.CompletionAmount,\r\n            \"surcharge_amount\": this.SurchargeAmount\r\n        };\r\n\r\n        return new Message(RequestIdHelper.Id(\"prac\"), PreauthEvents.PreauthCompleteRequest, data, true);\r\n    }\r\n}\r\n\r\nexport class PreauthResponse\r\n{\r\n    constructor(m)\r\n    {\r\n        this.PreauthId = m.Data[\"preauth_id\"];\r\n        this.Details = new PurchaseResponse(m);\r\n        this.PosRefId = this.Details.PosRefId;\r\n        this._m = m;\r\n    }\r\n\r\n    GetBalanceAmount()\r\n    {\r\n        var txType = this._m.Data[\"transaction_type\"];\r\n        switch (txType)\r\n        {\r\n            case \"PRE-AUTH\":\r\n                return this._m.Data[\"preauth_amount\"];\r\n            case \"TOPUP\":\r\n                return this._m.Data[\"balance_amount\"];\r\n            case \"CANCEL\": // PARTIAL CANCELLATION\r\n                return this._m.Data[\"balance_amount\"];\r\n            case \"PRE-AUTH EXT\":\r\n                return this._m.Data[\"balance_amount\"];\r\n            case \"PCOMP\":\r\n                return 0; // Balance is 0 after completion\r\n            case \"PRE-AUTH CANCEL\":\r\n                return 0; // Balance is 0 after cancellation\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n\r\n    GetPreviousBalanceAmount()\r\n    {\r\n        var txType = this._m.Data[\"transaction_type\"];\r\n        switch (txType)\r\n        {   \r\n            case \"PRE-AUTH\":\r\n                return 0;\r\n            case \"TOPUP\":\r\n                return this._m.Data[\"existing_preauth_amount\"];\r\n            case \"CANCEL\": // PARTIAL CANCELLATION\r\n                return this._m.Data[\"existing_preauth_amount\"];\r\n            case \"PRE-AUTH EXT\":\r\n                return this._m.Data[\"existing_preauth_amount\"];\r\n            case \"PCOMP\":\r\n                // THIS IS TECHNICALLY NOT CORRECT WHEN COMPLETION HAPPENS FOR A PARTIAL AMOUNT.\r\n                // BUT UNFORTUNATELY, THIS RESPONSE DOES NOT CONTAIN \"existing_preauth_amount\".\r\n                // SO \"completion_amount\" IS THE CLOSEST WE HAVE.\r\n                return this._m.Data[\"completion_amount\"];\r\n            case \"PRE-AUTH CANCEL\":\r\n                return this._m.Data[\"preauth_amount\"];\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n    \r\n    GetCompletionAmount()\r\n    {\r\n        var txType = this._m.Data[\"transaction_type\"];\r\n        switch (txType)\r\n        {   \r\n            case \"PCOMP\":\r\n                return this._m.Data[\"completion_amount\"];\r\n            default:\r\n                return 0;\r\n        }\r\n\r\n    }\r\n\r\n    GetSurchargeAmount()\r\n    {\r\n        var txType = this._m.Data[\"transaction_type\"];\r\n        switch (txType)\r\n        {\r\n            case \"PCOMP\":\r\n                return this._m.Data[\"surcharge_amount\"];\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n}","import {\r\n    PreauthEvents,\r\n    AccountVerifyRequest, \r\n    PreauthOpenRequest, \r\n    PreauthTopupRequest, \r\n    PreauthPartialCancellationRequest, \r\n    PreauthExtendRequest,\r\n    PreauthCompletionRequest,\r\n    PreauthCancelRequest} from './Preauth';\r\n\r\nimport {TransactionFlowState, TransactionType, InitiateTxResult} from './SpiModels';\r\n\r\nexport class SpiPreauth\r\n{\r\n    constructor(spi)\r\n    {\r\n        this._spi = spi;\r\n        this._log = console;\r\n    }\r\n\r\n    InitiateAccountVerifyTx(posRefId)\r\n    {\r\n        var verifyMsg = new AccountVerifyRequest(posRefId).ToMessage();\r\n        var tfs = new TransactionFlowState(\r\n            posRefId, TransactionType.AccountVerify, 0, verifyMsg,\r\n            \"Waiting for EFTPOS connection to make account verify request\");\r\n        var sentMsg = \"Asked EFTPOS to verify account\";\r\n        return this._initiatePreauthTx(tfs, sentMsg);\r\n    }\r\n    \r\n    InitiateOpenTx(posRefId, amountCents)\r\n    {\r\n        var msg = new PreauthOpenRequest(amountCents, posRefId).ToMessage();\r\n        var tfs = new TransactionFlowState(\r\n            posRefId, TransactionType.Preauth, amountCents, msg,\r\n            `Waiting for EFTPOS connection to make preauth request for ${(amountCents / 100.0).toFixed(2)}`);\r\n        var sentMsg = `Asked EFTPOS to create preauth for ${(amountCents / 100.0).toFixed(2)}`;\r\n        return this._initiatePreauthTx(tfs, sentMsg);\r\n    }\r\n\r\n    InitiateTopupTx(posRefId, preauthId, amountCents)\r\n    {\r\n        var msg = new PreauthTopupRequest(preauthId, amountCents, posRefId).ToMessage();\r\n        var tfs = new TransactionFlowState(\r\n            posRefId, TransactionType.Preauth, amountCents, msg,\r\n            `Waiting for EFTPOS connection to make preauth topup request for ${(amountCents / 100.0).toFixed(2)}`);\r\n        var sentMsg = `Asked EFTPOS to make preauth topup for ${(amountCents / 100.0).toFixed(2)}`;\r\n        return this._initiatePreauthTx(tfs, sentMsg);\r\n    }\r\n\r\n    InitiatePartialCancellationTx(posRefId, preauthId, amountCents)\r\n    {\r\n        var msg = new PreauthPartialCancellationRequest(preauthId, amountCents, posRefId).ToMessage();\r\n        var tfs = new TransactionFlowState(\r\n            posRefId, TransactionType.Preauth, amountCents, msg,\r\n            `Waiting for EFTPOS connection to make preauth partial cancellation request for ${(amountCents / 100.0).toFixed(2)}`);\r\n        var sentMsg = `Asked EFTPOS to make preauth partial cancellation for ${(amountCents / 100.0).toFixed(2)}`;\r\n        return this._initiatePreauthTx(tfs, sentMsg);\r\n    }\r\n\r\n    InitiateExtendTx(posRefId, preauthId)\r\n    {\r\n        var msg = new PreauthExtendRequest(preauthId, posRefId).ToMessage();\r\n        var tfs = new TransactionFlowState(\r\n            posRefId, TransactionType.Preauth, 0, msg,\r\n            \"Waiting for EFTPOS connection to make preauth Extend request\");\r\n        var sentMsg = \"Asked EFTPOS to make preauth Extend request\";\r\n        return this._initiatePreauthTx(tfs, sentMsg);\r\n    }\r\n\r\n    InitiateCompletionTx(posRefId, preauthId, amountCents, surchargeAmount)\r\n    {\r\n        var msg = new PreauthCompletionRequest(preauthId, amountCents, posRefId, surchargeAmount).ToMessage();\r\n        var tfs = new TransactionFlowState(\r\n            posRefId, TransactionType.Preauth, amountCents, msg,\r\n            `Waiting for EFTPOS connection to make preauth completion request for ${(amountCents / 100.0).toFixed(2)}`);\r\n        var sentMsg = `Asked EFTPOS to make preauth completion for ${(amountCents / 100.0).toFixed(2)}`;\r\n        return this._initiatePreauthTx(tfs, sentMsg);\r\n    }\r\n\r\n    InitiateCancelTx(posRefId, preauthId)\r\n    {\r\n        var msg = new PreauthCancelRequest(preauthId, posRefId).ToMessage();\r\n        var tfs = new TransactionFlowState(\r\n            posRefId, TransactionType.Preauth, 0, msg,\r\n            \"Waiting for EFTPOS connection to make preauth cancellation request\");\r\n        var sentMsg = \"Asked EFTPOS to make preauth cancellation request\";\r\n        return this._initiatePreauthTx(tfs, sentMsg);\r\n    }\r\n\r\n    _initiatePreauthTx(tfs, sentMsg)\r\n    {\r\n        if (this._spi.CurrentStatus == SpiStatus.Unpaired) return new InitiateTxResult(false, \"Not Paired\");\r\n\r\n        if (this._spi.CurrentFlow != SpiFlow.Idle) return new InitiateTxResult(false, \"Not Idle\");\r\n\r\n        this._spi.CurrentFlow = SpiFlow.Transaction;\r\n        this._spi.CurrentTxFlowState = tfs;\r\n        if (this._spi._send(tfs.Request))\r\n        {\r\n            this._spi.CurrentTxFlowState.Sent(sentMsg);\r\n        }\r\n    \r\n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this._spi.CurrentTxFlowState}));\r\n        return new InitiateTxResult(true, \"Preauth Initiated\");\r\n    }\r\n\r\n    _handlePreauthMessage(m)\r\n    {\r\n        switch (m.EventName)\r\n        {\r\n            case PreauthEvents.AccountVerifyResponse:\r\n                this._handleAccountVerifyResponse(m);\r\n                break;\r\n            case PreauthEvents.PreauthOpenResponse:\r\n            case PreauthEvents.PreauthTopupResponse:\r\n            case PreauthEvents.PreauthPartialCancellationResponse:\r\n            case PreauthEvents.PreauthExtendResponse:\r\n            case PreauthEvents.PreauthCompleteResponse:\r\n            case PreauthEvents.PreauthCancellationResponse:\r\n                this._handlePreauthResponse(m);\r\n                break;\r\n            default:\r\n                this._log.info(`I don't Understand Preauth Event: ${m.EventName}, ${m.Data}. Perhaps I have not implemented it yet.`);\r\n                break;\r\n        }\r\n    }\r\n\r\n    _handleAccountVerifyResponse(m)\r\n    {\r\n        var incomingPosRefId = m.Data.pos_ref_id;\r\n        var currentTxFlowState = this._spi.CurrentTxFlowState;\r\n        if (this._spi.CurrentFlow != SpiFlow.Transaction || currentTxFlowState.Finished || !currentTxFlowState.PosRefId === incomingPosRefId)\r\n        {\r\n            this._log.info(`Received Account Verify response but I was not waiting for one. Incoming Pos Ref ID: ${incomingPosRefId}`);\r\n            return;\r\n        }\r\n        // TH-1A, TH-2A\r\n\r\n        currentTxFlowState.Completed(m.GetSuccessState(), m, \"Account Verify Transaction Ended.\");\r\n        // TH-6A, TH-6E\r\n        \r\n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this._spi.CurrentTxFlowState}));\r\n    }\r\n    \r\n    _handlePreauthResponse(m)\r\n    {\r\n        var incomingPosRefId = m.Data.pos_ref_id;\r\n        var currentTxFlowState = this._spi.CurrentTxFlowState;\r\n        if (this._spi.CurrentFlow != SpiFlow.Transaction || currentTxFlowState.Finished || !currentTxFlowState.PosRefId === incomingPosRefId)\r\n        {\r\n            this._log.info(`Received Preauth response but I was not waiting for one. Incoming Pos Ref ID: ${incomingPosRefId}`);\r\n            return;\r\n        }\r\n        // TH-1A, TH-2A\r\n\r\n        currentTxFlowState.Completed(m.GetSuccessState(), m, \"Preauth Transaction Ended.\");\r\n        // TH-6A, TH-6E\r\n        \r\n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this._spi.CurrentTxFlowState}));\r\n    }\r\n\r\n    static IsPreauthEvent(eventName)\r\n    {\r\n        return eventName.lastIndexOf(\"preauth\",0) === 0 \r\n                || eventName == PreauthEvents.PreauthCompleteResponse\r\n                || eventName == PreauthEvents.PreauthCompleteRequest\r\n                || eventName == PreauthEvents.AccountVerifyRequest\r\n                || eventName == PreauthEvents.AccountVerifyResponse;\r\n    }\r\n}\r\n","import {Message, Events, SuccessState} from './Messages';\r\nimport {SpiConfig, TransactionOptions} from './SpiModels';\r\nimport {RequestIdHelper} from './RequestIdHelper';\r\n\r\nexport class CashoutOnlyRequest\r\n{  \r\n    constructor(amountCents, posRefId, surchargeAmount)\r\n    {\r\n        this.PosRefId = posRefId;\r\n        this.CashoutAmount = amountCents;\r\n        this.SurchargeAmount = surchargeAmount;\r\n        this.Config = new SpiConfig();\r\n        this.Options = new TransactionOptions();\r\n    }\r\n    \r\n    ToMessage()\r\n    {\r\n        var data = {\r\n            \"pos_ref_id\": this.PosRefId,\r\n            \"cash_amount\": this.CashoutAmount,\r\n            \"surcharge_amount\": this.SurchargeAmount\r\n        };\r\n\r\n        this.Config.addReceiptConfig(data);\r\n        this.Options.AddOptions(data);\r\n        return new Message(RequestIdHelper.Id(\"cshout\"), Events.CashoutOnlyRequest, data, true);\r\n    }\r\n}\r\n\r\nexport class CashoutOnlyResponse\r\n{\r\n    constructor(m)\r\n    {\r\n        this._m = m;\r\n        this.RequestId = m.Id;\r\n        this.PosRefId = m.Data.pos_ref_id;\r\n        this.SchemeName = m.Data.scheme_name;\r\n        this.Success = m.GetSuccessState() == SuccessState.Success;\r\n    }\r\n\r\n    GetRRN()\r\n    {\r\n        return this._m.Data[\"rrn\"];\r\n    }\r\n\r\n    GetCashoutAmount()\r\n    {\r\n        return this._m.Data[\"cash_amount\"];\r\n    }\r\n\r\n    GetBankNonCashAmount()\r\n    {\r\n        return this._m.Data[\"bank_noncash_amount\"];\r\n    }\r\n\r\n    GetBankCashAmount()\r\n    {\r\n        return this._m.Data[\"bank_cash_amount\"];\r\n    }\r\n    \r\n    GetCustomerReceipt()\r\n    {\r\n        return this._m.Data[\"customer_receipt\"];\r\n    }\r\n\r\n    GetMerchantReceipt()\r\n    {\r\n        return this._m.Data[\"merchant_receipt\"];\r\n    }\r\n    \r\n    GetResponseText()\r\n    {\r\n        return this._m.Data[\"host_response_text\"];\r\n    }\r\n\r\n    GetResponseCode()\r\n    {\r\n        return this._m.Data[\"host_response_code\"];\r\n    }\r\n    \r\n    GetTerminalReferenceId()\r\n    {\r\n        return this._m.Data[\"terminal_ref_id\"];\r\n    }\r\n\r\n    GetAccountType()\r\n    {\r\n        return this._m.Data[\"account_type\"];\r\n    }\r\n\r\n    GetAuthCode()\r\n    {\r\n        return this._m.Data[\"auth_code\"];\r\n    }\r\n\r\n    GetBankDate()\r\n    {\r\n        return this._m.Data[\"bank_date\"];\r\n    }\r\n\r\n    GetBankTime()\r\n    {\r\n        return this._m.Data[\"bank_time\"];\r\n    }\r\n    \r\n    GetMaskedPan()\r\n    {\r\n        return this._m.Data[\"masked_pan\"];\r\n    }\r\n    \r\n    GetTerminalId()\r\n    {\r\n        return this._m.Data[\"terminal_id\"];\r\n    }\r\n\r\n    WasMerchantReceiptPrinted()\r\n    {\r\n        return this._m.Data[\"merchant_receipt_printed\"];\r\n    }\r\n\r\n    WasCustomerReceiptPrinted()\r\n    {\r\n        return this._m.Data[\"customer_receipt_printed\"];\r\n    }\r\n    \r\n    GetSurchargeAmount()\r\n    {\r\n        return this._m.Data[\"surcharge_amount\"];\r\n    }\r\n\r\n    GetResponseValue(attribute)\r\n    {\r\n        return this._m.Data[attribute];\r\n    }\r\n\r\n}","import {Events, SuccessState, Message} from './Messages';\r\n\r\nexport class SettleRequest {\r\n    constructor(id) {\r\n        this.Id = id;\r\n    }\r\n\r\n    ToMessage() {\r\n        return new Message(this.Id, Events.SettleRequest, null, true);\r\n    }\r\n}\r\n\r\nexport class Settlement {\r\n    constructor(m) {\r\n        this.RequestId = m.Id;\r\n        this._m = m;\r\n        this.Success = m.GetSuccessState() == SuccessState.Success;\r\n    }\r\n\r\n    GetSettleByAcquirerCount()\r\n    {\r\n        return this._m.Data.accumulated_settle_by_acquirer_count;\r\n    }\r\n\r\n    GetSettleByAcquirerValue()\r\n    {\r\n        return this._m.Data.accumulated_settle_by_acquirer_value;\r\n    }\r\n\r\n    GetTotalCount()\r\n    {\r\n        return this._m.Data.accumulated_total_count;\r\n    }\r\n\r\n    GetTotalValue()\r\n    {\r\n        return this._m.Data.accumulated_total_value;\r\n    }\r\n\r\n    GetPeriodStartTime()\r\n    {\r\n        var timeStr = this._m.Data.settlement_period_start_time; // \"05:00\"\r\n        var dateStr = this._m.Data.settlement_period_start_date; // \"05Oct17\"\r\n        return Message.ParseBankDateTimeStr(dateStr, timeStr);\r\n    }\r\n\r\n    GetPeriodEndTime()\r\n    {\r\n        var timeStr = this._m.Data.settlement_period_end_time; // \"05:00\"\r\n        var dateStr = this._m.Data.settlement_period_end_date; // \"05Oct17\"\r\n        return Message.ParseBankDateTimeStr(dateStr, timeStr);\r\n    }\r\n\r\n    GetTriggeredTime()\r\n    {\r\n        var timeStr = this._m.Data.settlement_triggered_time; // \"05:00:45\"\r\n        var dateStr = this._m.Data.settlement_triggered_date; // \"05Oct17\"\r\n        return Message.ParseBankDateTimeStr(dateStr, timeStr);\r\n    }\r\n\r\n    GetResponseText()\r\n    {\r\n        return this._m.Data.host_response_text;\r\n    }\r\n    \r\n    GetReceipt()\r\n    {\r\n        return this._m.Data.merchant_receipt;\r\n    }\r\n\r\n    GetTransactionRange()\r\n    {\r\n        return this._m.Data.transaction_range;\r\n    }\r\n\r\n    GetTerminalId()\r\n    {\r\n        return this._m.Data.terminal_id;\r\n    }\r\n\r\n    GetSchemeSettlementEntries()\r\n    {\r\n        var schemes = this._m.Data.schemes;\r\n        if (!schemes) return [];\r\n\r\n        return schemes.map((scheme) => {\r\n            return new SchemeSettlementEntry(scheme);\r\n        });\r\n    }\r\n}\r\n\r\nexport class SchemeSettlementEntry\r\n{\r\n    // SchemeSettlementEntry(string schemeName, bool settleByAcquirer, int totalCount, int totalValue)\r\n    // SchemeSettlementEntry(Object schemeObj)\r\n    constructor(...args)\r\n    {\r\n        if(args.length === 1) {\r\n            this.SchemeName = args[0].scheme_name;\r\n            this.SettleByAcquirer = args[0].settle_by_acquirer.toLowerCase() == \"yes\";\r\n            this.TotalValue = parseInt(args[0].total_value,10);\r\n            this.TotalCount = parseInt(args[0].total_count,10);\r\n        } else if(args.length === 4) {\r\n            this.SchemeName = args[0];\r\n            this.SettleByAcquirer = args[1];\r\n            this.TotalCount = args[2];\r\n            this.TotalValue = args[3];\r\n        }\r\n    }\r\n    \r\n    ToString()\r\n    {\r\n        return `SchemeName: ${this.SchemeName}, SettleByAcquirer: ${this.SettleByAcquirer}, TotalCount: ${this.TotalCount}, TotalValue: ${this.TotalValue}`;\r\n    }\r\n}\r\n\r\nexport class SettlementEnquiryRequest\r\n{\r\n    constructor(id)\r\n    {\r\n        this.Id = id;\r\n    }\r\n    \r\n    ToMessage()\r\n    {\r\n        return new Message(this.Id, Events.SettlementEnquiryRequest, null, true);\r\n    }\r\n}","import {Message, Events, SuccessState} from './Messages';\r\nimport {RequestIdHelper} from './RequestIdHelper';\r\n\r\nexport class SetPosInfoRequest\r\n{\r\n    constructor(version, vendorId, libraryLanguage, libraryVersion, otherInfo)\r\n    {\r\n        this._version = version;\r\n        this._vendorId = vendorId;\r\n        this._libraryLanguage = libraryLanguage;\r\n        this._libraryVersion = libraryVersion;\r\n        this._otherInfo = otherInfo;\r\n    }\r\n\r\n    toMessage()\r\n    {\r\n        var data = {\r\n            pos_version: this._version,\r\n            pos_vendor_id: this._vendorId,\r\n            library_language: this._libraryLanguage,\r\n            library_version: this._libraryVersion,\r\n            other_info: this._otherInfo\r\n        };\r\n\r\n        return new Message(RequestIdHelper.Id(\"prav\"), Events.SetPosInfoRequest, data, true);\r\n    }\r\n}\r\n\r\nexport class SetPosInfoResponse\r\n{\r\n    constructor(m)\r\n    {\r\n        this._success = m.GetSuccessState() == SuccessState.Success;\r\n        this._m = m;\r\n    }\r\n    isSuccess()\r\n    {\r\n        return this._success;\r\n    }\r\n    getErrorReason()\r\n    {\r\n        return this._m.Data.error_reason;\r\n    }\r\n    getErrorDetail()\r\n    {\r\n        return this._m.Data.error_detail;\r\n    }\r\n    getResponseValueWithAttribute(attribute)\r\n    {\r\n        return this._m.Data[attribute];\r\n    }\r\n}\r\n\r\nexport class DeviceInfo\r\n{\r\n    static GetAppDeviceInfo()\r\n    {\r\n        var deviceInfo = {};\r\n        deviceInfo['device_system'] = navigator.userAgent;\r\n        // deviceInfo.Add(\"device_system\", Environment.OSVersion.Platform.ToString() + \" \" + Environment.OSVersion.Version.ToString());\r\n        return deviceInfo;\r\n    }\r\n}\r\n","import {PurchaseRequest, RefundRequest} from './Purchase';\r\n\r\nexport class PurchaseHelper\r\n{\r\n    static CreatePurchaseRequest(amountCents, purchaseId)\r\n    {\r\n        return new PurchaseRequest(amountCents, purchaseId);\r\n    }\r\n    \r\n    static CreatePurchaseRequestV2(posRefId, purchaseAmount, tipAmount, cashoutAmount, promptForCashout, surchargeAmount)\r\n    {\r\n        var pr = Object.assign(new PurchaseRequest(purchaseAmount, posRefId),\r\n        {\r\n            CashoutAmount: cashoutAmount,\r\n            TipAmount: tipAmount,\r\n            PromptForCashout: promptForCashout,\r\n            SurchargeAmount: surchargeAmount\r\n        });\r\n\r\n        return pr;\r\n    }\r\n\r\n    static CreateRefundRequest(amountCents, purchaseId, isSuppressMerchantPassword)\r\n    {\r\n        return new RefundRequest(amountCents, purchaseId, isSuppressMerchantPassword);\r\n    }\r\n\r\n}\r\n","import {Events, Message} from './Messages';\r\nimport {Crypto} from './Crypto';\r\nimport {Secrets} from './Secrets';\r\n\r\nexport class KeyRollingHelper {\r\n    static PerformKeyRolling(krRequest, currentSecrets)\r\n    {\r\n        let m = new Message(krRequest.Id, Events.KeyRollResponse, {\"status\": \"confirmed\"}, true);\r\n        let newSecrets = new Secrets(Crypto.GenerateHash(currentSecrets.EncKey).toUpperCase(),Crypto.GenerateHash(currentSecrets.HmacKey).toUpperCase());\r\n        return new KeyRollingResult(m, newSecrets);\r\n    }\r\n}\r\n\r\nexport class KeyRollingResult {\r\n    constructor(keyRollingConfirmation, newSecrets) {\r\n        this.KeyRollingConfirmation = keyRollingConfirmation;\r\n        this.NewSecrets = newSecrets;\r\n    }\r\n}\r\n","import {RequestIdHelper} from './RequestIdHelper';\r\nimport {Events, Message} from './Messages';\r\n\r\nexport class PongHelper\r\n{\r\n    static GeneratePongRessponse(ping)\r\n    {\r\n        return new Message(ping.Id, Events.Pong, null, true);\r\n    }\r\n}\r\n\r\nexport class PingHelper\r\n{\r\n    static GeneratePingRequest()\r\n    {\r\n        return new Message(RequestIdHelper.Id(\"ping\"), Events.Ping, null, true);\r\n    }\r\n}\r\n","export class DeviceAddressStatus\r\n{\r\n    get Address()\r\n    {\r\n        if(this.UseSecureWebSockets) \r\n        {\r\n            return this.fqdn;\r\n        } \r\n        else\r\n        {\r\n            return this.ip;\r\n        }\r\n    }\r\n\r\n    set Address(address)\r\n    {\r\n        if(this.UseSecureWebSockets) \r\n        {\r\n            this.fqdn = addreses;\r\n        } \r\n        else\r\n        {\r\n            this.ip = address;\r\n        }\r\n    }\r\n\r\n    constructor(useSecureWebSockets) \r\n    {\r\n        this.UseSecureWebSockets = useSecureWebSockets;\r\n\r\n        this.ip = null;\r\n        this.fqdn = null;\r\n        this.last_updated = null;\r\n    }\r\n}\r\n\r\nexport class DeviceAddressService\r\n{\r\n    // RetrieveService(serialNumber, apiKey = 'spi-sample-pos1', acquirerCode, useSecureWebSockets, isTestMode)\r\n    RetrieveService(serialNumber, apiKey = 'spi-sample-pos1', acquirerCode, isSecureConnection, isTestMode)    \r\n    {\r\n        var path = isSecureConnection ? 'fqdn' : 'ip';\r\n        var deviceAddressUri = isTestMode ? `https://device-address-api-sb.${acquirerCode}.msp.assemblypayments.com/v1/${serialNumber}/${path}` : `https://device-address-api.${acquirerCode}.msp.assemblypayments.com/v1/${serialNumber}/${path}`;\r\n\r\n        return fetch(deviceAddressUri, {\r\n            method: 'GET',\r\n            headers: {\r\n                \"ASM-MSP-DEVICE-ADDRESS-API-KEY\": apiKey\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .catch((response) => {\r\n            console.error(`Status code ${response.StatusCode} received from ${deviceAddressUri} - Exception ${response.error}`);\r\n        })\r\n    }\r\n}\r\n","import {Events, Message, SuccessState} from './Messages';\r\nimport {RequestIdHelper} from './RequestIdHelper';\r\n\r\nexport class PrintingRequest\r\n{\r\n    constructor(key, payload)\r\n    {\r\n        this._key = key;\r\n        this._payload = payload;\r\n    }\r\n\r\n    toMessage()\r\n    {\r\n        var data = {\r\n            \"key\": this._key,\r\n            \"payload\": this._payload\r\n        };\r\n\r\n        return new Message(RequestIdHelper.Id(\"print\"), Events.PrintingRequest, data, true);\r\n    }\r\n}\r\n\r\nexport class PrintingResponse\r\n{\r\n    constructor(m)\r\n    {\r\n        this._success = m.GetSuccessState() == SuccessState.Success;\r\n        this._m = m;\r\n    }\r\n    isSuccess()\r\n    {\r\n        return this._success;\r\n    }\r\n    getErrorReason()\r\n    {\r\n        return this._m.Data.error_reason;\r\n    }\r\n    getErrorDetail()\r\n    {\r\n        return this._m.Data.error_detail;\r\n    }\r\n    getResponseValueWithAttribute(attribute)\r\n    {\r\n        return this._m.Data[attribute];\r\n    }\r\n}\r\n\r\n/**\r\n * This class is a mock printer for the terminal to print Receipts\r\n */\r\nexport class Printer {\r\n    constructor(element) {\r\n        this.buffer     = [];\r\n        this.element    = element;\r\n    }\r\n\r\n    print(...args) {\r\n        this.buffer.push(args.join(' '));\r\n        this._render();\r\n    }\r\n\r\n    _render() {\r\n        this.element.innerText = this.buffer.join(`\\n\\n \\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/ \\n\\n`);\r\n        this.element.scrollTop = this.element.scrollHeight;\r\n    }\r\n\r\n    Clear() {\r\n        this.buffer = [];\r\n        this._render();\r\n    }\r\n}","import {Events, Message} from './Messages';\r\nimport {RequestIdHelper} from './RequestIdHelper';\r\n\r\nexport class TerminalStatusRequest\r\n{\r\n    ToMessage()\r\n    {\r\n        var data = {};\r\n\r\n        return new Message(RequestIdHelper.Id(\"trmnl\"), Events.TerminalStatusRequest, data, true);\r\n    }\r\n}\r\n\r\nexport class TerminalStatusResponse\r\n{\r\n    constructor(m)\r\n    {\r\n        this._m = m;\r\n    }\r\n    GetStatus()\r\n    {\r\n        return this._m.Data.status;\r\n    }\r\n    GetBatteryLevel()\r\n    {\r\n        return parseInt(this._m.Data.battery_level,10);\r\n    }\r\n    IsCharging()\r\n    {\r\n        return !!this._m.Data.charging;\r\n    }\r\n}\r\n\r\nexport class TerminalBattery\r\n{\r\n    constructor(m)\r\n    {\r\n        this.BatteryLevel = parseInt(m.Data.battery_level,10);\r\n    }\r\n}\r\n","import {Message, MessageStamp, Events, SuccessState} from './Messages';\r\nimport {SpiConfig, SpiFlow, SpiStatus, PairingFlowState, TransactionFlowState, TransactionType, InitiateTxResult, MidTxResult, SubmitAuthCodeResult} from './SpiModels';\r\nimport {RequestIdHelper} from './RequestIdHelper';\r\nimport {PairingHelper} from './PairingHelper';\r\nimport {Connection, ConnectionState} from './Connection';\r\nimport {SpiPayAtTable} from './SpiPayAtTable';\r\nimport {PayAtTableConfig} from './PayAtTable';\r\nimport {SpiPreauth} from './SpiPreauth';\r\nimport {CashoutOnlyRequest} from './Cashout';\r\nimport {SettleRequest, SettlementEnquiryRequest} from './Settlement';\r\nimport {DropKeysRequest, KeyRequest, KeyCheck, PairResponse} from './Pairing';\r\nimport {SetPosInfoRequest, SetPosInfoResponse, DeviceInfo} from './PosInfo';\r\nimport {PurchaseHelper} from './PurchaseHelper';\r\nimport {KeyRollingHelper} from './KeyRollingHelper';\r\nimport {PingHelper, PongHelper} from './PingHelper';\r\nimport {GetLastTransactionRequest, GetLastTransactionResponse, SignatureAccept, SignatureDecline, MotoPurchaseRequest, AuthCodeAdvice, CancelTransactionRequest, SignatureRequired, CancelTransactionResponse, PhoneForAuthRequired} from './Purchase';\r\nimport {DeviceAddressService, DeviceAddressStatus} from './Service/DeviceService';\r\nimport {PrintingRequest} from './Printing';\r\nimport {TerminalStatusRequest} from './TerminalStatus';\r\n\r\nexport const SPI_VERSION = '2.4.0';\r\n\r\nexport default class Spi {\r\n\r\n    get CurrentStatus() {\r\n        return this._currentStatus;\r\n    }\r\n\r\n    set CurrentStatus(value) {\r\n        if(this._currentStatus === value) {\r\n            return;\r\n        }\r\n\r\n        this._currentStatus = value;\r\n        document.dispatchEvent(new CustomEvent('StatusChanged', {detail: value}));\r\n    }\r\n\r\n    constructor(posId, serialNumber, eftposAddress, secrets) \r\n    {\r\n        this._posId = posId;\r\n        this._serialNumber = serialNumber;\r\n        this._secrets = secrets;\r\n        this._forceSecureWebSockets = false;\r\n        this._eftposAddress = \"ws://\" + eftposAddress;\r\n        this._log = console;\r\n        this.Config = new SpiConfig();\r\n\r\n        this.CurrentDeviceStatus = null;\r\n        this._deviceApiKey  = null;\r\n        this._acquirerCode  = null;\r\n        this._inTestMode    = false;\r\n        this._autoAddressResolutionEnabled = false;\r\n\r\n        // Our stamp for signing outgoing messages\r\n        this._spiMessageStamp = new MessageStamp(this._posId, this._secrets, 0);\r\n\r\n        this._posVendorId = null;\r\n        this._posVersion = null;\r\n        this._hasSetInfo = null;\r\n\r\n        // We will maintain some state\r\n        this._mostRecentPingSent = null;\r\n        this._mostRecentPongReceived = null;\r\n        this._missedPongsCount = 0;\r\n        this._retriesSinceLastDeviceAddressResolution = 0;\r\n        this._mostRecentLoginResponse = null;\r\n\r\n        this._pongTimeout = 5000;\r\n        this._pingFrequency = 18000;\r\n        \r\n        this._readyToTransact = null;\r\n        this._periodicPingThread = null;\r\n\r\n        this._txMonitorCheckFrequency = 1000;\r\n        this._checkOnTxFrequency = 20000;\r\n        this._maxWaitForCancelTx = 10000;\r\n        this._sleepBeforeReconnectMs = 5000;\r\n        this._missedPongsToDisconnect = 2;\r\n        this._retriesBeforeResolvingDeviceAddress = 5;\r\n\r\n        this.CurrentFlow                = null;\r\n        this.CurrentPairingFlowState    = null;\r\n        this.CurrentTxFlowState         = null;\r\n    }\r\n\r\n    EnablePayAtTable()\r\n    {\r\n        this._spiPat = new SpiPayAtTable(this);\r\n        return this._spiPat;\r\n    }\r\n\r\n    EnablePreauth()\r\n    {\r\n        this._spiPreauth = new SpiPreauth(this);\r\n        return this._spiPreauth;\r\n    }\r\n\r\n    Start() {\r\n\r\n        if (!this._posVendorId || !this._posVersion)\r\n        {\r\n            // POS information is now required to be set\r\n            this._log.Warn(\"Missing POS vendor ID and version. posVendorId and posVersion are required before starting\");\r\n            throw new Exception(\"Missing POS vendor ID and version. posVendorId and posVersion are required before starting\");\r\n        }\r\n\r\n        this._resetConn();\r\n        this._startTransactionMonitoringThread();\r\n\r\n        this.CurrentFlow = SpiFlow.Idle;\r\n        if (this._secrets != null)\r\n        {\r\n            this._log.info(\"Starting in Paired State\");\r\n            this._currentStatus = SpiStatus.PairedConnecting;\r\n            this._conn.Connect(); // This is non-blocking\r\n        }\r\n        else\r\n        {\r\n            this._log.info(\"Starting in Unpaired State\");\r\n            this._currentStatus = SpiStatus.Unpaired;\r\n        } \r\n    }\r\n\r\n    /// <summary>\r\n    /// Set the acquirer code of your bank, please contact Assembly's Integration Engineers for acquirer code.\r\n    /// </summary>\r\n    SetAcquirerCode(acquirerCode)\r\n    {\r\n        this._acquirerCode = acquirerCode;\r\n        return true;\r\n    }\r\n\r\n    /// <summary>\r\n    /// Set the api key used for auto address discovery feature\r\n    /// </summary>\r\n    /// <returns></returns>\r\n    SetDeviceApiKey(deviceApiKey)\r\n    {\r\n        this._deviceApiKey = deviceApiKey;\r\n        return true;\r\n    }\r\n\r\n    /// <summary>\r\n    /// Allows you to set the serial number of the Eftpos\r\n    /// </summary>\r\n    SetSerialNumber(serialNumber)\r\n    {\r\n        if (this.CurrentStatus != SpiStatus.Unpaired)\r\n            return false;\r\n\r\n        var was = this._serialNumber;\r\n        this._serialNumber = serialNumber;\r\n        if (this._autoAddressResolutionEnabled && this.HasSerialNumberChanged(was))\r\n        {\r\n            this._autoResolveEftposAddress();\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /// <summary>\r\n    /// Allows you to set the auto address discovery feature. \r\n    /// </summary>\r\n    /// <returns></returns>\r\n    SetAutoAddressResolution(autoAddressResolutionEnable)\r\n    {\r\n        if (this.CurrentStatus == SpiStatus.PairedConnected)\r\n            return false;\r\n\r\n        var was = this._autoAddressResolutionEnabled;\r\n        this._autoAddressResolutionEnabled = autoAddressResolutionEnable;\r\n        if (autoAddressResolutionEnable && !was)\r\n        {\r\n            // we're turning it on\r\n            this._autoResolveEftposAddress();\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /// <summary>\r\n    /// Call this method to set the client library test mode.\r\n    /// Set it to true only while you are developing the integration. \r\n    /// It defaults to false. For a real merchant, always leave it set to false. \r\n    /// </summary>\r\n    /// <param name=\"testMode\"></param>\r\n    /// <returns></returns>\r\n    SetTestMode(testMode)\r\n    {\r\n        if (this.CurrentStatus != SpiStatus.Unpaired)\r\n            return false;\r\n\r\n        if (testMode == this._inTestMode)\r\n            return true;\r\n\r\n        // we're changing mode\r\n        this._inTestMode = testMode;\r\n        this._autoResolveEftposAddress();\r\n        return true;\r\n    }\r\n\r\n    /// <summary>\r\n    /// Set the client library to use secure web sockets TLS (wss protocol)\r\n    /// </summary>\r\n    /// <param name=\"isSecure\"></param>\r\n    /// <returns></returns>\r\n    SetSecureWebSockets(useSecureWebSockets)\r\n    {\r\n        this._forceSecureWebSockets = useSecureWebSockets;\r\n    }\r\n\r\n    // <summary>\r\n    // Allows you to set the PosId which identifies this instance of your POS.\r\n    // Can only be called in thge Unpaired state. \r\n    // </summary>\r\n    SetPosId(posId)\r\n    {\r\n        if (this.CurrentStatus != SpiStatus.Unpaired)\r\n            return false;\r\n\r\n        this._posId = posId;\r\n        this._spiMessageStamp.PosId = posId;\r\n        return true;\r\n    }\r\n\r\n    // <summary>\r\n    // Allows you to set the PinPad address. Sometimes the PinPad might change IP address \r\n    // (we recommend reserving static IPs if possible).\r\n    // Either way you need to allow your User to enter the IP address of the PinPad.\r\n    // </summary>\r\n    SetEftposAddress(address)\r\n    {\r\n        if (this.CurrentStatus == SpiStatus.PairedConnected || this._autoAddressResolutionEnabled) {\r\n            return false;\r\n        }\r\n\r\n        this._eftposAddress = \"ws://\" + address;\r\n        this._conn.Address = this._eftposAddress;\r\n        return true;\r\n    }\r\n\r\n    static GetVersion()\r\n    {\r\n        return SPI_VERSION;\r\n    }\r\n\r\n    /**\r\n     * Sets values used to identify the POS software to the EFTPOS terminal.\r\n     * Must be set before starting!\r\n     *\r\n     * @param posVendorId Vendor identifier of the POS itself.\r\n     * @param posVersion  Version string of the POS itself.\r\n     */\r\n    SetPosInfo(posVendorId, posVersion)\r\n    {\r\n        this._posVendorId = posVendorId;\r\n        this._posVersion = posVersion;\r\n    }\r\n\r\n    // <summary>\r\n    // Call this one when a flow is finished and you want to go back to idle state.\r\n    // Typically when your user clicks the \"OK\" bubtton to acknowldge that pairing is\r\n    // finished, or that transaction is finished.\r\n    // When true, you can dismiss the flow screen and show back the idle screen.\r\n    // </summary>\r\n    // <returns>true means we have moved back to the Idle state. false means current flow was not finished yet.</returns>\r\n    AckFlowEndedAndBackToIdle()\r\n    {\r\n        if (this.CurrentFlow == SpiFlow.Idle)\r\n            return true; // already idle\r\n\r\n        if (this.CurrentFlow == SpiFlow.Pairing && this.CurrentPairingFlowState.Finished)\r\n        {\r\n            this.CurrentFlow = SpiFlow.Idle;\r\n            return true;\r\n        }\r\n        \r\n        if (this.CurrentFlow == SpiFlow.Transaction && this.CurrentTxFlowState.Finished)\r\n        {\r\n            this.CurrentFlow = SpiFlow.Idle;\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    // endregion\r\n\r\n    // <summary>\r\n    // This will connect to the Eftpos and start the pairing process.\r\n    // Only call this if you are in the Unpaired state.\r\n    // Subscribe to the PairingFlowStateChanged event to get updates on the pairing process.\r\n    // </summary>\r\n    // <returns>Whether pairing has initiated or not</returns>\r\n    Pair()\r\n    {\r\n        if (this.CurrentStatus != SpiStatus.Unpaired) {\r\n            this._log.warn(\"Tried to Pair but we're already so.\");\r\n            return false;\r\n        }\r\n\r\n        if (!this._posId || !this._eftposAddress)\r\n        {\r\n            this._log.warn(\"Tried to Pair but missing posId or updatedEftposAddress\");\r\n            return false;\r\n        }\r\n\r\n        this.CurrentFlow = SpiFlow.Pairing;\r\n        this.CurrentPairingFlowState = new PairingFlowState\r\n        ({\r\n            Successful: false,\r\n            Finished: false,\r\n            Message: \"Connecting...\",\r\n            AwaitingCheckFromEftpos: false,\r\n            AwaitingCheckFromPos: false,\r\n            ConfirmationCode: \"\"\r\n        });\r\n\r\n        document.dispatchEvent(new CustomEvent('PairingFlowStateChanged', {detail: this.CurrentPairingFlowState}));\r\n        this._conn.Connect(); // Non-Blocking\r\n        return true;\r\n    }\r\n\r\n    // <summary>\r\n    // Call this when your user clicks yes to confirm the pairing code on your \r\n    // screen matches the one on the Eftpos.\r\n    // </summary>\r\n    PairingConfirmCode()\r\n    {\r\n        if (!this.CurrentPairingFlowState.AwaitingCheckFromPos)\r\n        {\r\n            // We weren't expecting this\r\n            return;\r\n        }\r\n\r\n        this.CurrentPairingFlowState.AwaitingCheckFromPos = false;\r\n        if (this.CurrentPairingFlowState.AwaitingCheckFromEftpos)\r\n        {\r\n            // But we are still waiting for confirmation from Eftpos side.\r\n            this._log.info(\"Pair Code Confirmed from POS side, but am still waiting for confirmation from Eftpos.\");\r\n            this.CurrentPairingFlowState.Message =\r\n                \"Click YES on EFTPOS if code is: \" + this.CurrentPairingFlowState.ConfirmationCode;\r\n            document.dispatchEvent(new CustomEvent('PairingFlowStateChanged', {detail: this.CurrentPairingFlowState}));\r\n        }\r\n        else\r\n        {\r\n            // Already confirmed from Eftpos - So all good now. We're Paired also from the POS perspective.\r\n            this._log.info(\"Pair Code Confirmed from POS side, and was already confirmed from Eftpos side. Pairing finalised.\");\r\n            this._onPairingSuccess();\r\n            this._onReadyToTransact();\r\n        }\r\n    }\r\n\r\n    // <summary>\r\n    // Call this if your user clicks CANCEL or NO during the pairing process.\r\n    // </summary>\r\n    PairingCancel()\r\n    {\r\n        if (this.CurrentFlow != SpiFlow.Pairing || this.CurrentPairingFlowState.Finished) {\r\n            return;\r\n        }\r\n\r\n        if (this.CurrentPairingFlowState.AwaitingCheckFromPos && !this.CurrentPairingFlowState.AwaitingCheckFromEftpos)\r\n        {\r\n            // This means that the Eftpos already thinks it's paired.\r\n            // Let's tell it to drop keys\r\n            this._send(new DropKeysRequest().ToMessage());\r\n        }\r\n        this._onPairingFailed();\r\n    }\r\n\r\n    // <summary>\r\n    // Call this when your uses clicks the Unpair button.\r\n    // This will disconnect from the Eftpos and forget the secrets.\r\n    // The CurrentState is then changed to Unpaired.\r\n    // Call this only if you are not yet in the Unpaired state.\r\n    // </summary>\r\n    Unpair()\r\n    {\r\n        if (this.CurrentStatus == SpiStatus.Unpaired) {\r\n            return false;\r\n        }\r\n\r\n        if (this.CurrentFlow != SpiFlow.Idle) {\r\n            return false;\r\n        }\r\n        \r\n        // Best effort letting the eftpos know that we're dropping the keys, so it can drop them as well.\r\n        this._send(new DropKeysRequest().ToMessage());\r\n        this._doUnpair();\r\n        return true;\r\n    }\r\n\r\n    // endregion\r\n\r\n    // region Transaction Methods\r\n\r\n    // <summary>\r\n    // Initiates a purchase transaction. Be subscribed to TxFlowStateChanged event to get updates on the process.\r\n    // </summary>\r\n    // <param name=\"posRefId\">Alphanumeric Identifier for your purchase.</param>\r\n    // <param name=\"amountCents\">Amount in Cents to charge</param>\r\n    // <returns>InitiateTxResult</returns>\r\n    InitiatePurchaseTx(posRefId, amountCents)\r\n    {\r\n        if (this.CurrentStatus == SpiStatus.Unpaired) {\r\n            return new InitiateTxResult(false, \"Not Paired\");\r\n        }\r\n\r\n        if (this.CurrentFlow != SpiFlow.Idle) {\r\n            return new InitiateTxResult(false, \"Not Idle\");\r\n        }\r\n\r\n        var purchaseRequest = PurchaseHelper.CreatePurchaseRequest(amountCents, posRefId);\r\n        purchaseRequest.Config = this.Config;\r\n        var purchaseMsg = purchaseRequest.ToMessage();\r\n        this.CurrentFlow = SpiFlow.Transaction;\r\n        this.CurrentTxFlowState = new TransactionFlowState(\r\n            posRefId, TransactionType.Purchase, amountCents, purchaseMsg,\r\n            `Waiting for EFTPOS connection to make payment request for ${amountCents / 100.0}`);\r\n        if (this._send(purchaseMsg))\r\n        {\r\n            this.CurrentTxFlowState.Sent(`Asked EFTPOS to accept payment for ${amountCents / 100.0}`);\r\n        }\r\n        \r\n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\r\n        return new InitiateTxResult(true, \"Purchase Initiated\");\r\n    }\r\n\r\n    // <summary>\r\n    // Initiates a purchase transaction. Be subscribed to TxFlowStateChanged event to get updates on the process.\r\n    // <para>Tip and cashout are not allowed simultaneously.</para>\r\n    // </summary>\r\n    // <param name=\"posRefId\">An Unique Identifier for your Order/Purchase</param>\r\n    // <param name=\"purchaseAmount\">The Purchase Amount in Cents.</param>\r\n    // <param name=\"tipAmount\">The Tip Amount in Cents</param>\r\n    // <param name=\"cashoutAmount\">The Cashout Amount in Cents</param>\r\n    // <param name=\"promptForCashout\">Whether to prompt your customer for cashout on the Eftpos</param>\r\n    // <param name=\"options\">The Setting to set Header and Footer for the Receipt</param>\r\n    // <param name=\"surchargeAmount\">The Surcharge Amount in Cents</param>\r\n    // <returns>InitiateTxResult</returns>\r\n    InitiatePurchaseTxV2(posRefId, purchaseAmount, tipAmount, cashoutAmount, promptForCashout, options = {}, surchargeAmount = 0)\r\n    {\r\n        if (this.CurrentStatus == SpiStatus.Unpaired) return new InitiateTxResult(false, \"Not Paired\");\r\n\r\n        if (tipAmount > 0 && (cashoutAmount > 0 || promptForCashout)) return new InitiateTxResult(false, \"Cannot Accept Tips and Cashout at the same time.\");\r\n        \r\n        if (this.CurrentFlow != SpiFlow.Idle) return new InitiateTxResult(false, \"Not Idle\");\r\n        this.CurrentFlow = SpiFlow.Transaction;\r\n        \r\n        var purchase = PurchaseHelper.CreatePurchaseRequestV2(posRefId, purchaseAmount, tipAmount, cashoutAmount, promptForCashout, surchargeAmount);\r\n        purchase.Config = this.Config;\r\n        purchase.Options = options;\r\n        var purchaseMsg = purchase.ToMessage();\r\n        this.CurrentTxFlowState = new TransactionFlowState(\r\n            posRefId, TransactionType.Purchase, purchaseAmount, purchaseMsg,\r\n            `Waiting for EFTPOS connection to make payment request. ${purchase.AmountSummary()}`);\r\n        if (this._send(purchaseMsg))\r\n        {\r\n            this.CurrentTxFlowState.Sent(`Asked EFTPOS to accept payment for ${purchase.AmountSummary()}`);\r\n        }\r\n        \r\n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\r\n        return new InitiateTxResult(true, \"Purchase Initiated\");\r\n    }\r\n\r\n    // <summary>\r\n    // Initiates a refund transaction. Be subscribed to TxFlowStateChanged event to get updates on the process.\r\n    // </summary>\r\n    // <param name=\"posRefId\">Alphanumeric Identifier for your refund.</param>\r\n    // <param name=\"amountCents\">Amount in Cents to charge</param>\r\n    // <param name=\"isSuppressMerchantPassword\">Merchant Password control in VAA</param>\r\n    // <returns>InitiateTxResult</returns>\r\n    InitiateRefundTx(posRefId, amountCents, isSuppressMerchantPassword = false)\r\n    {\r\n        if (this.CurrentStatus == SpiStatus.Unpaired) {\r\n            return new InitiateTxResult(false, \"Not Paired\");\r\n        }\r\n\r\n        if (this.CurrentFlow != SpiFlow.Idle) {\r\n            return new InitiateTxResult(false, \"Not Idle\");\r\n        }\r\n\r\n        var refundRequest = PurchaseHelper.CreateRefundRequest(amountCents, posRefId, isSuppressMerchantPassword);\r\n        refundRequest.Config = this.Config;\r\n        var refundMsg = refundRequest.ToMessage();\r\n        this.CurrentFlow = SpiFlow.Transaction;\r\n        this.CurrentTxFlowState = new TransactionFlowState(\r\n            posRefId, TransactionType.Refund, amountCents, refundMsg, \r\n            `Waiting for EFTPOS connection to make refund request for ${(amountCents / 100.0).toFixed(2)}`);\r\n        if (this._send(refundMsg))\r\n        {\r\n            this.CurrentTxFlowState.Sent(`Asked EFTPOS to refund ${(amountCents / 100.0).toFixed(2)}`);\r\n        }\r\n        \r\n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\r\n        return new InitiateTxResult(true, \"Refund Initiated\");\r\n    }\r\n    \r\n    // <summary>\r\n    // Let the EFTPOS know whether merchant accepted or declined the signature\r\n    // </summary>\r\n    // <param name=\"accepted\">whether merchant accepted the signature from customer or not</param>\r\n    AcceptSignature(accepted)\r\n    {\r\n        if (this.CurrentFlow != SpiFlow.Transaction || this.CurrentTxFlowState.Finished || !this.CurrentTxFlowState.AwaitingSignatureCheck)\r\n        {\r\n            this._log.info(\"Asked to accept signature but I was not waiting for one.\");\r\n            return new MidTxResult(false, \"Asked to accept signature but I was not waiting for one.\");\r\n        }\r\n\r\n        this.CurrentTxFlowState.SignatureResponded(accepted ? \"Accepting Signature...\" : \"Declining Signature...\");\r\n        var sigReqMsg = this.CurrentTxFlowState.SignatureRequiredMessage;\r\n        this._send(accepted\r\n            ? new SignatureAccept(this.CurrentTxFlowState.PosRefId).ToMessage()\r\n            : new SignatureDecline(this.CurrentTxFlowState.PosRefId).ToMessage());\r\n        \r\n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\r\n        return new MidTxResult(true, \"\");\r\n    }\r\n\r\n    // <summary>\r\n    // Submit the Code obtained by your user when phoning for auth. \r\n    // It will return immediately to tell you whether the code has a valid format or not. \r\n    // If valid==true is returned, no need to do anything else. Expect updates via standard callback.\r\n    // If valid==false is returned, you can show your user the accompanying message, and invite them to enter another code. \r\n    // </summary>\r\n    // <param name=\"authCode\">The code obtained by your user from the merchant call centre. It should be a 6-character alpha-numeric value.</param>\r\n    // <returns>Whether code has a valid format or not.</returns>\r\n    SubmitAuthCode(authCode)\r\n    {\r\n        if (authCode.length != 6)\r\n        {\r\n            return new SubmitAuthCodeResult(false, \"Not a 6-digit code.\");    \r\n        }\r\n                \r\n        if (this.CurrentFlow != SpiFlow.Transaction || this.CurrentTxFlowState.Finished || !this.CurrentTxFlowState.AwaitingPhoneForAuth)\r\n        {\r\n            this._log.info(\"Asked to send auth code but I was not waiting for one.\");\r\n            return new SubmitAuthCodeResult(false, \"Was not waiting for one.\");\r\n        }\r\n\r\n        this.CurrentTxFlowState.AuthCodeSent(`Submitting Auth Code ${authCode}`);\r\n        this._send(new AuthCodeAdvice(this.CurrentTxFlowState.PosRefId, authCode).ToMessage());\r\n        \r\n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\r\n        return new SubmitAuthCodeResult(true, \"Valid Code.\");\r\n    }\r\n\r\n    // <summary>\r\n    // Attempts to cancel a Transaction. \r\n    // Be subscribed to TxFlowStateChanged event to see how it goes.\r\n    // Wait for the transaction to be finished and then see whether cancellation was successful or not.\r\n    // </summary>\r\n    // <returns>MidTxResult - false only if you called it in the wrong state</returns>\r\n    CancelTransaction()\r\n    {\r\n        if (this.CurrentFlow != SpiFlow.Transaction || this.CurrentTxFlowState.Finished)\r\n        {\r\n            this._log.info(\"Asked to cancel transaction but I was not in the middle of one.\");\r\n            return new MidTxResult(false, \"Asked to cancel transaction but I was not in the middle of one.\");\r\n        }\r\n\r\n        // TH-1C, TH-3C - Merchant pressed cancel\r\n        if (this.CurrentTxFlowState.RequestSent)\r\n        {\r\n            var cancelReq = new CancelTransactionRequest();\r\n            this.CurrentTxFlowState.Cancelling(\"Attempting to Cancel Transaction...\");\r\n            this._send(cancelReq.ToMessage());\r\n        }\r\n        else\r\n        {\r\n            // We Had Not Even Sent Request Yet. Consider as known failed.\r\n            this.CurrentTxFlowState.Failed(null, \"Transaction Cancelled. Request Had not even been sent yet.\");\r\n        }\r\n        \r\n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\r\n        return new MidTxResult(true, \"\");\r\n    }\r\n\r\n    // <summary>\r\n    // Initiates a cashout only transaction. Be subscribed to TxFlowStateChanged event to get updates on the process.\r\n    // </summary>\r\n    // <param name=\"posRefId\">Alphanumeric Identifier for your transaction.</param>\r\n    // <param name=\"amountCents\">Amount in Cents to cash out</param>\r\n    // <param name=\"surchargeAmount\">The Surcharge Amount in Cents</param>\r\n    // <returns>InitiateTxResult</returns>\r\n    InitiateCashoutOnlyTx(posRefId, amountCents, surchargeAmount = 0)\r\n    {\r\n        if (this.CurrentStatus == SpiStatus.Unpaired) return new InitiateTxResult(false, \"Not Paired\");\r\n\r\n        if (this.CurrentFlow != SpiFlow.Idle) return new InitiateTxResult(false, \"Not Idle\");\r\n        var cashoutOnlyRequest = new CashoutOnlyRequest(amountCents, posRefId, surchargeAmount);\r\n        cashoutOnlyRequest.Config = this.Config;\r\n        var cashoutMsg = cashoutOnlyRequest.ToMessage();\r\n        this.CurrentFlow = SpiFlow.Transaction;\r\n        this.CurrentTxFlowState = new TransactionFlowState(\r\n            posRefId, TransactionType.CashoutOnly, amountCents, cashoutMsg,\r\n            `Waiting for EFTPOS connection to send cashout request for ${(amountCents / 100).toFixed(2)}`);\r\n        if (this._send(cashoutMsg))\r\n        {\r\n            this.CurrentTxFlowState.Sent(`Asked EFTPOS to do cashout for ${(amountCents / 100).toFixed(2)}`);\r\n        }\r\n        \r\n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\r\n        return new InitiateTxResult(true, \"Cashout Initiated\");\r\n    }    \r\n\r\n    // <summary>\r\n    // Initiates a Mail Order / Telephone Order Purchase Transaction\r\n    // </summary>\r\n    // <param name=\"posRefId\">Alphanumeric Identifier for your transaction.</param>\r\n    // <param name=\"amountCents\">Amount in Cents</param>\r\n    // <param name=\"surchargeAmount\">The Surcharge Amount in Cents</param>\r\n    // <returns>InitiateTxResult</returns>\r\n    InitiateMotoPurchaseTx(posRefId, amountCents, surchargeAmount = 0)\r\n    {\r\n        if (this.CurrentStatus == SpiStatus.Unpaired) return new InitiateTxResult(false, \"Not Paired\");\r\n\r\n        if (this.CurrentFlow != SpiFlow.Idle) return new InitiateTxResult(false, \"Not Idle\");\r\n        var motoPurchaseRequest = new MotoPurchaseRequest(amountCents, posRefId, surchargeAmount);\r\n        motoPurchaseRequest.Config = this.Config;\r\n        var cashoutMsg = motoPurchaseRequest.ToMessage();\r\n        this.CurrentFlow = SpiFlow.Transaction;\r\n        this.CurrentTxFlowState = new TransactionFlowState(\r\n            posRefId, TransactionType.MOTO, amountCents, cashoutMsg,\r\n            `Waiting for EFTPOS connection to send MOTO request for ${(amountCents / 100).toFixed(2)}`);\r\n        if (this._send(cashoutMsg))\r\n        {\r\n            this.CurrentTxFlowState.Sent(`Asked EFTPOS do MOTO for ${(amountCents / 100).toFixed(2)}`);\r\n        }\r\n        \r\n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\r\n        return new InitiateTxResult(true, \"MOTO Initiated\");\r\n    }\r\n\r\n    // <summary>\r\n    // Initiates a settlement transaction.\r\n    // Be subscribed to TxFlowStateChanged event to get updates on the process.\r\n    // </summary>\r\n    InitiateSettleTx(posRefId)\r\n    {\r\n        if (this.CurrentStatus == SpiStatus.Unpaired) {\r\n            return new InitiateTxResult(false, \"Not Paired\");\r\n        }\r\n\r\n        if (this.CurrentFlow != SpiFlow.Idle) {\r\n            return new InitiateTxResult(false, \"Not Idle\");\r\n        }\r\n\r\n        var settleRequestMsg = new SettleRequest(RequestIdHelper.Id(\"settle\")).ToMessage();\r\n        this.CurrentFlow = SpiFlow.Transaction;\r\n        this.CurrentTxFlowState = new TransactionFlowState(\r\n            posRefId, TransactionType.Settle, 0, settleRequestMsg, \r\n            `Waiting for EFTPOS connection to make a settle request`);\r\n\r\n        if (this._send(settleRequestMsg))\r\n        {\r\n            this.CurrentTxFlowState.Sent(`Asked EFTPOS to settle.`);\r\n        }\r\n        \r\n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\r\n        return new InitiateTxResult(true, \"Settle Initiated\");   \r\n    }\r\n\r\n    // <summary>\r\n    // </summary>\r\n    InitiateSettlementEnquiry(posRefId)\r\n    {\r\n        if (this.CurrentStatus == SpiStatus.Unpaired) return new InitiateTxResult(false, \"Not Paired\");\r\n\r\n        if (this.CurrentFlow != SpiFlow.Idle) return new InitiateTxResult(false, \"Not Idle\");\r\n        var stlEnqMsg = new SettlementEnquiryRequest(RequestIdHelper.Id(\"stlenq\")).ToMessage();\r\n        this.CurrentFlow = SpiFlow.Transaction;\r\n        this.CurrentTxFlowState = new TransactionFlowState(\r\n            posRefId, TransactionType.SettlementEnquiry, 0, stlEnqMsg,\r\n            \"Waiting for EFTPOS connection to make a settlement enquiry\");\r\n        if (this._send(stlEnqMsg))\r\n        {\r\n            this.CurrentTxFlowState.Sent(\"Asked EFTPOS to make a settlement enquiry.\");\r\n        }\r\n        \r\n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\r\n        return new InitiateTxResult(true, \"Settle Initiated\");   \r\n    }\r\n\r\n    // <summary>\r\n    // Initiates a Get Last Transaction. Use this when you want to retrieve the most recent transaction\r\n    // that was processed by the Eftpos.\r\n    // Be subscribed to TxFlowStateChanged event to get updates on the process.\r\n    // </summary>\r\n    InitiateGetLastTx()\r\n    {\r\n        if (this.CurrentStatus == SpiStatus.Unpaired) {\r\n            return new InitiateTxResult(false, \"Not Paired\");\r\n        }\r\n\r\n        if (this.CurrentFlow != SpiFlow.Idle) {\r\n            return new InitiateTxResult(false, \"Not Idle\");\r\n        }\r\n\r\n        var gltRequestMsg = new GetLastTransactionRequest().ToMessage();\r\n        this.CurrentFlow = SpiFlow.Transaction;\r\n        var posRefId = gltRequestMsg.Id; // GetLastTx is not trying to get anything specific back. So we just use the message id.\r\n        this.CurrentTxFlowState = new TransactionFlowState(\r\n            posRefId, TransactionType.GetLastTransaction, 0, gltRequestMsg, \r\n            \"Waiting for EFTPOS connection to make a Get-Last-Transaction request.\");\r\n        \r\n        if (this._send(gltRequestMsg))\r\n        {\r\n            this.CurrentTxFlowState.Sent(`Asked EFTPOS for last transaction.`);\r\n        }\r\n    \r\n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\r\n        return new InitiateTxResult(true, \"GLT Initiated\");   \r\n    }\r\n\r\n    // <summary>\r\n    // This is useful to recover from your POS crashing in the middle of a transaction.\r\n    // When you restart your POS, if you had saved enough state, you can call this method to recover the client library state.\r\n    // You need to have the posRefId that you passed in with the original transaction, and the transaction type.\r\n    // This method will return immediately whether recovery has started or not.\r\n    // If recovery has started, you need to bring up the transaction modal to your user a be listening to TxFlowStateChanged.\r\n    // </summary>\r\n    // <param name=\"posRefId\">The is that you had assigned to the transaction that you are trying to recover.</param>\r\n    // <param name=\"txType\">The transaction type.</param>\r\n    // <returns></returns>\r\n    InitiateRecovery(posRefId, txType)\r\n    {\r\n        if (this.CurrentStatus == SpiStatus.Unpaired) return new InitiateTxResult(false, \"Not Paired\");\r\n    \r\n        if (this.CurrentFlow != SpiFlow.Idle) return new InitiateTxResult(false, \"Not Idle\");\r\n        \r\n        this.CurrentFlow = SpiFlow.Transaction;\r\n        \r\n        var gltRequestMsg = new GetLastTransactionRequest().ToMessage();\r\n        this.CurrentTxFlowState = new TransactionFlowState(\r\n            posRefId, txType, 0, gltRequestMsg, \r\n            \"Waiting for EFTPOS connection to attempt recovery.\");\r\n        \r\n        if (this._send(gltRequestMsg))\r\n        {\r\n            this.CurrentTxFlowState.Sent(`Asked EFTPOS to recover state.`);\r\n        }\r\n    \r\n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\r\n        return new InitiateTxResult(true, \"Recovery Initiated\");\r\n    }\r\n\r\n    // <summary>\r\n    // GltMatch attempts to conclude whether a gltResponse matches an expected transaction and returns\r\n    // the outcome. \r\n    // If Success/Failed is returned, it means that the gtlResponse did match, and that transaction was succesful/failed.\r\n    // If Unknown is returned, it means that the gltResponse does not match the expected transaction. \r\n    // </summary>\r\n    // <param name=\"gltResponse\">The GetLastTransactionResponse message to check</param>\r\n    // <param name=\"posRefId\">The Reference Id that you passed in with the original request.</param>\r\n\r\n    // <returns></returns>\r\n    GltMatch(gltResponse, posRefId, ...deprecatedArgs) \r\n    {\r\n        // Obsolete method call check\r\n        // Old interface: GltMatch(GetLastTransactionResponse gltResponse, TransactionType expectedType, int expectedAmount, DateTime requestTime, string posRefId)\r\n        if(deprecatedArgs.length) {\r\n            if(deprecatedArgs.length == 2) {\r\n                this._log.info(\"Obsolete method call detected: Use GltMatch(gltResponse, posRefId)\");\r\n                return this.GltMatch(gltResponse, deprecatedArgs[2]);\r\n            } else {\r\n                throw new Error(\"Obsolete method call with unknown args: Use GltMatch(GetLastTransactionResponse gltResponse, string posRefId)\");\r\n            }\r\n        }\r\n\r\n        this._log.info(`GLT CHECK: PosRefId: ${posRefId}->${gltResponse.GetPosRefId()}`);\r\n\r\n        if (!posRefId == gltResponse.GetPosRefId())\r\n        {\r\n            return SuccessState.Unknown;\r\n        }\r\n\r\n        return gltResponse.GetSuccessState();\r\n    }\r\n    \r\n    PrintReceipt(key, payload)\r\n    {\r\n        this._send(new PrintingRequest(key, payload).toMessage());\r\n    }\r\n\r\n    GetTerminalStatus()\r\n    {\r\n        this._send(new TerminalStatusRequest().ToMessage());\r\n    }\r\n\r\n    // endregion\r\n        \r\n    // region Internals for Pairing Flow\r\n\r\n    // <summary>\r\n    // Handling the 2nd interaction of the pairing process, i.e. an incoming KeyRequest.\r\n    // </summary>\r\n    // <param name=\"m\">incoming message</param>\r\n    _handleKeyRequest(m)\r\n    {\r\n        this.CurrentPairingFlowState.Message = \"Negotiating Pairing...\";\r\n        document.dispatchEvent(new CustomEvent('PairingFlowStateChanged', {detail: this.CurrentPairingFlowState}));\r\n\r\n        // Use the helper. It takes the incoming request, and generates the secrets and the response.\r\n        var ph      = new PairingHelper();\r\n        var result  = ph.GenerateSecretsAndKeyResponse(new KeyRequest(m));\r\n        this._secrets = result.Secrets; // we now have secrets, although pairing is not fully finished yet.\r\n        this._spiMessageStamp.Secrets = this._secrets; // updating our stamp with the secrets so can encrypt messages later.\r\n        this._send(result.KeyResponse.ToMessage()); // send the key_response, i.e. interaction 3 of pairing.\r\n    }\r\n\r\n    // <summary>\r\n    // Handling the 4th interaction of the pairing process i.e. an incoming KeyCheck.\r\n    // </summary>\r\n    // <param name=\"m\"></param>\r\n    _handleKeyCheck(m)\r\n    {\r\n        var keyCheck = new KeyCheck(m);\r\n        this.CurrentPairingFlowState.ConfirmationCode = keyCheck.ConfirmationCode;\r\n        this.CurrentPairingFlowState.AwaitingCheckFromEftpos = true;\r\n        this.CurrentPairingFlowState.AwaitingCheckFromPos = true;\r\n        this.CurrentPairingFlowState.Message = \"Confirm that the following Code is showing on the Terminal\";\r\n        document.dispatchEvent(new CustomEvent('PairingFlowStateChanged', {detail: this.CurrentPairingFlowState}));\r\n    }\r\n\r\n    // <summary>\r\n    // Handling the 5th and final interaction of the pairing process, i.e. an incoming PairResponse\r\n    // </summary>\r\n    // <param name=\"m\"></param>\r\n    _handlePairResponse(m)\r\n    {\r\n        var pairResp = new PairResponse(m);\r\n\r\n        this.CurrentPairingFlowState.AwaitingCheckFromEftpos = false;\r\n        if (pairResp.Success)\r\n        {\r\n            if (this.CurrentPairingFlowState.AwaitingCheckFromPos)\r\n            {\r\n                // Still Waiting for User to say yes on POS\r\n                this._log.info(\"Got Pair Confirm from Eftpos, but still waiting for use to confirm from POS.\");\r\n                this.CurrentPairingFlowState.Message = \"Confirm that the following Code is what the EFTPOS showed\";\r\n                document.dispatchEvent(new CustomEvent('PairingFlowStateChanged', {detail: this.CurrentPairingFlowState}));\r\n            }\r\n            else\r\n            {\r\n                this._log.info(\"Got Pair Confirm from Eftpos, and already had confirm from POS. Now just waiting for first pong.\");\r\n                this._onPairingSuccess();\r\n            }\r\n            // I need to ping/login even if the pos user has not said yes yet, \r\n            // because otherwise within 5 seconds connectiong will be dropped by eftpos.\r\n            this._startPeriodicPing();\r\n        }\r\n        else\r\n        {\r\n            this._onPairingFailed();\r\n        }\r\n    }\r\n\r\n    _handleDropKeysAdvice(m)\r\n    {\r\n        this._log.info(\"Eftpos was Unpaired. I shall unpair from my end as well.\");\r\n        this._doUnpair();\r\n    }\r\n\r\n    _onPairingSuccess()\r\n    {\r\n        this.CurrentPairingFlowState.Successful = true;\r\n        this.CurrentPairingFlowState.Finished = true;\r\n        this.CurrentPairingFlowState.Message = \"Pairing Successful!\";\r\n        this.CurrentStatus = SpiStatus.PairedConnected;\r\n        document.dispatchEvent(new CustomEvent('SecretsChanged', {detail: this._secrets}));\r\n        document.dispatchEvent(new CustomEvent('PairingFlowStateChanged', {detail: this.CurrentPairingFlowState}));\r\n    }\r\n\r\n    _onPairingFailed()\r\n    {\r\n        this._secrets = null;\r\n        this._spiMessageStamp.Secrets = null;\r\n        this._conn.Disconnect();\r\n\r\n        this.CurrentStatus = SpiStatus.Unpaired;\r\n        this.CurrentPairingFlowState.Message = \"Pairing Failed\";\r\n        this.CurrentPairingFlowState.Finished = true;\r\n        this.CurrentPairingFlowState.Successful = false;\r\n        this.CurrentPairingFlowState.AwaitingCheckFromPos = false;\r\n        document.dispatchEvent(new CustomEvent('PairingFlowStateChanged', {detail: this.CurrentPairingFlowState}));\r\n    }\r\n\r\n    _doUnpair()\r\n    {\r\n        this.CurrentStatus = SpiStatus.Unpaired;\r\n        this._conn.Disconnect();\r\n        this._secrets = null;\r\n        this._spiMessageStamp.Secrets = null;\r\n        document.dispatchEvent(new CustomEvent('SecretsChanged', {detail: this._secrets}));\r\n    }\r\n\r\n    // <summary>\r\n    // Sometimes the server asks us to roll our secrets.\r\n    // </summary>\r\n    // <param name=\"m\"></param>\r\n    _handleKeyRollingRequest(m)\r\n    {\r\n        // we calculate the new ones...\r\n        var krRes = KeyRollingHelper.PerformKeyRolling(m, this._secrets);\r\n        this._secrets = krRes.NewSecrets; // and update our secrets with them\r\n        this._spiMessageStamp.Secrets = this._secrets; // and our stamp\r\n        this._send(krRes.KeyRollingConfirmation); // and we tell the server that all is well.\r\n        document.dispatchEvent(new CustomEvent('SecretsChanged', {detail: this._secrets}));\r\n    }\r\n\r\n    // <summary>\r\n    // The PinPad server will send us this message when a customer signature is reqired.\r\n    // We need to ask the customer to sign the incoming receipt.\r\n    // And then tell the pinpad whether the signature is ok or not.\r\n    // </summary>\r\n    // <param name=\"m\"></param>\r\n    _handleSignatureRequired(m)\r\n    {\r\n        var incomingPosRefId = m.Data.pos_ref_id;\r\n        if (this.CurrentFlow != SpiFlow.Transaction || this.CurrentTxFlowState.Finished || !this.CurrentTxFlowState.PosRefId == incomingPosRefId)\r\n        {\r\n            this._log.info(`Received Signature Required but I was not waiting for one. Incoming Pos Ref ID: ${incomingPosRefId}`);\r\n            return;\r\n        }\r\n        this.CurrentTxFlowState.SignatureRequired(new SignatureRequired(m), \"Ask Customer to Sign the Receipt\");\r\n    \r\n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\r\n    }\r\n\r\n    // <summary>\r\n    // The PinPad server will send us this message when an auth code is required.\r\n    // </summary>\r\n    // <param name=\"m\"></param>\r\n    _handleAuthCodeRequired(m)\r\n    {\r\n        var incomingPosRefId = m.Data.pos_ref_id;\r\n        if (this.CurrentFlow != SpiFlow.Transaction || this.CurrentTxFlowState.Finished || !this.CurrentTxFlowState.PosRefId == incomingPosRefId)\r\n        {\r\n            _log.info(`Received Auth Code Required but I was not waiting for one. Incoming Pos Ref ID: ${incomingPosRefId}`);\r\n            return;\r\n        }\r\n        var phoneForAuthRequired = new PhoneForAuthRequired(m);\r\n        var msg = `Auth Code Required. Call ${phoneForAuthRequired.GetPhoneNumber()} and quote merchant id ${phoneForAuthRequired.GetMerchantId()}`;\r\n        this.CurrentTxFlowState.PhoneForAuthRequired(phoneForAuthRequired, msg);\r\n    \r\n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\r\n    }\r\n\r\n    // <summary>\r\n    // The PinPad server will reply to our PurchaseRequest with a PurchaseResponse.\r\n    // </summary>\r\n    // <param name=\"m\"></param>\r\n    _handlePurchaseResponse(m)\r\n    {\r\n        var incomingPosRefId = m.Data.pos_ref_id;\r\n        if (this.CurrentFlow != SpiFlow.Transaction || this.CurrentTxFlowState.Finished || !this.CurrentTxFlowState.PosRefId == incomingPosRefId)\r\n        {\r\n            this._log.info(`Received Purchase response but I was not waiting for one. Incoming Pos Ref ID: ${incomingPosRefId}\"`);\r\n            return;\r\n        }\r\n        // TH-1A, TH-2A\r\n        \r\n        this.CurrentTxFlowState.Completed(m.GetSuccessState(), m, \"Purchase Transaction Ended.\");\r\n        // TH-6A, TH-6E\r\n        \r\n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\r\n    }\r\n\r\n    // <summary>\r\n    // The PinPad server will reply to our CashoutOnlyRequest with a CashoutOnlyResponse.\r\n    // </summary>\r\n    // <param name=\"m\"></param>\r\n    _handleCashoutOnlyResponse(m)\r\n    {\r\n        var incomingPosRefId = m.Data.pos_ref_id;\r\n        if (this.CurrentFlow != SpiFlow.Transaction || this.CurrentTxFlowState.Finished || !this.CurrentTxFlowState.PosRefId == incomingPosRefId)\r\n        {\r\n            this._log.info(`Received Cashout Response but I was not waiting for one. Incoming Pos Ref ID: ${incomingPosRefId}`);\r\n            return;\r\n        }\r\n        // TH-1A, TH-2A\r\n        \r\n        this.CurrentTxFlowState.Completed(m.GetSuccessState(), m, \"Cashout Transaction Ended.\");\r\n        // TH-6A, TH-6E\r\n        \r\n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\r\n    }\r\n\r\n    // <summary>\r\n    // The PinPad server will reply to our MotoPurchaseRequest with a MotoPurchaseResponse.\r\n    // </summary>\r\n    // <param name=\"m\"></param>\r\n    _handleMotoPurchaseResponse(m)\r\n    {\r\n        var incomingPosRefId = m.Data.pos_ref_id;\r\n        if (this.CurrentFlow != SpiFlow.Transaction || this.CurrentTxFlowState.Finished || !this.CurrentTxFlowState.PosRefId == incomingPosRefId)\r\n        {\r\n            this._log.info(`Received Moto Response but I was not waiting for one. Incoming Pos Ref ID: ${incomingPosRefId}`);\r\n            return;\r\n        }\r\n        // TH-1A, TH-2A\r\n        \r\n        this.CurrentTxFlowState.Completed(m.GetSuccessState(), m, \"Moto Transaction Ended.\");\r\n        // TH-6A, TH-6E\r\n        \r\n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\r\n    }   \r\n\r\n    // <summary>\r\n    // The PinPad server will reply to our RefundRequest with a RefundResponse.\r\n    // </summary>\r\n    // <param name=\"m\"></param>\r\n    _handleRefundResponse(m)\r\n    {\r\n        var incomingPosRefId = m.Data.pos_ref_id;\r\n        if (this.CurrentFlow != SpiFlow.Transaction || this.CurrentTxFlowState.Finished | !this.CurrentTxFlowState.PosRefId == incomingPosRefId)\r\n        {\r\n            this._log.info(`Received Refund response but I was not waiting for this one. Incoming Pos Ref ID: ${incomingPosRefId}`);\r\n            return;\r\n        }\r\n        // TH-1A, TH-2A\r\n        \r\n        this.CurrentTxFlowState.Completed(m.GetSuccessState(), m, \"Refund Transaction Ended.\");\r\n        // TH-6A, TH-6E\r\n        \r\n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\r\n    }\r\n\r\n    // <summary>\r\n    // TODO: Handle the Settlement Response received from the PinPad\r\n    // </summary>\r\n    // <param name=\"m\"></param>\r\n    HandleSettleResponse(m)\r\n    {\r\n        if (this.CurrentFlow != SpiFlow.Transaction || this.CurrentTxFlowState.Finished)\r\n        {\r\n            this._log.info(`Received Settle response but I was not waiting for one. ${m.DecryptedJson}`);\r\n            return;\r\n        }\r\n        // TH-1A, TH-2A\r\n        \r\n        this.CurrentTxFlowState.Completed(m.GetSuccessState(), m, \"Settle Transaction Ended.\");\r\n        // TH-6A, TH-6E\r\n    \r\n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\r\n    }\r\n\r\n    // <summary>\r\n    // Handle the Settlement Enquiry Response received from the PinPad\r\n    // </summary>\r\n    // <param name=\"m\"></param>\r\n    _handleSettlementEnquiryResponse(m)\r\n    {\r\n        if (this.CurrentFlow != SpiFlow.Transaction || this.CurrentTxFlowState.Finished)\r\n        {\r\n            this._log.info(`Received Settlement Enquiry response but I was not waiting for one. ${m.DecryptedJson}`);\r\n            return;\r\n        }\r\n        // TH-1A, TH-2A\r\n        \r\n        this.CurrentTxFlowState.Completed(m.GetSuccessState(), m, \"Settlement Enquiry Ended.\");\r\n        // TH-6A, TH-6E\r\n        \r\n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\r\n    }\r\n\r\n    // <summary>\r\n    // Sometimes we receive event type \"error\" from the server, such as when calling cancel_transaction and there is no transaction in progress.\r\n    // </summary>\r\n    // <param name=\"m\"></param>\r\n    _handleErrorEvent(m)\r\n    {\r\n        if (this.CurrentFlow == SpiFlow.Transaction\r\n            && !this.CurrentTxFlowState.Finished\r\n            && this.CurrentTxFlowState.AttemptingToCancel\r\n            && m.GetError() == \"NO_TRANSACTION\")\r\n        {\r\n            // TH-2E\r\n            this._log.info(`Was trying to cancel a transaction but there is nothing to cancel. Calling GLT to see what's up`);\r\n            this._callGetLastTransaction();\r\n        }\r\n        else\r\n        {\r\n            this._log.info(`Received Error Event But Don't know what to do with it. ${m.DecryptedJson}`);\r\n        }\r\n    }\r\n\r\n    // <summary>\r\n    // When the PinPad returns to us what the Last Transaction was.\r\n    // </summary>\r\n    // <param name=\"m\"></param>\r\n    _handleGetLastTransactionResponse(m)\r\n    {\r\n        var txState = this.CurrentTxFlowState;\r\n        if (this.CurrentFlow != SpiFlow.Transaction || txState.Finished)\r\n        {\r\n            // We were not in the middle of a transaction, who cares?\r\n            return;\r\n        }\r\n\r\n        // TH-4 We were in the middle of a transaction.\r\n        // Let's attempt recovery. This is step 4 of Transaction Processing Handling\r\n        this._log.info(`Got Last Transaction..`);\r\n        txState.GotGltResponse();\r\n        var gtlResponse = new GetLastTransactionResponse(m);\r\n        txState.GLTResponsePosRefId = gtlResponse.GetPosRefId();\r\n        if (!gtlResponse.WasRetrievedSuccessfully())\r\n        {\r\n            if (gtlResponse.IsStillInProgress(txState.PosRefId))\r\n            {\r\n                // TH-4E - Operation In Progress\r\n\r\n                if (gtlResponse.IsWaitingForSignatureResponse() && !txState.AwaitingSignatureCheck)\r\n                {\r\n                    this._log.info(\"Eftpos is waiting for us to send it signature accept/decline, but we were not aware of this. \" +\r\n                              \"The user can only really decline at this stage as there is no receipt to print for signing.\");\r\n                    this.CurrentTxFlowState.SignatureRequired(new SignatureRequired(txState.PosRefId, m.Id, \"MISSING RECEIPT\\n DECLINE AND TRY AGAIN.\"), \"Recovered in Signature Required but we don't have receipt. You may Decline then Retry.\");\r\n                }\r\n                else if (gtlResponse.IsWaitingForAuthCode() && !txState.AwaitingPhoneForAuth)\r\n                {\r\n                    this._log.info(\"Eftpos is waiting for us to send it auth code, but we were not aware of this. \" +\r\n                              \"We can only cancel the transaction at this stage as we don't have enough information to recover from this.\");\r\n                    this.CurrentTxFlowState.PhoneForAuthRequired(new PhoneForAuthRequired(txState.PosRefId, m.Id, \"UNKNOWN\", \"UNKNOWN\"), \"Recovered mid Phone-For-Auth but don't have details. You may Cancel then Retry.\");\r\n                }\r\n                else\r\n                {\r\n                    this._log.info(\"Operation still in progress... stay waiting.\");\r\n                    // No need to publish txFlowStateChanged. Can return;\r\n                    return;\r\n                }\r\n            }\r\n            else if (gtlResponse.WasTimeOutOfSyncError())\r\n            {\r\n                // Let's not give up based on a TOOS error.\r\n                // Let's log it, and ignore it. \r\n                this._log.info(`Time-Out-Of-Sync error in Get Last Transaction response. Let's ignore it and we'll try again.`);\r\n                // No need to publish txFlowStateChanged. Can return;\r\n                return;\r\n            }\r\n            else\r\n            {\r\n                // TH-4X - Unexpected Response when recovering\r\n                this._log.info(`Unexpected Response in Get Last Transaction during - Received posRefId:${gtlResponse.GetPosRefId()} Error:${m.GetError()}`);\r\n                txState.UnknownCompleted(\"Unexpected Error when recovering Transaction Status. Check EFTPOS. \");\r\n            }\r\n        }\r\n        else\r\n        {\r\n            if (txState.Type == TransactionType.GetLastTransaction)\r\n            {\r\n                // THIS WAS A PLAIN GET LAST TRANSACTION REQUEST, NOT FOR RECOVERY PURPOSES.\r\n                this._log.info(\"Retrieved Last Transaction as asked directly by the user.\");\r\n                gtlResponse.CopyMerchantReceiptToCustomerReceipt();\r\n                txState.Completed(m.GetSuccessState(), m, \"Last Transaction Retrieved\");\r\n            }\r\n            else\r\n            {\r\n                // TH-4A - Let's try to match the received last transaction against the current transaction\r\n                var successState = this.GltMatch(gtlResponse, txState.PosRefId);\r\n                if (successState == SuccessState.Unknown)\r\n                {\r\n                    // TH-4N: Didn't Match our transaction. Consider Unknown State.\r\n                    this._log.info(\"Did not match transaction.\");\r\n                    txState.UnknownCompleted(\"Failed to recover Transaction Status. Check EFTPOS. \");\r\n                }\r\n                else\r\n                {\r\n                    // TH-4Y: We Matched, transaction finished, let's update ourselves\r\n                    gtlResponse.CopyMerchantReceiptToCustomerReceipt();\r\n                    txState.Completed(successState, m, \"Transaction Ended.\");\r\n                }\r\n            } \r\n        }\r\n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: txState}));\r\n    }\r\n\r\n    //When the transaction cancel response is returned.\r\n    _handleCancelTransactionResponse(m)\r\n    {\r\n        var incomingPosRefId = m.Data.pos_ref_id;\r\n        if (this.CurrentFlow != SpiFlow.Transaction || this.CurrentTxFlowState.Finished || !this.CurrentTxFlowState.PosRefId == incomingPosRefId)\r\n        {\r\n            this._log.info(`Received Cancel Required but I was not waiting for one. Incoming Pos Ref ID: ${incomingPosRefId}`);\r\n            return;\r\n        }\r\n\r\n        var txState = this.CurrentTxFlowState;\r\n        var cancelResponse = new CancelTransactionResponse(m);\r\n\r\n        if (cancelResponse.Success) return;\r\n\r\n        this._log.warn(\"Failed to cancel transaction: reason=\" + cancelResponse.GetErrorReason() + \", detail=\" + cancelResponse.GetErrorDetail());\r\n\r\n        txState.CancelFailed(\"Failed to cancel transaction: \" + cancelResponse.GetErrorDetail() + \". Check EFTPOS.\");\r\n    \r\n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: txState}));\r\n    }\r\n\r\n    _handleSetPosInfoResponse(m)\r\n    {\r\n        var response = new SetPosInfoResponse(m);\r\n        if (response.isSuccess())\r\n        {\r\n            this._hasSetInfo = true;\r\n            this._log.info(\"Setting POS info successful\");\r\n        }\r\n        else\r\n        {\r\n            this._log.warn(\"Setting POS info failed: reason=\" + response.getErrorReason() + \", detail=\" + response.getErrorDetail());\r\n        }\r\n    }\r\n\r\n    _startTransactionMonitoringThread()\r\n    {\r\n        var needsPublishing = false;\r\n    \r\n        var txState = this.CurrentTxFlowState;\r\n        if (this.CurrentFlow == SpiFlow.Transaction && !txState.Finished)\r\n        {\r\n            var state = txState;\r\n            if (state.AttemptingToCancel && Date.now() > state.CancelAttemptTime + this._maxWaitForCancelTx)\r\n            {\r\n                // TH-2T - too long since cancel attempt - Consider unknown\r\n                this._log.info(`Been too long waiting for transaction to cancel.`);\r\n                txState.UnknownCompleted(`Waited long enough for Cancel Transaction result. Check EFTPOS. `);\r\n                needsPublishing = true;\r\n            }\r\n            else if (state.RequestSent && Date.now() > state.LastStateRequestTime + this._checkOnTxFrequency)\r\n            {\r\n                // TH-1T, TH-4T - It's been a while since we received an update, let's call a GLT\r\n                this._log.info(`Checking on our transaction. Last we asked was at ${state.LastStateRequestTime}...`);\r\n                txState.CallingGlt();\r\n                this._callGetLastTransaction();\r\n            }\r\n        }\r\n        \r\n        if (needsPublishing) {\r\n            document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\r\n        }\r\n\r\n        setTimeout(() => this._startTransactionMonitoringThread(), this._txMonitorCheckFrequency);\r\n    }\r\n\r\n    PrintingResponse(m) {\r\n        throw new Exception('Method not implemented. Please overwrite this method in your POS');\r\n    }\r\n\r\n    TerminalStatusResponse(m) {\r\n        throw new Exception('Method not implemented. Please overwrite this method in your POS');\r\n    }\r\n\r\n    BatteryLevelChanged(m) {\r\n        throw new Exception('Method not implemented. Please overwrite this method in your POS');\r\n    }\r\n\r\n    _handlePrintingResponse(m)\r\n    {\r\n        this.PrintingResponse(m);\r\n    }\r\n\r\n    _handleTerminalStatusResponse(m)\r\n    {\r\n        this.TerminalStatusResponse(m);\r\n    }\r\n\r\n    _handleBatteryLevelChanged(m)\r\n    {\r\n        this.BatteryLevelChanged(m);\r\n    }\r\n\r\n    // endregion\r\n        \r\n    // region Internals for Connection Management\r\n\r\n    _resetConn()\r\n    {\r\n        // Setup the Connection\r\n        this._conn = new Connection();\r\n\r\n        if (this._isUsingHttps() || this._forceSecureWebSockets)\r\n        {\r\n            this._log.info(`Secure connection detected.`);    \r\n            var protocol = this._forceSecureWebSockets ? \"ws\" : \"wss\";\r\n            this._eftposAddress.replace(\"ws://\", \"wss://\");\r\n        }\r\n        this._conn.Address = this._eftposAddress;\r\n\r\n        // Register our Event Handlers\r\n        document.addEventListener('ConnectionStatusChanged', (e) => this._onSpiConnectionStatusChanged(e.detail));\r\n        document.addEventListener('MessageReceived', (e) => this._onSpiMessageReceived(e.detail));\r\n        document.addEventListener('ErrorReceived', (e) => this._onWsErrorReceived(e.detail));\r\n    }\r\n\r\n    // <summary>\r\n    // This method will be called when the connection status changes.\r\n    // You are encouraged to display a PinPad Connection Indicator on the POS screen.\r\n    // </summary>\r\n    // <param name=\"state\"></param>\r\n    _onSpiConnectionStatusChanged(state)\r\n    {\r\n        switch (state.ConnectionState)\r\n        {\r\n            case ConnectionState.Connecting:\r\n                this._log.info(`I'm Connecting to the Eftpos at ${this._eftposAddress}...`);\r\n                break;\r\n\r\n            case ConnectionState.Connected:\r\n                this._retriesSinceLastDeviceAddressResolution = 0;\r\n\r\n                if (this.CurrentFlow == SpiFlow.Pairing && this.CurrentStatus == SpiStatus.Unpaired)\r\n                {\r\n                    this.CurrentPairingFlowState.Message = \"Requesting to Pair...\";\r\n                    document.dispatchEvent(new CustomEvent('PairingFlowStateChanged', {detail: this.CurrentPairingFlowState}));\r\n                    var pr = PairingHelper.NewPairRequest();\r\n                    this._send(pr.ToMessage());\r\n                }\r\n                else\r\n                {\r\n                    this._log.info(`I'm Connected to ${this._eftposAddress}...`);\r\n                    this._spiMessageStamp.Secrets = this._secrets;\r\n                    this._startPeriodicPing();\r\n                }\r\n                break;\r\n\r\n            case ConnectionState.Disconnected:\r\n                // Let's reset some lifecycle related to connection state, ready for next connection\r\n                this._log.info(`I'm disconnected from ${this._eftposAddress}...`);\r\n                this._mostRecentPingSent = null;\r\n                this._mostRecentPongReceived = null;\r\n                this._missedPongsCount = 0;\r\n                this._stopPeriodicPing();\r\n\r\n                if (this.CurrentStatus != SpiStatus.Unpaired)\r\n                {\r\n                    this.CurrentStatus = SpiStatus.PairedConnecting;\r\n\r\n                    if (this.CurrentFlow == SpiFlow.Transaction && !this.CurrentTxFlowState.Finished)\r\n                    {\r\n                        // we're in the middle of a transaction, just so you know!\r\n                        // TH-1D\r\n                        this._log.info(`Lost connection in the middle of a transaction...`);\r\n                    }\r\n                    \r\n                    if (this._conn == null) return; // This means the instance has been disposed. Aborting.\r\n                    \r\n                    if (this._autoAddressResolutionEnabled)\r\n                    {\r\n                        if (this._retriesSinceLastDeviceAddressResolution >= this._retriesBeforeResolvingDeviceAddress)\r\n                        {\r\n                            this._autoResolveEftposAddress();\r\n                            this._retriesSinceLastDeviceAddressResolution = 0;\r\n                        }\r\n                        else\r\n                        {\r\n                            this._retriesSinceLastDeviceAddressResolution += 1;\r\n                        }\r\n                    }\r\n\r\n                    this._log.info(`Will try to reconnect in ${this._sleepBeforeReconnectMs}ms...`);\r\n                    setTimeout(() => {\r\n                        if (this.CurrentStatus != SpiStatus.Unpaired)\r\n                        {\r\n                            // This is non-blocking\r\n                            if(this._conn) \r\n                            {\r\n                                this._conn.Connect();\r\n                            }\r\n                        }\r\n                    }, this._sleepBeforeReconnectMs);\r\n                }\r\n                else if (this.CurrentFlow == SpiFlow.Pairing)\r\n                {\r\n                    this._log.info(\"Lost Connection during pairing.\");\r\n                    this.CurrentPairingFlowState.Message = \"Could not Connect to Pair. Check Network and Try Again...\";\r\n                    this._onPairingFailed();\r\n                    document.dispatchEvent(new CustomEvent('PairingFlowStateChanged', {detail: this.CurrentPairingFlowState}));\r\n                }\r\n                break;\r\n            default:\r\n                throw new Exception('Unknown state: ' + state);\r\n        }\r\n    }\r\n\r\n    // <summary>\r\n    // This is an important piece of the puzzle. It's a background thread that periodically\r\n    // sends Pings to the server. If it doesn't receive Pongs, it considers the connection as broken\r\n    // so it disconnects. \r\n    // </summary>\r\n    _startPeriodicPing() {\r\n        this._stopPeriodicPing();\r\n        this._periodicPingThread = setInterval(() => this._periodicPing(),this._pingFrequency);\r\n        this._periodicPing();\r\n    }\r\n\r\n    _periodicPing() {\r\n        // while i'm still connected AND paired...\r\n        if(this._conn.Connected && this._secrets != null) {\r\n            this._doPing();\r\n\r\n            setTimeout(() => {\r\n                if (this._mostRecentPingSent != null &&\r\n                    (this._mostRecentPongReceived == null || this._mostRecentPongReceived.Id != this._mostRecentPingSent.Id))\r\n                {\r\n                    this._missedPongsCount += 1;\r\n\r\n                    this._log.info(`Eftpos didn't reply to my Ping. Missed Count: ${this._missedPongsCount}/${this._missedPongsToDisconnect}.`);\r\n\r\n                    if (this._missedPongsCount < this._missedPongsToDisconnect)\r\n                    {\r\n                        this._log.info(\"Trying another ping...\");\r\n                        this._startPeriodicPing();\r\n                        return;\r\n                    }\r\n\r\n                    // This means that we have not received a pong for our most recent ping.\r\n                    // We consider this connection as broken.\r\n                    // Let's Disconnect.\r\n                    this._log.info(\"Disconnecting...\");\r\n                    this._conn.Disconnect();\r\n                    this._stopPeriodicPing();\r\n                }\r\n\r\n                this._missedPongsCount = 0;\r\n\r\n            },this._pongTimeout);\r\n\r\n        } else {\r\n            this._stopPeriodicPing();\r\n            this._log.info(\"Cancelling periodic ping as were disconnected or not paired\");\r\n        }\r\n    }\r\n\r\n    // <summary>\r\n    // We call this ourselves as soon as we're ready to transact with the PinPad after a connection is established.\r\n    // This function is effectively called after we received the first Login Response from the PinPad.\r\n    // </summary>\r\n    _onReadyToTransact()\r\n    {\r\n        this._log.info(\"On Ready To Transact!\");\r\n\r\n        // So, we have just made a connection, pinged and logged in successfully.\r\n        this.CurrentStatus = SpiStatus.PairedConnected;\r\n\r\n        if (this.CurrentFlow == SpiFlow.Transaction && !this.CurrentTxFlowState.Finished)\r\n        {\r\n            if (this.CurrentTxFlowState.RequestSent)\r\n            {\r\n                // TH-3A - We've just reconnected and were in the middle of Tx.\r\n                // Let's get the last transaction to check what we might have missed out on.\r\n                this.CurrentTxFlowState.CallingGlt();\r\n                this._callGetLastTransaction();\r\n            }\r\n            else\r\n            {\r\n                // TH-3AR - We had not even sent the request yet. Let's do that now\r\n                this._send(this.CurrentTxFlowState.Request);\r\n                this.CurrentTxFlowState.Sent(`Sending Request Now...`);\r\n                document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\r\n            }\r\n        }\r\n        else\r\n        {\r\n            if (!this._hasSetInfo) { \r\n                this._callSetPosInfo(); \r\n            }\r\n\r\n            // let's also tell the eftpos our latest table configuration.\r\n            if(this._spiPat) {\r\n                this._spiPat.PushPayAtTableConfig();\r\n            }\r\n        }\r\n    }\r\n\r\n    _callSetPosInfo()\r\n    {\r\n        var setPosInfoRequest = new SetPosInfoRequest(this._posVersion, this._posVendorId, \"js\", SPI_VERSION, DeviceInfo.GetAppDeviceInfo());\r\n        this._send(setPosInfoRequest.toMessage());\r\n    }\r\n\r\n    // <summary>\r\n    // When we disconnect, we should also stop the periodic ping.\r\n    // </summary>\r\n    _stopPeriodicPing() {\r\n        if(this._periodicPingThread) {\r\n            // If we were already set up, clean up before restarting.\r\n            clearInterval(this._periodicPingThread);\r\n            this._periodicPingThread = null;\r\n        }\r\n    }\r\n\r\n    // Send a Ping to the Server\r\n    _doPing()\r\n    {\r\n        var ping = PingHelper.GeneratePingRequest();\r\n        this._mostRecentPingSent = ping;\r\n        this._send(ping);\r\n        this._mostRecentPingSentTime = Date.now();\r\n    }\r\n\r\n    // <summary>\r\n    // Received a Pong from the server\r\n    // </summary>\r\n    // <param name=\"m\"></param>\r\n    _handleIncomingPong(m)\r\n    {\r\n        // We need to maintain this time delta otherwise the server will not accept our messages.\r\n        this._spiMessageStamp.ServerTimeDelta = m.GetServerTimeDelta();\r\n\r\n        if (this._mostRecentPongReceived == null)\r\n        {\r\n            // First pong received after a connection, and after the pairing process is fully finalised.\r\n            if (this.CurrentStatus != SpiStatus.Unpaired)\r\n            {\r\n                this._log.info(\"First pong of connection and in paired state.\");\r\n                this._onReadyToTransact();\r\n            }\r\n            else\r\n            {\r\n                this._log.info(\"First pong of connection but pairing process not finalised yet.\");\r\n            }\r\n        }\r\n\r\n        this._mostRecentPongReceived = m;\r\n        this._log.debug(`PongLatency:${Date.now() - this._mostRecentPingSentTime}`);\r\n    }\r\n\r\n    // <summary>\r\n    // The server will also send us pings. We need to reply with a pong so it doesn't disconnect us.\r\n    // </summary>\r\n    // <param name=\"m\"></param>\r\n    _handleIncomingPing(m)\r\n    {\r\n        var pong = PongHelper.GeneratePongRessponse(m);\r\n        this._send(pong);\r\n    }\r\n\r\n    // <summary>\r\n    // Ask the PinPad to tell us what the Most Recent Transaction was\r\n    // </summary>\r\n    _callGetLastTransaction()\r\n    {\r\n        var gltRequest = new GetLastTransactionRequest();\r\n        this._send(gltRequest.ToMessage());\r\n    }\r\n\r\n    // <summary>\r\n    // This method will be called whenever we receive a message from the Connection\r\n    // </summary>\r\n    // <param name=\"messageJson\"></param>\r\n    _onSpiMessageReceived(messageJson)\r\n    {\r\n        // First we parse the incoming message\r\n        var m = Message.FromJson(messageJson.Message, this._secrets);\r\n        this._log.info(\"Received:\" + m.DecryptedJson);\r\n\r\n        if (SpiPreauth.IsPreauthEvent(m.EventName))\r\n        {\r\n            this._spiPreauth._handlePreauthMessage(m);\r\n            return;\r\n        }\r\n\r\n        // And then we switch on the event type.\r\n        switch (m.EventName)\r\n        {\r\n            case Events.KeyRequest:\r\n                this._handleKeyRequest(m);\r\n                break;\r\n            case Events.KeyCheck:\r\n                this._handleKeyCheck(m);\r\n                break;\r\n            case Events.PairResponse:\r\n                this._handlePairResponse(m);\r\n                break;\r\n            case Events.DropKeysAdvice:\r\n                this._handleDropKeysAdvice(m);\r\n                break;\r\n            case Events.PurchaseResponse:\r\n                this._handlePurchaseResponse(m);\r\n                break;\r\n            case Events.RefundResponse:\r\n                this._handleRefundResponse(m);\r\n                break;\r\n            case Events.CashoutOnlyResponse:\r\n                this._handleCashoutOnlyResponse(m);\r\n                break;\r\n            case Events.MotoPurchaseResponse:\r\n                this._handleMotoPurchaseResponse(m);\r\n                break;\r\n            case Events.SignatureRequired:\r\n                this._handleSignatureRequired(m);\r\n                break;\r\n            case Events.AuthCodeRequired:\r\n                this._handleAuthCodeRequired(m);\r\n                break;\r\n            case Events.GetLastTransactionResponse:\r\n                this._handleGetLastTransactionResponse(m);\r\n                break;\r\n            case Events.SettleResponse:\r\n                this.HandleSettleResponse(m);\r\n                break;\r\n            case Events.SettlementEnquiryResponse:\r\n                this._handleSettlementEnquiryResponse(m);\r\n                break;\r\n            case Events.Ping:\r\n                this._handleIncomingPing(m);\r\n                break;\r\n            case Events.Pong:\r\n                this._handleIncomingPong(m);\r\n                break;\r\n            case Events.KeyRollRequest:\r\n                this._handleKeyRollingRequest(m);\r\n                break;\r\n            case Events.CancelTransactionResponse:\r\n                this._handleCancelTransactionResponse(m);\r\n                break;\r\n            case Events.SetPosInfoResponse:\r\n                this._handleSetPosInfoResponse(m);\r\n                break;\r\n            case Events.PayAtTableGetTableConfig:\r\n                if (this._spiPat == null)\r\n                {\r\n                    this._send(PayAtTableConfig.FeatureDisableMessage(RequestIdHelper.Id(\"patconf\")));\r\n                    break;\r\n                }\r\n                this._spiPat._handleGetTableConfig(m);\r\n                break;\r\n            case Events.PayAtTableGetBillDetails:\r\n                this._spiPat._handleGetBillDetailsRequest(m);\r\n                break;\r\n            case Events.PayAtTableBillPayment:\r\n                this._spiPat._handleBillPaymentAdvice(m);\r\n                break;\r\n            case Events.PrintingResponse:\r\n                this._handlePrintingResponse(m);\r\n                break;\r\n            case Events.TerminalStatusResponse:\r\n                this._handleTerminalStatusResponse(m);\r\n                break;\r\n            case Events.BatteryLevelChanged:\r\n                this._handleBatteryLevelChanged(m);\r\n                break;\r\n            case Events.Error:\r\n                this._handleErrorEvent(m);\r\n                break;\r\n            case Events.InvalidHmacSignature:\r\n                this._log.info(\"I could not verify message from Eftpos. You might have to Un-pair Eftpos and then reconnect.\");\r\n                break;\r\n            default:\r\n                this._log.info(`I don't Understand Event: ${m.EventName}, ${m.Data}. Perhaps I have not implemented it yet.`);\r\n                break;\r\n        }\r\n    }\r\n\r\n    _onWsErrorReceived(error)\r\n    {\r\n        this._log.warn(\"Received WS Error: \" + error.Message);\r\n    }\r\n\r\n    _send(message)\r\n    {\r\n        var json = message.ToJson(this._spiMessageStamp);\r\n        if (this._conn.Connected)\r\n        {\r\n            this._log.info(\"Sending: \" + message.DecryptedJson);\r\n            this._conn.Send(json);\r\n            return true;\r\n        }\r\n        else\r\n        {\r\n            this._log.info(\"Asked to send, but not connected: \" + message.DecryptedJson);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    HasSerialNumberChanged(updatedSerialNumber)\r\n    {\r\n        return this._serialNumber != updatedSerialNumber;\r\n    }\r\n\r\n    HasEftposAddressChanged(updatedEftposAddress)\r\n    {\r\n        return this._eftposAddress != updatedEftposAddress;\r\n    }\r\n\r\n    _autoResolveEftposAddress()\r\n    {\r\n        if (!this._autoAddressResolutionEnabled)\r\n            return;\r\n    \r\n        if (!this._serialNumber)\r\n            return;\r\n\r\n        var service = new DeviceAddressService();\r\n        var isSecureConnection = false;\r\n         \r\n        // determine whether to use wss or not\r\n        if (this._isUsingHttps() || this._forceSecureWebSockets)\r\n        {\r\n            this._log.info(`Secure connection detected.`);    \r\n            isSecureConnection = true;\r\n        }\r\n\r\n        this._log.info(`Resolving address for device ${this._serialNumber}.`);\r\n\r\n        // return service.RetrieveService(this._serialNumber, this._deviceApiKey, this._acquirerCode, this._useSecureWebSockets, this._inTestMode).then((response) => \r\n        return service.RetrieveService(this._serialNumber, this._deviceApiKey, this._acquirerCode, isSecureConnection, this._inTestMode).then((response) => \r\n        {\r\n            var deviceAddressStatus = Object.assign(new DeviceAddressStatus(isSecureConnection), response);\r\n\r\n            if(!deviceAddressStatus || !deviceAddressStatus.Address)\r\n            {\r\n                this._log.info(`Could not resolve device address.`);\r\n                return;\r\n            }\r\n                \r\n            this._log.info(`Address for device resolved to ${deviceAddressStatus.Address}`);\r\n            if (!this.HasEftposAddressChanged(deviceAddressStatus.Address))\r\n                return;\r\n\r\n            // update device and connection address\r\n            var protocol = isSecureConnection ? \"wss\" : \"ws\";\r\n            this._eftposAddress = protocol + \"://\" + deviceAddressStatus.Address;\r\n            this._conn.Address = this._eftposAddress;\r\n\r\n            this.CurrentDeviceStatus = deviceAddressStatus;\r\n\r\n            document.dispatchEvent(new CustomEvent('DeviceAddressChanged', {detail: this.CurrentDeviceStatus}));\r\n            \r\n            return this.CurrentDeviceStatus;\r\n        });\r\n    }\r\n\r\n    _isUsingHttps() \r\n    {\r\n        return 'https:' == document.location.protocol ? true : false;\r\n    }\r\n}\r\n\r\nexport {Spi};","export default class Logger {\r\n    constructor(element, lineSeperator = '\\n') {\r\n        this.buffer     = [];\r\n        this.element    = element;\r\n        this.lineSeperator = lineSeperator;\r\n    }\r\n\r\n    Info(...args) {\r\n        this.buffer.push(args.join(' '));\r\n        this._render();\r\n    }\r\n\r\n    Debug(...args) {\r\n        this.buffer.push(args.join(' '));\r\n        this._render();\r\n    }\r\n\r\n    Warn(...args) {\r\n        this.buffer.push(args.join(' '));\r\n        this._render();\r\n    }\r\n\r\n    Error(...args) {\r\n        this.buffer.push(args.join(' '));\r\n        this._render();\r\n    }\r\n\r\n    Console(...args) {\r\n        console.log(args.join(' '));\r\n    }\r\n\r\n    _render() {\r\n        this.element.innerText = this.buffer.join(this.lineSeperator);\r\n        this.element.scrollTop = this.element.scrollHeight;\r\n    }\r\n\r\n    Clear() {\r\n        this.buffer = [];\r\n        this._render();\r\n    }\r\n}\r\n\r\nexport {Logger};","import {Spi} from \"./src/Spi\";\r\nimport {Logger} from './src/Logger';\r\nimport {Printer} from './src/Printing';\r\n\r\n// Re-exported modules required for POS vendors\r\nexport {Spi} from './src/Spi';\r\nexport {Logger} from './src/Logger';\r\nexport {Secrets} from './src/Secrets';\r\nexport {SuccessState} from './src/Messages';\r\nexport {TransactionOptions, TransactionType, SpiFlow, SpiStatus} from './src/SpiModels';\r\nexport {PrintingResponse} from './src/Printing';\r\nexport {RefundResponse, PurchaseResponse, GetLastTransactionResponse, MotoPurchaseResponse} from './src/Purchase';\r\nexport {TerminalStatusResponse, TerminalBattery} from './src/TerminalStatus';\r\nexport {CashoutOnlyResponse} from './src/Cashout';\r\nexport {Settlement} from './src/Settlement';\r\nexport {RequestIdHelper} from './src/RequestIdHelper';\r\n\r\nwindow.Spi = Spi;\r\nwindow.Logger = Logger;\r\nwindow.Printer = Printer;"],"sourceRoot":""}