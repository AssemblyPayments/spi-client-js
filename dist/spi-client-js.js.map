{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack:///./node_modules/@babel/runtime/helpers/createClass.js","webpack:///./node_modules/aes-js/index.js","webpack:///./node_modules/bn.js/lib/bn.js","webpack:///./node_modules/@babel/runtime/regenerator/index.js","webpack:///./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack:///./node_modules/jssha/src/sha.js","webpack:///./node_modules/@babel/runtime/node_modules/regenerator-runtime/runtime.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/Crypto.js","webpack:///./src/Messages.js","webpack:///./src/SpiModels.js","webpack:///./src/RequestIdHelper.js","webpack:///./src/Pairing.js","webpack:///./src/Secrets.js","webpack:///./src/DiffieHellman.js","webpack:///./src/PairingHelper.js","webpack:///./src/Connection.js","webpack:///./src/Purchase.js","webpack:///./src/PayAtTable.js","webpack:///./src/SpiPayAtTable.js","webpack:///./src/Preauth.js","webpack:///./src/SpiPreauth.js","webpack:///./src/Cashout.js","webpack:///./src/Settlement.js","webpack:///./src/PosInfo.js","webpack:///./src/PurchaseHelper.js","webpack:///./src/KeyRollingHelper.js","webpack:///./src/PingHelper.js","webpack:///./src/Service/DeviceService.js","webpack:///./src/Printing.js","webpack:///./src/TerminalStatus.js","webpack:///./src/Spi.js","webpack:///./src/Logger.js","webpack:///./index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","instance","Constructor","TypeError","_defineProperties","target","props","length","descriptor","configurable","writable","protoProps","staticProps","root","checkInt","parseInt","checkInts","arrayish","coerceArray","arg","copy","buffer","slice","Array","isArray","Error","Uint8Array","createArray","copyArray","sourceArray","targetArray","targetStart","sourceStart","sourceEnd","set","convertUtf8","toBytes","text","result","encodeURI","charCodeAt","push","substr","fromBytes","bytes","String","fromCharCode","join","convertHex","Hex","v","numberOfRounds","16","24","32","rcon","S","Si","T1","T2","T3","T4","T5","T6","T7","T8","U1","U2","U3","U4","convertToInt32","AES","this","_prepare","rounds","_Ke","_Kd","index","roundKeyCount","KC","tk","tt","rconpointer","encrypt","plaintext","a","decrypt","ciphertext","ModeOfOperationECB","description","_aes","block","ModeOfOperationCBC","iv","_lastCipherblock","j","ModeOfOperationCFB","segmentSize","_shiftRegister","xorSegment","encrypted","ModeOfOperationOFB","_lastPrecipher","_lastPrecipherIndex","Counter","initialValue","_counter","setValue","setBytes","Number","MAX_SAFE_INTEGER","increment","ModeOfOperationCTR","counter","_remainingCounter","_remainingCounterIndex","aesjs","ModeOfOperation","ecb","cbc","cfb","ofb","ctr","utils","hex","utf8","padding","pkcs7","pad","data","padder","strip","_arrayTest","assert","val","msg","inherits","ctor","superCtor","super_","TempCtor","constructor","BN","number","base","endian","isBN","negative","words","red","_init","Buffer","wordSize","e","parseHex","str","start","end","len","Math","min","parseBase","mul","num","max","left","right","cmp","_initNumber","_initArray","toString","replace","_parseHex","_parseBase","toArray","ceil","w","off","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","dest","clone","_expand","size","_normSign","inspect","zeros","groupSizes","groupBases","smallMulTo","self","out","b","lo","carry","k","ncarry","rword","maxJ","groupSize","groupBase","isZero","modn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","ArrayType","byteLength","reqLength","littleEndian","res","q","andln","iushrn","clz32","_countBits","_zeroBits","bitLength","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","sub","comb10MulTo","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","x","y","mulTo","hncarry","bigMulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","toBitArray","iushln","bits","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","acc","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","input","output","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u","asyncGeneratorStep","gen","resolve","reject","_next","_throw","info","error","done","Promise","then","fn","args","arguments","apply","err","undefined","__WEBPACK_AMD_DEFINE_RESULT__","Y","f","I","encoding","numRounds","K","Z","lastIndexOf","L","F","M","setHMACKey","binLen","update","getHash","shakeLen","O","P","Q","ArrayBuffer","R","getHMAC","charAt","outputUpper","toUpperCase","b64Pad","isNaN","search","indexOf","T","aa","ba","U","ca","da","ea","fa","ga","ha","ia","ja","ka","G","la","H","ma","na","oa","J","E","V","W","X","runtime","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","GenStateSuspendedStart","method","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","GenStateSuspendedYield","makeInvokeMethod","obj","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","invoke","__await","unwrapped","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","displayName","isGeneratorFunction","genFun","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","reverse","pop","skipTempReset","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","webpackPolyfill","deprecate","paths","children","Crypto","classCallCheck_default","createClass_default","textBytes","encryptedBytes","decryptedBytes","messageToSign","shaObj","jsSHA","Events","SuccessState","Unknown","Success","Failed","MessageStamp","posId","secrets","serverTimeDelta","PosId","Secrets","ServerTimeDelta","Message","id","eventName","needsEncryption","Id","EventName","Data","DateTimeStamp","IncommingHmac","_needsEncryption","DecryptedJson","success","error_reason","error_detail","now","Date","dts","getTime","stamp","tzoffset","getTimezoneOffset","adjustedTime","toISOString","envelope","message","event","datetime","pos_id","JSON","stringify","encMsg","AesEncrypt","EncKey","encrMessageEnvelope","enc","hmac","HmacSignature","HmacKey","bankDate","concat","date","time","msgJson","env","parse","decryptedJson","AesDecrypt","decryptedMsg","IncomingHmac","SpiStatus","PairedConnected","PairedConnecting","Unpaired","SpiFlow","Pairing","Transaction","Idle","PairingFlowState","AwaitingCheckFromEftpos","AwaitingCheckFromPos","ConfirmationCode","Finished","Successful","assign","TransactionType","Purchase","Refund","CashoutOnly","MOTO","Settle","SettlementEnquiry","GetLastTransaction","Preauth","AccountVerify","InitiateTxResult","initiated","Initiated","MidTxResult","valid","Valid","TransactionFlowState","posRefId","amountCents","PosRefId","Type","DisplayMessage","AmountCents","RequestSent","RequestTime","LastStateRequestTime","LastGltRequestId","AttemptingToCancel","AwaitingSignatureCheck","AwaitingPhoneForAuth","Response","SignatureRequiredMessage","PhoneForAuthRequiredMessage","CancelAttemptTime","Request","AwaitingGltResponse","GLTResponsePosRefId","gltRequestId","response","spiMessage","SubmitAuthCodeResult","validFormat","ValidFormat","SpiConfig","PrintMerchantCopy","PromptForCustomerCopyOnEftpos","SignatureFlowOnEftpos","EnabledPrintMerchantCopy","EnabledPromptForCustomerCopyOnEftpos","EnabledSignatureFlowOnEftpos","messageData","prompt_for_customer_copy","print_for_signature_required_transactions","print_merchant_copy","TransactionOptions","_customerReceiptHeader","_customerReceiptFooter","_merchantReceiptHeader","_merchantReceiptFooter","customerReceiptHeader","customerReceiptFooter","merchantReceiptHeader","merchantReceiptFooter","customer_receipt_header","customer_receipt_footer","merchant_receipt_header","merchant_receipt_footer","__RequestIdHelperCounter","RequestIdHelper","prefix","PairRequest","KeyRequest","RequestId","Aenc","Ahmac","KeyResponse","requestId","Benc","Bhmac","KeyCheck","substring","PairResponse","SecretsAndKeyResponse","keyResponse","DropKeysRequest","encKey","hmacKey","localStorage","setItem","getItem","removeItem","DiffieHellman","maxValue","maxValueBN","shiftDistance","floor","random","randBitInt","privateKey","aHex","gHex","montPrime","theirPublicKey","yourPrivateKey","bHex","AHex","GROUP14_2048_BIT_MODP","PairingHelper","keyRequest","encPubAndSec","_calculateMyPublicKeyAndSecret","MyPublicKey","Senc","SharedSecretKey","hmacPubAndSec","Shmac","diffieHellman","myPrivateBI","RandomPrivateKey","myPublicBI","PublicKey","secretBI","Secret","secret","DHSecretToSPISecret","PublicKeyAndSecret","padStart","GenerateHash","myPublicKey","sharedSecretKey","ConnectionState","Disconnected","Connecting","Connected","SPI_PROTOCOL","ConnectionStateEventArgs","connectionState","MessageEventArgs","Connection","Address","State","SpiProtocol","_ws","WebSocket","UseSecureWebSockets","_this","onopen","pollWebSocketConnection","onmessage","payload","onMessageReceived","onclose","onClosed","onerror","onError","document","dispatchEvent","CustomEvent","detail","readyState","CLOSED","close","send","_this2","count","OPEN","onOpened","setTimeout","Disconnect","PurchaseRequest","PurchaseAmount","TipAmount","CashoutAmount","PromptForCashout","SurchargeAmount","Config","Options","toFixed","pos_ref_id","purchase_amount","tip_amount","cash_amount","prompt_for_cashout","surcharge_amount","AddReceiptConfig","AddOptions","PurchaseResponse","_m","SchemeName","scheme_name","SchemeAppName","GetSuccessState","rrn","bank_noncash_amount","bank_cash_amount","customer_receipt","merchant_receipt","host_response_text","host_response_code","terminal_ref_id","card_entry","account_type","auth_code","bank_date","bank_time","masked_pan","terminal_id","merchant_receipt_printed","customer_receipt_printed","dateStr","bank_settlement_date","ParseBankDate","attribute","GetAccountType","GetAuthCode","GetBankDate","GetBankTime","GetResponseCode","GetResponseText","GetMaskedPan","GetPurchaseAmount","GetRRN","GetTerminalId","GetTerminalReferenceId","GetTipAmount","GetSurchargeAmount","CancelTransactionRequest","CancelTransactionResponse","GetLastTransactionRequest","GetLastTransactionResponse","GetError","startsWith","WasOperationInProgressError","GetPosRefId","transaction_type","amount_purchase","amount_transaction_type","cr","mr","RefundRequest","suppressMerchantPassword","SuppressMerchantPassword","refund_amount","suppress_merchant_password","RefundResponse","SignatureRequired","_receiptToSign","receiptToSign","SignatureDecline","SignatureAccept","MotoPurchaseRequest","surchargeAmount","MotoPurchaseResponse","PhoneForAuthRequired","_len","_key","_phoneNumber","_merchantId","auth_centre_phone_number","merchant_id","AuthCodeAdvice","authCode","AuthCode","BillStatusResponse","Result","BillId","TableId","OperatorId","TotalAmount","OutstandingAmount","BillData","map","bill","PaymentHistoryEntry","payment_type","payment_summary","messageId","BillRetrievalResult","SUCCESS","bill_id","table_id","bill_total_amount","bill_outstanding_amount","bill_payment_history","getBillPaymentHistory","INVALID_TABLE_ID","INVALID_BILL_ID","INVALID_OPERATOR_ID","BillPayment","_incomingAdvice","PaymentFlowStarted","pt","PaymentType","purchaseMsg","paymentType","paymentSummary","PaymentSummary","PayAtTableConfig","PayAtTabledEnabled","OperatorIdEnabled","SplitByAmountEnabled","EqualSplitEnabled","TableRetrievalEnabled","TippingEnabled","SummaryReportEnabled","LabelPayButton","LabelOperatorId","LabelTableId","AllowedOperatorIds","pay_at_table_enabled","operator_id_enabled","split_by_amount_enabled","equal_split_enabled","tipping_enabled","summary_report_enabled","pay_button_label","operator_id_label","table_id_label","operator_id_list","table_retrieval_enabled","GetOpenTablesResponse","TableData","tables","GetOpenTables","OpenTablesEntry","Label","BillOutstandingAmount","label","BillPaymentFlowEndedResponse","BillTotalAmount","operator_id","CardTotalCount","card_total_count","CardTotalAmount","card_total_amount","CashTotalCount","cash_total_count","CashTotalAmount","cash_total_amount","SpiPayAtTable","spi","_spi","_log","console","billId","tableId","operatorId","paymentFlowStarted","billPayment","updatedBillData","_send","ToMessage","GetBillStatus","billStatus","existingBillStatus","warn","existingPaymentHistory","find","phe","GetTerminalRefId","updatedHistoryEntries","toLowerCase","ToPaymentSummary","ToBillData","BillPaymentReceived","updatedBillStatus","openTablesResponse","BillPaymentFlowEnded","PreauthEvents","AccountVerifyRequest","PreauthOpenRequest","PreauthAmount","preauth_amount","PreauthTopupRequest","preauthId","topupAmountCents","PreauthId","TopupAmount","preauth_id","topup_amount","PreauthPartialCancellationRequest","partialCancellationAmountCents","PartialCancellationAmount","preauth_cancel_amount","PreauthExtendRequest","PreauthCancelRequest","PreauthCompletionRequest","completionAmountCents","CompletionAmount","completion_amount","PreauthResponse","Details","SpiPreauth","verifyMsg","tfs","_initiatePreauthTx","options","sentMsg","CurrentStatus","CurrentFlow","CurrentTxFlowState","Sent","_handleAccountVerifyResponse","_handlePreauthResponse","incomingPosRefId","currentTxFlowState","Completed","CashoutOnlyRequest","CashoutOnlyResponse","SettleRequest","Settlement","accumulated_settle_by_acquirer_count","accumulated_settle_by_acquirer_value","accumulated_total_count","accumulated_total_value","timeStr","settlement_period_start_time","settlement_period_start_date","ParseBankDateTimeStr","settlement_period_end_time","settlement_period_end_date","settlement_triggered_time","settlement_triggered_date","transaction_range","schemes","scheme","SchemeSettlementEntry","SettleByAcquirer","settle_by_acquirer","TotalValue","total_value","TotalCount","total_count","SettlementEnquiryRequest","SetPosInfoRequest","version","vendorId","libraryLanguage","libraryVersion","otherInfo","_version","_vendorId","_libraryLanguage","_libraryVersion","_otherInfo","pos_version","pos_vendor_id","library_language","library_version","other_info","SetPosInfoResponse","_success","DeviceInfo","deviceInfo","navigator","userAgent","PurchaseHelper","purchaseId","purchaseAmount","tipAmount","cashoutAmount","promptForCashout","KeyRollingHelper","krRequest","currentSecrets","status","newSecrets","KeyRollingResult","keyRollingConfirmation","KeyRollingConfirmation","NewSecrets","PongHelper","ping","PingHelper","DeviceAddressStatus","useSecureWebSockets","ip","fqdn","LastUpdated","DeviceAddressResponseCode","ResponseStatusDescription","ResponseMessage","address","addreses","INVALID_SERIAL_NUMBER","ADDRESS_NOT_CHANGED","SERIAL_NUMBER_NOT_CHANGED","DEVICE_SERVICE_ERROR","HttpStatusCode","DeviceAddressService","_RetrieveService","asyncToGenerator_default","regenerator_default","_callee","serialNumber","apiKey","acquirerCode","isSecureConnection","isTestMode","path","deviceAddressUri","_args","_context","fetch","headers","ASM-MSP-DEVICE-ADDRESS-API-KEY","_x","PrintingRequest","_payload","PrintingResponse","Printer","element","_render","innerText","scrollTop","scrollHeight","TerminalStatusRequest","TerminalStatusResponse","battery_level","charging","TerminalBattery","BatteryLevel","Spi","eftposAddress","_posId","_serialNumber","_secrets","_forceSecureWebSockets","_eftposAddress","_conn","CurrentDeviceStatus","_deviceApiKey","_acquirerCode","_inTestMode","_autoAddressResolutionEnabled","_spiMessageStamp","_posVendorId","_posVersion","_hasSetInfo","_mostRecentPingSent","_mostRecentPongReceived","_missedPongsCount","_retriesSinceLastDeviceAddressResolution","_mostRecentLoginResponse","_pongTimeout","_pingFrequency","_readyToTransact","_periodicPingThread","_txMonitorCheckFrequency","_checkOnTxFrequency","_maxWaitForCancelTx","_sleepBeforeReconnectMs","_missedPongsToDisconnect","_retriesBeforeResolvingDeviceAddress","CurrentPairingFlowState","_currentStatus","_spiPat","_spiPreauth","_resetConn","_startTransactionMonitoringThread","Connect","deviceApiKey","was","HasSerialNumberChanged","_autoResolveEftposAddress","autoAddressResolutionEnable","testMode","posVendorId","posVersion","_onPairingSuccess","_onReadyToTransact","_onPairingFailed","_doUnpair","purchaseRequest","CreatePurchaseRequest","purchase","CreatePurchaseRequestV2","AmountSummary","refundRequest","CreateRefundRequest","refundMsg","accepted","SignatureResponded","AuthCodeSent","cancelReq","Cancelling","cashoutMsg","motoPurchaseMsg","settleMsg","stlEnqMsg","gltRequestMsg","CallingGlt","txType","gltResponse","expectedAmount","requestTime","GltMatch","gltBankDateTimeStr","GetBankDateTimeString","gltBankDateTime","compare","GetTxType","GetBankNonCashAmount","toMessage","GenerateSecretsAndKeyResponse","keyCheck","pairResp","_startPeriodicPing","krRes","PerformKeyRolling","phoneForAuthRequired","GetPhoneNumber","GetMerchantId","_callGetLastTransaction","txState","GotGltResponse","gtlResponse","WasRetrievedSuccessfully","CopyMerchantReceiptToCustomerReceipt","successState","UnknownCompleted","IsStillInProgress","WasTimeOutOfSyncError","IsWaitingForSignatureResponse","IsWaitingForAuthCode","cancelResponse","GetErrorReason","GetErrorDetail","CancelFailed","isSuccess","getErrorReason","getErrorDetail","needsPublishing","BatteryLevelChanged","_isUsingHttps","addEventListener","_onSpiConnectionStatusChanged","_onSpiMessageReceived","_onWsErrorReceived","_this3","pr","NewPairRequest","_stopPeriodicPing","_this4","setInterval","_periodicPing","_this5","_doPing","_callSetPosInfo","PushPayAtTableConfig","setPosInfoRequest","GetAppDeviceInfo","clearInterval","GeneratePingRequest","_mostRecentPingSentTime","GetServerTimeDelta","debug","pong","GeneratePongRessponse","messageJson","FromJson","IsPreauthEvent","_handlePreauthMessage","_handleKeyRequest","_handleKeyCheck","_handlePairResponse","_handleDropKeysAdvice","_handlePurchaseResponse","_handleRefundResponse","_handleCashoutOnlyResponse","_handleMotoPurchaseResponse","_handleSignatureRequired","_handleAuthCodeRequired","_handleGetLastTransactionResponse","HandleSettleResponse","_handleSettlementEnquiryResponse","_handleIncomingPing","_handleIncomingPong","_handleKeyRollingRequest","_handleCancelTransactionResponse","_handleSetPosInfoResponse","FeatureDisableMessage","_handleGetTableConfig","_handleGetBillDetailsRequest","_handleBillPaymentAdvice","_handleGetOpenTablesRequest","_handleBillPaymentFlowEnded","_handlePrintingResponse","_handleTerminalStatusResponse","_handleBatteryLevelChanged","_handleErrorEvent","json","ToJson","Send","updatedSerialNumber","updatedEftposAddress","_isSecureConnection","service","RetrieveService","addressResponse","addressResponseJson","statusText","last_updated","t0","ok","HasEftposAddressChanged","protocol","location","Logger","lineSeperator","_len2","_key2","_len3","_key3","_len4","_key4","_len5","_key5","log","__webpack_exports__","Spi_Spi","Logger_Logger","Secrets_Secrets","SpiModels_TransactionOptions","Printing_PrintingResponse","Purchase_RefundResponse","Purchase_PurchaseResponse","Purchase_GetLastTransactionResponse","Purchase_MotoPurchaseResponse","TerminalStatus_TerminalStatusResponse","TerminalStatus_TerminalBattery","Cashout_CashoutOnlyResponse","Settlement_Settlement","RequestIdHelper_RequestIdHelper","PayAtTable_BillStatusResponse","PayAtTable_GetOpenTablesResponse","PayAtTable_OpenTablesEntry","PayAtTable_BillPaymentFlowEndedResponse","Preauth_PreauthResponse","window"],"mappings":"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","file":"spi-client-js.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","/*! MIT License. Copyright 2015-2018 Richard Moore <me@ricmoo.com>. See LICENSE.txt. */\n(function(root) {\n    \"use strict\";\n\n    function checkInt(value) {\n        return (parseInt(value) === value);\n    }\n\n    function checkInts(arrayish) {\n        if (!checkInt(arrayish.length)) { return false; }\n\n        for (var i = 0; i < arrayish.length; i++) {\n            if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function coerceArray(arg, copy) {\n\n        // ArrayBuffer view\n        if (arg.buffer && arg.name === 'Uint8Array') {\n\n            if (copy) {\n                if (arg.slice) {\n                    arg = arg.slice();\n                } else {\n                    arg = Array.prototype.slice.call(arg);\n                }\n            }\n\n            return arg;\n        }\n\n        // It's an array; check it is a valid representation of a byte\n        if (Array.isArray(arg)) {\n            if (!checkInts(arg)) {\n                throw new Error('Array contains invalid value: ' + arg);\n            }\n\n            return new Uint8Array(arg);\n        }\n\n        // Something else, but behaves like an array (maybe a Buffer? Arguments?)\n        if (checkInt(arg.length) && checkInts(arg)) {\n            return new Uint8Array(arg);\n        }\n\n        throw new Error('unsupported array-like object');\n    }\n\n    function createArray(length) {\n        return new Uint8Array(length);\n    }\n\n    function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {\n        if (sourceStart != null || sourceEnd != null) {\n            if (sourceArray.slice) {\n                sourceArray = sourceArray.slice(sourceStart, sourceEnd);\n            } else {\n                sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);\n            }\n        }\n        targetArray.set(sourceArray, targetStart);\n    }\n\n\n\n    var convertUtf8 = (function() {\n        function toBytes(text) {\n            var result = [], i = 0;\n            text = encodeURI(text);\n            while (i < text.length) {\n                var c = text.charCodeAt(i++);\n\n                // if it is a % sign, encode the following 2 bytes as a hex value\n                if (c === 37) {\n                    result.push(parseInt(text.substr(i, 2), 16))\n                    i += 2;\n\n                // otherwise, just the actual byte\n                } else {\n                    result.push(c)\n                }\n            }\n\n            return coerceArray(result);\n        }\n\n        function fromBytes(bytes) {\n            var result = [], i = 0;\n\n            while (i < bytes.length) {\n                var c = bytes[i];\n\n                if (c < 128) {\n                    result.push(String.fromCharCode(c));\n                    i++;\n                } else if (c > 191 && c < 224) {\n                    result.push(String.fromCharCode(((c & 0x1f) << 6) | (bytes[i + 1] & 0x3f)));\n                    i += 2;\n                } else {\n                    result.push(String.fromCharCode(((c & 0x0f) << 12) | ((bytes[i + 1] & 0x3f) << 6) | (bytes[i + 2] & 0x3f)));\n                    i += 3;\n                }\n            }\n\n            return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n    var convertHex = (function() {\n        function toBytes(text) {\n            var result = [];\n            for (var i = 0; i < text.length; i += 2) {\n                result.push(parseInt(text.substr(i, 2), 16));\n            }\n\n            return result;\n        }\n\n        // http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html\n        var Hex = '0123456789abcdef';\n\n        function fromBytes(bytes) {\n                var result = [];\n                for (var i = 0; i < bytes.length; i++) {\n                    var v = bytes[i];\n                    result.push(Hex[(v & 0xf0) >> 4] + Hex[v & 0x0f]);\n                }\n                return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n\n    // Number of rounds by keysize\n    var numberOfRounds = {16: 10, 24: 12, 32: 14}\n\n    // Round constant words\n    var rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];\n\n    // S-box and Inverse S-box (S is for Substitution)\n    var S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\n    var Si =[0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];\n\n    // Transformations for encryption\n    var T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\n    var T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\n    var T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\n    var T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];\n\n    // Transformations for decryption\n    var T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\n    var T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\n    var T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\n    var T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];\n\n    // Transformations for decryption key expansion\n    var U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\n    var U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\n    var U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\n    var U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\n\n    function convertToInt32(bytes) {\n        var result = [];\n        for (var i = 0; i < bytes.length; i += 4) {\n            result.push(\n                (bytes[i    ] << 24) |\n                (bytes[i + 1] << 16) |\n                (bytes[i + 2] <<  8) |\n                 bytes[i + 3]\n            );\n        }\n        return result;\n    }\n\n    var AES = function(key) {\n        if (!(this instanceof AES)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        Object.defineProperty(this, 'key', {\n            value: coerceArray(key, true)\n        });\n\n        this._prepare();\n    }\n\n\n    AES.prototype._prepare = function() {\n\n        var rounds = numberOfRounds[this.key.length];\n        if (rounds == null) {\n            throw new Error('invalid key size (must be 16, 24 or 32 bytes)');\n        }\n\n        // encryption round keys\n        this._Ke = [];\n\n        // decryption round keys\n        this._Kd = [];\n\n        for (var i = 0; i <= rounds; i++) {\n            this._Ke.push([0, 0, 0, 0]);\n            this._Kd.push([0, 0, 0, 0]);\n        }\n\n        var roundKeyCount = (rounds + 1) * 4;\n        var KC = this.key.length / 4;\n\n        // convert the key into ints\n        var tk = convertToInt32(this.key);\n\n        // copy values into round key arrays\n        var index;\n        for (var i = 0; i < KC; i++) {\n            index = i >> 2;\n            this._Ke[index][i % 4] = tk[i];\n            this._Kd[rounds - index][i % 4] = tk[i];\n        }\n\n        // key expansion (fips-197 section 5.2)\n        var rconpointer = 0;\n        var t = KC, tt;\n        while (t < roundKeyCount) {\n            tt = tk[KC - 1];\n            tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^\n                      (S[(tt >>  8) & 0xFF] << 16) ^\n                      (S[ tt        & 0xFF] <<  8) ^\n                       S[(tt >> 24) & 0xFF]        ^\n                      (rcon[rconpointer] << 24));\n            rconpointer += 1;\n\n            // key expansion (for non-256 bit)\n            if (KC != 8) {\n                for (var i = 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n\n            // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n            } else {\n                for (var i = 1; i < (KC / 2); i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n                tt = tk[(KC / 2) - 1];\n\n                tk[KC / 2] ^= (S[ tt        & 0xFF]        ^\n                              (S[(tt >>  8) & 0xFF] <<  8) ^\n                              (S[(tt >> 16) & 0xFF] << 16) ^\n                              (S[(tt >> 24) & 0xFF] << 24));\n\n                for (var i = (KC / 2) + 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n            }\n\n            // copy values into round key arrays\n            var i = 0, r, c;\n            while (i < KC && t < roundKeyCount) {\n                r = t >> 2;\n                c = t % 4;\n                this._Ke[r][c] = tk[i];\n                this._Kd[rounds - r][c] = tk[i++];\n                t++;\n            }\n        }\n\n        // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n        for (var r = 1; r < rounds; r++) {\n            for (var c = 0; c < 4; c++) {\n                tt = this._Kd[r][c];\n                this._Kd[r][c] = (U1[(tt >> 24) & 0xFF] ^\n                                  U2[(tt >> 16) & 0xFF] ^\n                                  U3[(tt >>  8) & 0xFF] ^\n                                  U4[ tt        & 0xFF]);\n            }\n        }\n    }\n\n    AES.prototype.encrypt = function(plaintext) {\n        if (plaintext.length != 16) {\n            throw new Error('invalid plaintext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Ke.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(plaintext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Ke[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T1[(t[ i         ] >> 24) & 0xff] ^\n                        T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n                        T3[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T4[ t[(i + 3) % 4]        & 0xff] ^\n                        this._Ke[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Ke[rounds][i];\n            result[4 * i    ] = (S[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (S[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (S[ t[(i + 3) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n    AES.prototype.decrypt = function(ciphertext) {\n        if (ciphertext.length != 16) {\n            throw new Error('invalid ciphertext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Kd.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(ciphertext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Kd[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T5[(t[ i          ] >> 24) & 0xff] ^\n                        T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n                        T7[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T8[ t[(i + 1) % 4]        & 0xff] ^\n                        this._Kd[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Kd[rounds][i];\n            result[4 * i    ] = (Si[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (Si[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (Si[ t[(i + 1) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n\n    /**\n     *  Mode Of Operation - Electonic Codebook (ECB)\n     */\n    var ModeOfOperationECB = function(key) {\n        if (!(this instanceof ModeOfOperationECB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Electronic Code Block\";\n        this.name = \"ecb\";\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationECB.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n            block = this._aes.encrypt(block);\n            copyArray(block, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationECB.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n            copyArray(block, plaintext, i);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Block Chaining (CBC)\n     */\n    var ModeOfOperationCBC = function(key, iv) {\n        if (!(this instanceof ModeOfOperationCBC)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Block Chaining\";\n        this.name = \"cbc\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastCipherblock = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCBC.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n\n            for (var j = 0; j < 16; j++) {\n                block[j] ^= this._lastCipherblock[j];\n            }\n\n            this._lastCipherblock = this._aes.encrypt(block);\n            copyArray(this._lastCipherblock, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationCBC.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n\n            for (var j = 0; j < 16; j++) {\n                plaintext[i + j] = block[j] ^ this._lastCipherblock[j];\n            }\n\n            copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Feedback (CFB)\n     */\n    var ModeOfOperationCFB = function(key, iv, segmentSize) {\n        if (!(this instanceof ModeOfOperationCFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Feedback\";\n        this.name = \"cfb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 size)');\n        }\n\n        if (!segmentSize) { segmentSize = 1; }\n\n        this.segmentSize = segmentSize;\n\n        this._shiftRegister = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCFB.prototype.encrypt = function(plaintext) {\n        if ((plaintext.length % this.segmentSize) != 0) {\n            throw new Error('invalid plaintext size (must be segmentSize bytes)');\n        }\n\n        var encrypted = coerceArray(plaintext, true);\n\n        var xorSegment;\n        for (var i = 0; i < encrypted.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n            for (var j = 0; j < this.segmentSize; j++) {\n                encrypted[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return encrypted;\n    }\n\n    ModeOfOperationCFB.prototype.decrypt = function(ciphertext) {\n        if ((ciphertext.length % this.segmentSize) != 0) {\n            throw new Error('invalid ciphertext size (must be segmentSize bytes)');\n        }\n\n        var plaintext = coerceArray(ciphertext, true);\n\n        var xorSegment;\n        for (var i = 0; i < plaintext.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n\n            for (var j = 0; j < this.segmentSize; j++) {\n                plaintext[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return plaintext;\n    }\n\n    /**\n     *  Mode Of Operation - Output Feedback (OFB)\n     */\n    var ModeOfOperationOFB = function(key, iv) {\n        if (!(this instanceof ModeOfOperationOFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Output Feedback\";\n        this.name = \"ofb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastPrecipher = coerceArray(iv, true);\n        this._lastPrecipherIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationOFB.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._lastPrecipherIndex === 16) {\n                this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);\n                this._lastPrecipherIndex = 0;\n            }\n            encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;\n\n\n    /**\n     *  Counter object for CTR common mode of operation\n     */\n    var Counter = function(initialValue) {\n        if (!(this instanceof Counter)) {\n            throw Error('Counter must be instanitated with `new`');\n        }\n\n        // We allow 0, but anything false-ish uses the default 1\n        if (initialValue !== 0 && !initialValue) { initialValue = 1; }\n\n        if (typeof(initialValue) === 'number') {\n            this._counter = createArray(16);\n            this.setValue(initialValue);\n\n        } else {\n            this.setBytes(initialValue);\n        }\n    }\n\n    Counter.prototype.setValue = function(value) {\n        if (typeof(value) !== 'number' || parseInt(value) != value) {\n            throw new Error('invalid counter value (must be an integer)');\n        }\n\n        // We cannot safely handle numbers beyond the safe range for integers\n        if (value > Number.MAX_SAFE_INTEGER) {\n            throw new Error('integer value out of safe range');\n        }\n\n        for (var index = 15; index >= 0; --index) {\n            this._counter[index] = value % 256;\n            value = parseInt(value / 256);\n        }\n    }\n\n    Counter.prototype.setBytes = function(bytes) {\n        bytes = coerceArray(bytes, true);\n\n        if (bytes.length != 16) {\n            throw new Error('invalid counter bytes size (must be 16 bytes)');\n        }\n\n        this._counter = bytes;\n    };\n\n    Counter.prototype.increment = function() {\n        for (var i = 15; i >= 0; i--) {\n            if (this._counter[i] === 255) {\n                this._counter[i] = 0;\n            } else {\n                this._counter[i]++;\n                break;\n            }\n        }\n    }\n\n\n    /**\n     *  Mode Of Operation - Counter (CTR)\n     */\n    var ModeOfOperationCTR = function(key, counter) {\n        if (!(this instanceof ModeOfOperationCTR)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Counter\";\n        this.name = \"ctr\";\n\n        if (!(counter instanceof Counter)) {\n            counter = new Counter(counter)\n        }\n\n        this._counter = counter;\n\n        this._remainingCounter = null;\n        this._remainingCounterIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCTR.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._remainingCounterIndex === 16) {\n                this._remainingCounter = this._aes.encrypt(this._counter._counter);\n                this._remainingCounterIndex = 0;\n                this._counter.increment();\n            }\n            encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;\n\n\n    ///////////////////////\n    // Padding\n\n    // See:https://tools.ietf.org/html/rfc2315\n    function pkcs7pad(data) {\n        data = coerceArray(data, true);\n        var padder = 16 - (data.length % 16);\n        var result = createArray(data.length + padder);\n        copyArray(data, result);\n        for (var i = data.length; i < result.length; i++) {\n            result[i] = padder;\n        }\n        return result;\n    }\n\n    function pkcs7strip(data) {\n        data = coerceArray(data, true);\n        if (data.length < 16) { throw new Error('PKCS#7 invalid length'); }\n\n        var padder = data[data.length - 1];\n        if (padder > 16) { throw new Error('PKCS#7 padding byte out of range'); }\n\n        var length = data.length - padder;\n        for (var i = 0; i < padder; i++) {\n            if (data[length + i] !== padder) {\n                throw new Error('PKCS#7 invalid padding byte');\n            }\n        }\n\n        var result = createArray(length);\n        copyArray(data, result, 0, 0, length);\n        return result;\n    }\n\n    ///////////////////////\n    // Exporting\n\n\n    // The block cipher\n    var aesjs = {\n        AES: AES,\n        Counter: Counter,\n\n        ModeOfOperation: {\n            ecb: ModeOfOperationECB,\n            cbc: ModeOfOperationCBC,\n            cfb: ModeOfOperationCFB,\n            ofb: ModeOfOperationOFB,\n            ctr: ModeOfOperationCTR\n        },\n\n        utils: {\n            hex: convertHex,\n            utf8: convertUtf8\n        },\n\n        padding: {\n            pkcs7: {\n                pad: pkcs7pad,\n                strip: pkcs7strip\n            }\n        },\n\n        _arrayTest: {\n            coerceArray: coerceArray,\n            createArray: createArray,\n            copyArray: copyArray,\n        }\n    };\n\n\n    // node.js\n    if (typeof exports !== 'undefined') {\n        module.exports = aesjs\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define([], function() { return aesjs; });\n\n    // Web Browsers\n    } else {\n\n        // If there was an existing library at \"aesjs\" make sure it's still available\n        if (root.aesjs) {\n            aesjs._aesjs = root.aesjs;\n        }\n\n        root.aesjs = aesjs;\n    }\n\n\n})(this);\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","/*\n A JavaScript implementation of the SHA family of hashes, as\n defined in FIPS PUB 180-4 and FIPS PUB 202, as well as the corresponding\n HMAC implementation as defined in FIPS PUB 198a\n\n Copyright Brian Turek 2008-2017\n Distributed under the BSD License\n See http://caligatio.github.com/jsSHA/ for more information\n\n Several functions taken from Paul Johnston\n*/\n'use strict';(function(Y){function C(c,a,b){var e=0,h=[],n=0,g,l,d,f,m,q,u,r,I=!1,v=[],w=[],t,y=!1,z=!1,x=-1;b=b||{};g=b.encoding||\"UTF8\";t=b.numRounds||1;if(t!==parseInt(t,10)||1>t)throw Error(\"numRounds must a integer >= 1\");if(\"SHA-1\"===c)m=512,q=K,u=Z,f=160,r=function(a){return a.slice()};else if(0===c.lastIndexOf(\"SHA-\",0))if(q=function(a,b){return L(a,b,c)},u=function(a,b,h,e){var k,f;if(\"SHA-224\"===c||\"SHA-256\"===c)k=(b+65>>>9<<4)+15,f=16;else if(\"SHA-384\"===c||\"SHA-512\"===c)k=(b+129>>>10<<\n5)+31,f=32;else throw Error(\"Unexpected error in SHA-2 implementation\");for(;a.length<=k;)a.push(0);a[b>>>5]|=128<<24-b%32;b=b+h;a[k]=b&4294967295;a[k-1]=b/4294967296|0;h=a.length;for(b=0;b<h;b+=f)e=L(a.slice(b,b+f),e,c);if(\"SHA-224\"===c)a=[e[0],e[1],e[2],e[3],e[4],e[5],e[6]];else if(\"SHA-256\"===c)a=e;else if(\"SHA-384\"===c)a=[e[0].a,e[0].b,e[1].a,e[1].b,e[2].a,e[2].b,e[3].a,e[3].b,e[4].a,e[4].b,e[5].a,e[5].b];else if(\"SHA-512\"===c)a=[e[0].a,e[0].b,e[1].a,e[1].b,e[2].a,e[2].b,e[3].a,e[3].b,e[4].a,\ne[4].b,e[5].a,e[5].b,e[6].a,e[6].b,e[7].a,e[7].b];else throw Error(\"Unexpected error in SHA-2 implementation\");return a},r=function(a){return a.slice()},\"SHA-224\"===c)m=512,f=224;else if(\"SHA-256\"===c)m=512,f=256;else if(\"SHA-384\"===c)m=1024,f=384;else if(\"SHA-512\"===c)m=1024,f=512;else throw Error(\"Chosen SHA variant is not supported\");else if(0===c.lastIndexOf(\"SHA3-\",0)||0===c.lastIndexOf(\"SHAKE\",0)){var F=6;q=D;r=function(a){var c=[],e;for(e=0;5>e;e+=1)c[e]=a[e].slice();return c};x=1;if(\"SHA3-224\"===\nc)m=1152,f=224;else if(\"SHA3-256\"===c)m=1088,f=256;else if(\"SHA3-384\"===c)m=832,f=384;else if(\"SHA3-512\"===c)m=576,f=512;else if(\"SHAKE128\"===c)m=1344,f=-1,F=31,z=!0;else if(\"SHAKE256\"===c)m=1088,f=-1,F=31,z=!0;else throw Error(\"Chosen SHA variant is not supported\");u=function(a,c,e,b,h){e=m;var k=F,f,g=[],n=e>>>5,l=0,d=c>>>5;for(f=0;f<d&&c>=e;f+=n)b=D(a.slice(f,f+n),b),c-=e;a=a.slice(f);for(c%=e;a.length<n;)a.push(0);f=c>>>3;a[f>>2]^=k<<f%4*8;a[n-1]^=2147483648;for(b=D(a,b);32*g.length<h;){a=b[l%\n5][l/5|0];g.push(a.b);if(32*g.length>=h)break;g.push(a.a);l+=1;0===64*l%e&&D(null,b)}return g}}else throw Error(\"Chosen SHA variant is not supported\");d=M(a,g,x);l=A(c);this.setHMACKey=function(a,b,h){var k;if(!0===I)throw Error(\"HMAC key already set\");if(!0===y)throw Error(\"Cannot set HMAC key after calling update\");if(!0===z)throw Error(\"SHAKE is not supported for HMAC\");g=(h||{}).encoding||\"UTF8\";b=M(b,g,x)(a);a=b.binLen;b=b.value;k=m>>>3;h=k/4-1;if(k<a/8){for(b=u(b,a,0,A(c),f);b.length<=h;)b.push(0);\nb[h]&=4294967040}else if(k>a/8){for(;b.length<=h;)b.push(0);b[h]&=4294967040}for(a=0;a<=h;a+=1)v[a]=b[a]^909522486,w[a]=b[a]^1549556828;l=q(v,l);e=m;I=!0};this.update=function(a){var c,b,k,f=0,g=m>>>5;c=d(a,h,n);a=c.binLen;b=c.value;c=a>>>5;for(k=0;k<c;k+=g)f+m<=a&&(l=q(b.slice(k,k+g),l),f+=m);e+=f;h=b.slice(f>>>5);n=a%m;y=!0};this.getHash=function(a,b){var k,g,d,m;if(!0===I)throw Error(\"Cannot call getHash after setting HMAC key\");d=N(b);if(!0===z){if(-1===d.shakeLen)throw Error(\"shakeLen must be specified in options\");\nf=d.shakeLen}switch(a){case \"HEX\":k=function(a){return O(a,f,x,d)};break;case \"B64\":k=function(a){return P(a,f,x,d)};break;case \"BYTES\":k=function(a){return Q(a,f,x)};break;case \"ARRAYBUFFER\":try{g=new ArrayBuffer(0)}catch(p){throw Error(\"ARRAYBUFFER not supported by this environment\");}k=function(a){return R(a,f,x)};break;default:throw Error(\"format must be HEX, B64, BYTES, or ARRAYBUFFER\");}m=u(h.slice(),n,e,r(l),f);for(g=1;g<t;g+=1)!0===z&&0!==f%32&&(m[m.length-1]&=16777215>>>24-f%32),m=u(m,f,\n0,A(c),f);return k(m)};this.getHMAC=function(a,b){var k,g,d,p;if(!1===I)throw Error(\"Cannot call getHMAC without first setting HMAC key\");d=N(b);switch(a){case \"HEX\":k=function(a){return O(a,f,x,d)};break;case \"B64\":k=function(a){return P(a,f,x,d)};break;case \"BYTES\":k=function(a){return Q(a,f,x)};break;case \"ARRAYBUFFER\":try{k=new ArrayBuffer(0)}catch(v){throw Error(\"ARRAYBUFFER not supported by this environment\");}k=function(a){return R(a,f,x)};break;default:throw Error(\"outputFormat must be HEX, B64, BYTES, or ARRAYBUFFER\");\n}g=u(h.slice(),n,e,r(l),f);p=q(w,A(c));p=u(g,f,m,p,f);return k(p)}}function b(c,a){this.a=c;this.b=a}function O(c,a,b,e){var h=\"\";a/=8;var n,g,d;d=-1===b?3:0;for(n=0;n<a;n+=1)g=c[n>>>2]>>>8*(d+n%4*b),h+=\"0123456789abcdef\".charAt(g>>>4&15)+\"0123456789abcdef\".charAt(g&15);return e.outputUpper?h.toUpperCase():h}function P(c,a,b,e){var h=\"\",n=a/8,g,d,p,f;f=-1===b?3:0;for(g=0;g<n;g+=3)for(d=g+1<n?c[g+1>>>2]:0,p=g+2<n?c[g+2>>>2]:0,p=(c[g>>>2]>>>8*(f+g%4*b)&255)<<16|(d>>>8*(f+(g+1)%4*b)&255)<<8|p>>>8*(f+\n(g+2)%4*b)&255,d=0;4>d;d+=1)8*g+6*d<=a?h+=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".charAt(p>>>6*(3-d)&63):h+=e.b64Pad;return h}function Q(c,a,b){var e=\"\";a/=8;var h,d,g;g=-1===b?3:0;for(h=0;h<a;h+=1)d=c[h>>>2]>>>8*(g+h%4*b)&255,e+=String.fromCharCode(d);return e}function R(c,a,b){a/=8;var e,h=new ArrayBuffer(a),d,g;g=new Uint8Array(h);d=-1===b?3:0;for(e=0;e<a;e+=1)g[e]=c[e>>>2]>>>8*(d+e%4*b)&255;return h}function N(c){var a={outputUpper:!1,b64Pad:\"=\",shakeLen:-1};c=c||{};\na.outputUpper=c.outputUpper||!1;!0===c.hasOwnProperty(\"b64Pad\")&&(a.b64Pad=c.b64Pad);if(!0===c.hasOwnProperty(\"shakeLen\")){if(0!==c.shakeLen%8)throw Error(\"shakeLen must be a multiple of 8\");a.shakeLen=c.shakeLen}if(\"boolean\"!==typeof a.outputUpper)throw Error(\"Invalid outputUpper formatting option\");if(\"string\"!==typeof a.b64Pad)throw Error(\"Invalid b64Pad formatting option\");return a}function M(c,a,b){switch(a){case \"UTF8\":case \"UTF16BE\":case \"UTF16LE\":break;default:throw Error(\"encoding must be UTF8, UTF16BE, or UTF16LE\");\n}switch(c){case \"HEX\":c=function(a,c,d){var g=a.length,l,p,f,m,q,u;if(0!==g%2)throw Error(\"String of HEX type must be in byte increments\");c=c||[0];d=d||0;q=d>>>3;u=-1===b?3:0;for(l=0;l<g;l+=2){p=parseInt(a.substr(l,2),16);if(isNaN(p))throw Error(\"String of HEX type contains invalid characters\");m=(l>>>1)+q;for(f=m>>>2;c.length<=f;)c.push(0);c[f]|=p<<8*(u+m%4*b)}return{value:c,binLen:4*g+d}};break;case \"TEXT\":c=function(c,h,d){var g,l,p=0,f,m,q,u,r,t;h=h||[0];d=d||0;q=d>>>3;if(\"UTF8\"===a)for(t=-1===\nb?3:0,f=0;f<c.length;f+=1)for(g=c.charCodeAt(f),l=[],128>g?l.push(g):2048>g?(l.push(192|g>>>6),l.push(128|g&63)):55296>g||57344<=g?l.push(224|g>>>12,128|g>>>6&63,128|g&63):(f+=1,g=65536+((g&1023)<<10|c.charCodeAt(f)&1023),l.push(240|g>>>18,128|g>>>12&63,128|g>>>6&63,128|g&63)),m=0;m<l.length;m+=1){r=p+q;for(u=r>>>2;h.length<=u;)h.push(0);h[u]|=l[m]<<8*(t+r%4*b);p+=1}else if(\"UTF16BE\"===a||\"UTF16LE\"===a)for(t=-1===b?2:0,l=\"UTF16LE\"===a&&1!==b||\"UTF16LE\"!==a&&1===b,f=0;f<c.length;f+=1){g=c.charCodeAt(f);\n!0===l&&(m=g&255,g=m<<8|g>>>8);r=p+q;for(u=r>>>2;h.length<=u;)h.push(0);h[u]|=g<<8*(t+r%4*b);p+=2}return{value:h,binLen:8*p+d}};break;case \"B64\":c=function(a,c,d){var g=0,l,p,f,m,q,u,r,t;if(-1===a.search(/^[a-zA-Z0-9=+\\/]+$/))throw Error(\"Invalid character in base-64 string\");p=a.indexOf(\"=\");a=a.replace(/\\=/g,\"\");if(-1!==p&&p<a.length)throw Error(\"Invalid '=' found in base-64 string\");c=c||[0];d=d||0;u=d>>>3;t=-1===b?3:0;for(p=0;p<a.length;p+=4){q=a.substr(p,4);for(f=m=0;f<q.length;f+=1)l=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".indexOf(q[f]),\nm|=l<<18-6*f;for(f=0;f<q.length-1;f+=1){r=g+u;for(l=r>>>2;c.length<=l;)c.push(0);c[l]|=(m>>>16-8*f&255)<<8*(t+r%4*b);g+=1}}return{value:c,binLen:8*g+d}};break;case \"BYTES\":c=function(a,c,d){var g,l,p,f,m,q;c=c||[0];d=d||0;p=d>>>3;q=-1===b?3:0;for(l=0;l<a.length;l+=1)g=a.charCodeAt(l),m=l+p,f=m>>>2,c.length<=f&&c.push(0),c[f]|=g<<8*(q+m%4*b);return{value:c,binLen:8*a.length+d}};break;case \"ARRAYBUFFER\":try{c=new ArrayBuffer(0)}catch(e){throw Error(\"ARRAYBUFFER not supported by this environment\");}c=\nfunction(a,c,d){var g,l,p,f,m,q;c=c||[0];d=d||0;l=d>>>3;m=-1===b?3:0;q=new Uint8Array(a);for(g=0;g<a.byteLength;g+=1)f=g+l,p=f>>>2,c.length<=p&&c.push(0),c[p]|=q[g]<<8*(m+f%4*b);return{value:c,binLen:8*a.byteLength+d}};break;default:throw Error(\"format must be HEX, TEXT, B64, BYTES, or ARRAYBUFFER\");}return c}function y(c,a){return c<<a|c>>>32-a}function S(c,a){return 32<a?(a-=32,new b(c.b<<a|c.a>>>32-a,c.a<<a|c.b>>>32-a)):0!==a?new b(c.a<<a|c.b>>>32-a,c.b<<a|c.a>>>32-a):c}function w(c,a){return c>>>\na|c<<32-a}function t(c,a){var k=null,k=new b(c.a,c.b);return k=32>=a?new b(k.a>>>a|k.b<<32-a&4294967295,k.b>>>a|k.a<<32-a&4294967295):new b(k.b>>>a-32|k.a<<64-a&4294967295,k.a>>>a-32|k.b<<64-a&4294967295)}function T(c,a){var k=null;return k=32>=a?new b(c.a>>>a,c.b>>>a|c.a<<32-a&4294967295):new b(0,c.a>>>a-32)}function aa(c,a,b){return c&a^~c&b}function ba(c,a,k){return new b(c.a&a.a^~c.a&k.a,c.b&a.b^~c.b&k.b)}function U(c,a,b){return c&a^c&b^a&b}function ca(c,a,k){return new b(c.a&a.a^c.a&k.a^a.a&\nk.a,c.b&a.b^c.b&k.b^a.b&k.b)}function da(c){return w(c,2)^w(c,13)^w(c,22)}function ea(c){var a=t(c,28),k=t(c,34);c=t(c,39);return new b(a.a^k.a^c.a,a.b^k.b^c.b)}function fa(c){return w(c,6)^w(c,11)^w(c,25)}function ga(c){var a=t(c,14),k=t(c,18);c=t(c,41);return new b(a.a^k.a^c.a,a.b^k.b^c.b)}function ha(c){return w(c,7)^w(c,18)^c>>>3}function ia(c){var a=t(c,1),k=t(c,8);c=T(c,7);return new b(a.a^k.a^c.a,a.b^k.b^c.b)}function ja(c){return w(c,17)^w(c,19)^c>>>10}function ka(c){var a=t(c,19),k=t(c,61);\nc=T(c,6);return new b(a.a^k.a^c.a,a.b^k.b^c.b)}function G(c,a){var b=(c&65535)+(a&65535);return((c>>>16)+(a>>>16)+(b>>>16)&65535)<<16|b&65535}function la(c,a,b,e){var h=(c&65535)+(a&65535)+(b&65535)+(e&65535);return((c>>>16)+(a>>>16)+(b>>>16)+(e>>>16)+(h>>>16)&65535)<<16|h&65535}function H(c,a,b,e,h){var d=(c&65535)+(a&65535)+(b&65535)+(e&65535)+(h&65535);return((c>>>16)+(a>>>16)+(b>>>16)+(e>>>16)+(h>>>16)+(d>>>16)&65535)<<16|d&65535}function ma(c,a){var d,e,h;d=(c.b&65535)+(a.b&65535);e=(c.b>>>16)+\n(a.b>>>16)+(d>>>16);h=(e&65535)<<16|d&65535;d=(c.a&65535)+(a.a&65535)+(e>>>16);e=(c.a>>>16)+(a.a>>>16)+(d>>>16);return new b((e&65535)<<16|d&65535,h)}function na(c,a,d,e){var h,n,g;h=(c.b&65535)+(a.b&65535)+(d.b&65535)+(e.b&65535);n=(c.b>>>16)+(a.b>>>16)+(d.b>>>16)+(e.b>>>16)+(h>>>16);g=(n&65535)<<16|h&65535;h=(c.a&65535)+(a.a&65535)+(d.a&65535)+(e.a&65535)+(n>>>16);n=(c.a>>>16)+(a.a>>>16)+(d.a>>>16)+(e.a>>>16)+(h>>>16);return new b((n&65535)<<16|h&65535,g)}function oa(c,a,d,e,h){var n,g,l;n=(c.b&\n65535)+(a.b&65535)+(d.b&65535)+(e.b&65535)+(h.b&65535);g=(c.b>>>16)+(a.b>>>16)+(d.b>>>16)+(e.b>>>16)+(h.b>>>16)+(n>>>16);l=(g&65535)<<16|n&65535;n=(c.a&65535)+(a.a&65535)+(d.a&65535)+(e.a&65535)+(h.a&65535)+(g>>>16);g=(c.a>>>16)+(a.a>>>16)+(d.a>>>16)+(e.a>>>16)+(h.a>>>16)+(n>>>16);return new b((g&65535)<<16|n&65535,l)}function B(c,a){return new b(c.a^a.a,c.b^a.b)}function A(c){var a=[],d;if(\"SHA-1\"===c)a=[1732584193,4023233417,2562383102,271733878,3285377520];else if(0===c.lastIndexOf(\"SHA-\",0))switch(a=\n[3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428],d=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],c){case \"SHA-224\":break;case \"SHA-256\":a=d;break;case \"SHA-384\":a=[new b(3418070365,a[0]),new b(1654270250,a[1]),new b(2438529370,a[2]),new b(355462360,a[3]),new b(1731405415,a[4]),new b(41048885895,a[5]),new b(3675008525,a[6]),new b(1203062813,a[7])];break;case \"SHA-512\":a=[new b(d[0],4089235720),new b(d[1],2227873595),\nnew b(d[2],4271175723),new b(d[3],1595750129),new b(d[4],2917565137),new b(d[5],725511199),new b(d[6],4215389547),new b(d[7],327033209)];break;default:throw Error(\"Unknown SHA variant\");}else if(0===c.lastIndexOf(\"SHA3-\",0)||0===c.lastIndexOf(\"SHAKE\",0))for(c=0;5>c;c+=1)a[c]=[new b(0,0),new b(0,0),new b(0,0),new b(0,0),new b(0,0)];else throw Error(\"No SHA variants supported\");return a}function K(c,a){var b=[],e,d,n,g,l,p,f;e=a[0];d=a[1];n=a[2];g=a[3];l=a[4];for(f=0;80>f;f+=1)b[f]=16>f?c[f]:y(b[f-\n3]^b[f-8]^b[f-14]^b[f-16],1),p=20>f?H(y(e,5),d&n^~d&g,l,1518500249,b[f]):40>f?H(y(e,5),d^n^g,l,1859775393,b[f]):60>f?H(y(e,5),U(d,n,g),l,2400959708,b[f]):H(y(e,5),d^n^g,l,3395469782,b[f]),l=g,g=n,n=y(d,30),d=e,e=p;a[0]=G(e,a[0]);a[1]=G(d,a[1]);a[2]=G(n,a[2]);a[3]=G(g,a[3]);a[4]=G(l,a[4]);return a}function Z(c,a,b,e){var d;for(d=(a+65>>>9<<4)+15;c.length<=d;)c.push(0);c[a>>>5]|=128<<24-a%32;a+=b;c[d]=a&4294967295;c[d-1]=a/4294967296|0;a=c.length;for(d=0;d<a;d+=16)e=K(c.slice(d,d+16),e);return e}function L(c,\na,k){var e,h,n,g,l,p,f,m,q,u,r,t,v,w,y,A,z,x,F,B,C,D,E=[],J;if(\"SHA-224\"===k||\"SHA-256\"===k)u=64,t=1,D=Number,v=G,w=la,y=H,A=ha,z=ja,x=da,F=fa,C=U,B=aa,J=d;else if(\"SHA-384\"===k||\"SHA-512\"===k)u=80,t=2,D=b,v=ma,w=na,y=oa,A=ia,z=ka,x=ea,F=ga,C=ca,B=ba,J=V;else throw Error(\"Unexpected error in SHA-2 implementation\");k=a[0];e=a[1];h=a[2];n=a[3];g=a[4];l=a[5];p=a[6];f=a[7];for(r=0;r<u;r+=1)16>r?(q=r*t,m=c.length<=q?0:c[q],q=c.length<=q+1?0:c[q+1],E[r]=new D(m,q)):E[r]=w(z(E[r-2]),E[r-7],A(E[r-15]),E[r-\n16]),m=y(f,F(g),B(g,l,p),J[r],E[r]),q=v(x(k),C(k,e,h)),f=p,p=l,l=g,g=v(n,m),n=h,h=e,e=k,k=v(m,q);a[0]=v(k,a[0]);a[1]=v(e,a[1]);a[2]=v(h,a[2]);a[3]=v(n,a[3]);a[4]=v(g,a[4]);a[5]=v(l,a[5]);a[6]=v(p,a[6]);a[7]=v(f,a[7]);return a}function D(c,a){var d,e,h,n,g=[],l=[];if(null!==c)for(e=0;e<c.length;e+=2)a[(e>>>1)%5][(e>>>1)/5|0]=B(a[(e>>>1)%5][(e>>>1)/5|0],new b(c[e+1],c[e]));for(d=0;24>d;d+=1){n=A(\"SHA3-\");for(e=0;5>e;e+=1){h=a[e][0];var p=a[e][1],f=a[e][2],m=a[e][3],q=a[e][4];g[e]=new b(h.a^p.a^f.a^\nm.a^q.a,h.b^p.b^f.b^m.b^q.b)}for(e=0;5>e;e+=1)l[e]=B(g[(e+4)%5],S(g[(e+1)%5],1));for(e=0;5>e;e+=1)for(h=0;5>h;h+=1)a[e][h]=B(a[e][h],l[e]);for(e=0;5>e;e+=1)for(h=0;5>h;h+=1)n[h][(2*e+3*h)%5]=S(a[e][h],W[e][h]);for(e=0;5>e;e+=1)for(h=0;5>h;h+=1)a[e][h]=B(n[e][h],new b(~n[(e+1)%5][h].a&n[(e+2)%5][h].a,~n[(e+1)%5][h].b&n[(e+2)%5][h].b));a[0][0]=B(a[0][0],X[d])}return a}var d,V,W,X;d=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,\n1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,\n2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];V=[new b(d[0],3609767458),new b(d[1],602891725),new b(d[2],3964484399),new b(d[3],2173295548),new b(d[4],4081628472),new b(d[5],3053834265),new b(d[6],2937671579),new b(d[7],3664609560),new b(d[8],2734883394),new b(d[9],1164996542),new b(d[10],1323610764),new b(d[11],3590304994),new b(d[12],4068182383),new b(d[13],991336113),new b(d[14],633803317),new b(d[15],3479774868),new b(d[16],2666613458),new b(d[17],944711139),new b(d[18],2341262773),\nnew b(d[19],2007800933),new b(d[20],1495990901),new b(d[21],1856431235),new b(d[22],3175218132),new b(d[23],2198950837),new b(d[24],3999719339),new b(d[25],766784016),new b(d[26],2566594879),new b(d[27],3203337956),new b(d[28],1034457026),new b(d[29],2466948901),new b(d[30],3758326383),new b(d[31],168717936),new b(d[32],1188179964),new b(d[33],1546045734),new b(d[34],1522805485),new b(d[35],2643833823),new b(d[36],2343527390),new b(d[37],1014477480),new b(d[38],1206759142),new b(d[39],344077627),\nnew b(d[40],1290863460),new b(d[41],3158454273),new b(d[42],3505952657),new b(d[43],106217008),new b(d[44],3606008344),new b(d[45],1432725776),new b(d[46],1467031594),new b(d[47],851169720),new b(d[48],3100823752),new b(d[49],1363258195),new b(d[50],3750685593),new b(d[51],3785050280),new b(d[52],3318307427),new b(d[53],3812723403),new b(d[54],2003034995),new b(d[55],3602036899),new b(d[56],1575990012),new b(d[57],1125592928),new b(d[58],2716904306),new b(d[59],442776044),new b(d[60],593698344),new b(d[61],\n3733110249),new b(d[62],2999351573),new b(d[63],3815920427),new b(3391569614,3928383900),new b(3515267271,566280711),new b(3940187606,3454069534),new b(4118630271,4000239992),new b(116418474,1914138554),new b(174292421,2731055270),new b(289380356,3203993006),new b(460393269,320620315),new b(685471733,587496836),new b(852142971,1086792851),new b(1017036298,365543100),new b(1126000580,2618297676),new b(1288033470,3409855158),new b(1501505948,4234509866),new b(1607167915,987167468),new b(1816402316,\n1246189591)];X=[new b(0,1),new b(0,32898),new b(2147483648,32906),new b(2147483648,2147516416),new b(0,32907),new b(0,2147483649),new b(2147483648,2147516545),new b(2147483648,32777),new b(0,138),new b(0,136),new b(0,2147516425),new b(0,2147483658),new b(0,2147516555),new b(2147483648,139),new b(2147483648,32905),new b(2147483648,32771),new b(2147483648,32770),new b(2147483648,128),new b(0,32778),new b(2147483648,2147483658),new b(2147483648,2147516545),new b(2147483648,32896),new b(0,2147483649),\nnew b(2147483648,2147516424)];W=[[0,36,3,41,18],[1,44,10,45,2],[62,6,43,15,61],[28,55,25,21,56],[27,20,39,8,14]];\"function\"===typeof define&&define.amd?define(function(){return C}):\"undefined\"!==typeof exports?(\"undefined\"!==typeof module&&module.exports&&(module.exports=C),exports=C):Y.jsSHA=C})(this);\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import jsSHA from 'jssha';\nimport aesjs from 'aes-js';\n\nexport class Crypto {\n    \n    constructor() {\n\n    }\n\n    // <summary>\n    // Encrypt a block using CBC and PKCS7.\n    // </summary>\n    // <param name=\"key\">The key value</param>\n    // <param name=\"data\">The message to encrypt</param>\n    // <returns>Returns the resulting encrypted string data as HEX.</returns>\n    static AesEncrypt (key, data) {\n        let bytes = aesjs.utils.hex.toBytes(key);\n        const iv = [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ];\n        const textBytes = aesjs.padding.pkcs7.pad(aesjs.utils.utf8.toBytes(data));\n        const aesCbc = new aesjs.ModeOfOperation.cbc(bytes, iv);\n        const encryptedBytes = aesCbc.encrypt(textBytes);\n        const encryptedString = aesjs.utils.hex.fromBytes(encryptedBytes);\n\n        return encryptedString;\n    }\n    \n    // <summary>\n    // Decrypt a block using a CBC and PKCS7.\n    // </summary>\n    // <param name=\"key\">The key value</param>\n    // <param name=\"data\">the data to decrypt</param>\n    // <returns>Returns the resulting data decrypted in plaintext.</returns>\n    static AesDecrypt(key, data) {\n        let bytes = aesjs.utils.hex.toBytes(key);\n        const iv = [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ];\n        const encryptedBytes = aesjs.utils.hex.toBytes(data);\n        const aesCbc = new aesjs.ModeOfOperation.cbc(bytes, iv);\n        const decryptedBytes = aesCbc.decrypt(encryptedBytes);\n        const decrypted = aesjs.utils.utf8.fromBytes(aesjs.padding.pkcs7.strip(decryptedBytes));\n    \n        return decrypted;\n    }\n\n    // <summary>\n    // Calculates the HMACSHA256 signature of a message.\n    // </summary>\n    // <param name=\"key\">The Hmac Key as HEX</param>\n    // <param name=\"messageToSign\">The message to sign</param>\n    // <returns>The HMACSHA256 signature as a hex string</returns>\n    static HmacSignature(key, messageToSign) {\n        let shaObj = new jsSHA(\"SHA-256\", \"TEXT\");\n\n        shaObj.setHMACKey(key,'HEX');\n        shaObj.update(messageToSign);\n        \n        return shaObj.getHMAC(\"HEX\");\n    }\n\n\n    /**\n     * This utility function calculates the SHA-256 value in hexadecimal format\n     * @param {String} value the value to be hashed\n     */\n    static GenerateHash(value) {\n        let shaObj = new jsSHA('SHA-256', 'HEX');\n        shaObj.update(value);\n        const shaHash = shaObj.getHash('HEX');\n        return shaHash;\n    }\n}\n","import {Crypto} from './Crypto';\n\n// <summary>\n// Events statically declares the various event names in messages.\n// </summary>\nexport const Events = {\n     PairRequest : \"pair_request\",\n     KeyRequest : \"key_request\",\n     KeyResponse : \"key_response\",\n     KeyCheck : \"key_check\",\n     PairResponse : \"pair_response\",\n     DropKeysAdvice : \"drop_keys\",\n\n     LoginRequest : \"login_request\",\n     LoginResponse : \"login_response\",\n\n     Ping : \"ping\",\n     Pong : \"pong\",\n\n     PurchaseRequest : \"purchase\",\n     PurchaseResponse : \"purchase_response\",\n     CancelTransactionRequest : \"cancel_transaction\",\n     CancelTransactionResponse : \"cancel_response\",\n     GetLastTransactionRequest : \"get_last_transaction\",\n     GetLastTransactionResponse : \"last_transaction\",\n     RefundRequest : \"refund\",\n     RefundResponse : \"refund_response\",\n     SignatureRequired : \"signature_required\",\n     SignatureDeclined : \"signature_decline\",\n     SignatureAccepted : \"signature_accept\",\n     AuthCodeRequired : \"authorisation_code_required\",\n     AuthCodeAdvice : \"authorisation_code_advice\",\n\n     CashoutOnlyRequest : \"cash\",\n     CashoutOnlyResponse : \"cash_response\",\n\n     MotoPurchaseRequest : \"moto_purchase\",\n     MotoPurchaseResponse : \"moto_purchase_response\",\n\n     SettleRequest : \"settle\",\n     SettleResponse : \"settle_response\",\n     SettlementEnquiryRequest : \"settlement_enquiry\",\n     SettlementEnquiryResponse : \"settlement_enquiry_response\",\n\n     SetPosInfoRequest : \"set_pos_info\",\n     SetPosInfoResponse : \"set_pos_info_response\",\n\n     KeyRollRequest : \"request_use_next_keys\",\n     KeyRollResponse : \"response_use_next_keys\",\n\n     Error : \"error\",\n    \n     InvalidHmacSignature : \"_INVALID_SIGNATURE_\",\n\n    // Pay At Table Related Messages\n    PayAtTableGetTableConfig : \"get_table_config\", // incoming. When eftpos wants to ask us for P@T configuration.\n    PayAtTableSetTableConfig : \"set_table_config\", // outgoing. When we want to instruct eftpos with the P@T configuration.\n    PayAtTableGetBillDetails : \"get_bill_details\", // incoming. When eftpos wants to aretrieve the bill for a table.\n    PayAtTableBillDetails : \"bill_details\",        // outgoing. We reply with this when eftpos requests to us get_bill_details.\n    PayAtTableBillPayment : \"bill_payment\",        // incoming. When the eftpos advices \n\n    PrintingRequest : \"print\",\n    PrintingResponse : \"print_response\",\n\n    TerminalStatusRequest : \"get_terminal_status\",\n    TerminalStatusResponse : \"terminal_status\",\n\n    BatteryLevelChanged : \"battery_level_changed\",\n\n    PayAtTableGetOpenTables: \"get_open_tables\",\n    PayAtTableOpenTables: \"open_tables\",\n\n    PayAtTableBillPaymentFlowEnded: \"bill_payment_flow_ended\"\n};\n\nexport const SuccessState = {\n    Unknown: 'Unknown', Success: 'Success', Failed: 'Failed'\n};\n\n// <summary>\n// MessageStamp represents what is required to turn an outgoing Message into Json\n// including encryption and date setting.\n// </summary>\nexport class MessageStamp {\n    constructor(posId, secrets, serverTimeDelta) {\n        this.PosId = posId;\n        this.Secrets = secrets;\n        this.ServerTimeDelta = serverTimeDelta;\n    }\n}\n\n// <summary>\n// MessageEnvelope represents the outer structure of any message that is exchanged\n// between the Pos and the PinPad and vice-versa.\n// See http://www.simplepaymentapi.com/#/api/message-encryption\n// </summary>\nexport class MessageEnvelope {\n    constructor(message, enc, hmac, posId) {\n        // <summary>\n        // The Message field is set only when in Un-encrypted form.\n        // In fact it is the only field in an envelope in the Un-Encrypted form.\n        // </summary>\n        this.Message = message;\n\n        // <summary>\n        // The enc field is set only when in Encrypted form.\n        // It contains the encrypted Json of another MessageEnvelope \n        // </summary>\n        this.Enc = enc;\n\n        // <summary>\n        // The hmac field is set only when in Encrypted form.\n        // It is the signature of the \"enc\" field.\n        // </summary>\n        this.Hmac = hmac;\n\n        // <summary>\n        // The pos_id field is only filled for outgoing Encrypted messages.\n        // </summary>\n        this.PosId = posId;\n    }\n\n    toJSON() {\n        return {\n            message: this.Message,\n            enc: this.Enc,\n            hmac: this.Hmac,\n            pos_id: this.PosId\n        }\n    }\n}\n\n// <summary>\n// Message represents the contents of a Message.\n// See http://www.simplepaymentapi.com/#/api/message-encryption\n// </summary>\nexport class Message {\n    constructor(id, eventName, data, needsEncryption) {\n        this.Id = id;\n        this.EventName = eventName;\n        this.Data = data;\n        this.DateTimeStamp = '';\n        this.PosId = ''; // Pos_id is set here only for outgoing Un-encrypted messages. \n        this.IncommingHmac = ''; // Sometimes the logic around the incoming message might need access to the sugnature, for example in the key_check.\n        this._needsEncryption = needsEncryption; // Denotes whether an outgoing message needs to be encrypted in ToJson()\n        this.DecryptedJson = ''; // Set on an incoming message just so you can have a look at what it looked like in its json form.\n    }\n\n    GetSuccessState() {\n        if(!this.Data || typeof this.Data.success === \"undefined\") {\n            return SuccessState.Unknown;\n        }\n\n        return this.Data.success ? SuccessState.Success : SuccessState.Failed;\n    }\n\n    GetError() {\n        return this.Data.error_reason ? this.Data.error_reason : \"\";\n    }\n\n    GetErrorDetail() {\n        return this.Data.error_detail;\n    }\n\n    GetServerTimeDelta()\n    {\n        let now = Date.now();\n        \n        // Stamp format: 2018-04-19T01:42:38.279\n        let dts = this.DateTimeStamp.split(/[\\-\\+\\. :T]/);\n        let msgTime = new Date(\n            // year, month, date\n            dts[0], dts[1] - 1, dts[2],\n            // hour, minute, second, millis\n            dts[3], dts[4], dts[5], dts[6]\n        ).getTime(); // Local time zone\n\n        return msgTime - now;\n    }\n\n    // Helper method to parse bank date format 20042018 (ddMMyyyy)\n    static ParseBankDate(bankDate) {\n        if(bankDate.length !== 8) return null;\n\n        return new Date(`${bankDate.substr(4,4)}-${bankDate.substr(2,2)}-${bankDate.substr(0,2)}`);\n    }\n\n    // Parses a bank date & time str from \"05Oct17\" / \"05:00\" (\"ddMMMyy/HH:mm\") into date obj\n    static ParseBankDateTimeStr(date, time) {\n        return new Date(`${date.substr(0,2)} ${date.substr(2,3)} ${date.substr(5,2)} ${time}`);\n    }\n\n    static FromJson(msgJson, secrets) {\n        let env = JSON.parse(msgJson);\n\n        if(env.message != null) {\n            let message = new Message(env.message.id, env.message.event, env.message.data, false);\n            message.DecryptedJson = msgJson;\n            return message;\n        }\n\n        if (secrets == null)\n        {\n            // This may happen if we somehow received an encrypted message from eftpos but we're not configered with secrets.\n            // For example, if we cancel the pairing process a little late in the game and we get an encrypted key_check message after we've dropped the keys.\n            return new Message(\"UNKNOWN\", \"NOSECRETS\", null, false);\n        }\n\n        // Its encrypted, verify sig\n        let sig = Crypto.HmacSignature(secrets.HmacKey, env.enc);\n        if (sig.toUpperCase() != env.hmac) {\n            return new Message(\"_\", Events.InvalidHmacSignature, null, false);\n        }\n\n        let decryptedJson = Crypto.AesDecrypt(secrets.EncKey, env.enc);\n\n        try {\n            let decryptedMsg = JSON.parse(decryptedJson);\n\n            let message = new Message(decryptedMsg.message.id, decryptedMsg.message.event, decryptedMsg.message.data, true);\n\n            message.DateTimeStamp = decryptedMsg.message.datetime;\n            message.PosId = decryptedMsg.message.pos_id;\n            message.IncomingHmac = env.hmac; \n            message.DecryptedJson = decryptedJson;\n\n            return message;\n\n        } catch(e) {\n            return new Message(\"UNKNOWN\", \"UNPARSEABLE\", {\"msg\": decryptedJson}, false);\n        }\n    }\n\n    ToJson(stamp) {\n        let now = Date.now();\n        let tzoffset = new Date().getTimezoneOffset() * 60 * 1000;\n        let adjustedTime = new Date(now - tzoffset + stamp.ServerTimeDelta);\n\n        // Format date: \"yyyy-MM-ddTHH:mm:ss.fff\"\n        this.DateTimeStamp = adjustedTime.toISOString().slice(0,-1);\n        this.PosId = stamp.PosId;\n        \n        var envelope = {\n            message: {\n                id: this.Id,\n                event: this.EventName,\n                data: this.Data,\n                datetime: this.DateTimeStamp\n            }\n        };\n\n        if (!this._needsEncryption) {\n            // Unencrypted Messages need PosID inside the message\n            envelope.message.pos_id = this.PosId\n        }\n        this.DecryptedJson = JSON.stringify(envelope);\n\n        if (!this._needsEncryption) {\n            return this.DecryptedJson;\n        }\n\n        let encMsg = Crypto.AesEncrypt(stamp.Secrets.EncKey, this.DecryptedJson);\n        let hmacSig = Crypto.HmacSignature(stamp.Secrets.HmacKey, encMsg);\n        let encrMessageEnvelope = {enc: encMsg, hmac: hmacSig.toUpperCase(), pos_id: stamp.PosId};\n\n        return JSON.stringify(encrMessageEnvelope);\n    }\n}\n","import {SuccessState} from './Messages';\n\n// <summary>\n// Represents the 3 Pairing statuses that the Spi instanxce can be in.\n// </summary>\nexport const SpiStatus = \n{\n    // <summary>\n    // Paired and Connected\n    // </summary>\n    PairedConnected: 'PairedConnected',\n    \n    // <summary>\n    // Paired but trying to establish a connection \n    // </summary>\n    PairedConnecting: 'PairedConnecting',\n    \n    // <summary>\n    // Unpaired\n    // </summary>\n    Unpaired: 'Unpaired'\n};\n\n// <summary>\n// The Spi instance can be in one of these flows at any point in time.\n// </summary>\nexport const SpiFlow = \n{\n    // <summary>\n    // Currently going through the Pairing Process Flow.\n    // Happens during the Unpaired SpiStatus.\n    // </summary>\n    Pairing: 'Pairing',\n    \n    // <summary>\n    // Currently going through the transaction Process Flow.\n    // Cannot happen in the Unpaired SpiStatus.\n    // </summary>\n    Transaction: 'Transaction',\n\n    // <summary>\n    // Not in any of the other states.\n    // </summary>\n    Idle: 'Idle'\n};\n\n// <summary>\n// Represents the Pairing Flow State during the pairing process \n// </summary>\nexport class PairingFlowState\n{\n    constructor(state) {\n        // <summary>\n        // Some text that can be displayed in the Pairing Process Screen\n        // that indicates what the pairing process is up to.\n        // </summary>\n        this.Message = null;\n\n        // <summary>\n        // When true, it means that the EFTPOS is shoing the confirmation code,\n        // and your user needs to press YES or NO on the EFTPOS.\n        // </summary>\n        this.AwaitingCheckFromEftpos = null;\n        \n        // <summary>\n        // When true, you need to display the YES/NO buttons on you pairing screen\n        // for your user to confirm the code.\n        // </summary>\n        this.AwaitingCheckFromPos = null;\n        \n        // <summary>\n        // This is the confirmation code for the pairing process.\n        // </summary>\n        this.ConfirmationCode = null;\n        \n        // <summary>\n        // Indicates whether the Pairing Flow has finished its job.\n        // </summary>\n        this.Finished = null;\n        \n        // <summary>\n        // Indicates whether pairing was successful or not.\n        // </summary>\n        this.Successful = null;\n\n        if(state) {\n            Object.assign(this, state);\n        }\n    }   \n}\n\nexport const TransactionType = \n{\n    Purchase: 'Purchase',\n    Refund: 'Refund',\n    CashoutOnly: 'CashoutOnly',\n    MOTO: 'MOTO',\n    Settle: 'Settle',\n    SettlementEnquiry: 'SettlementEnquiry',\n    GetLastTransaction: 'GetLastTransaction',\n    Preauth: 'Preauth',\n    AccountVerify: 'AccountVerify'\n};\n\n// <summary>\n// Used as a return in the InitiateTx methods to signify whether \n// the transaction was initiated or not, and a reason to go with it.\n// </summary>\nexport class InitiateTxResult\n{\n    constructor(initiated, message)\n    {\n        // <summary>\n        // Whether the tx was initiated.\n        // When true, you can expect updated to your registered callback.\n        // When false, you can retry calling the InitiateX method.\n        // </summary>\n        this.Initiated = initiated;\n\n        // <summary>\n        // Text that gives reason for the Initiated flag, especially in case of false. \n        // </summary>\n        this.Message = message;\n    }\n}\n\n// <summary>\n// Used as a return in calls mid transaction to let you know\n// whether the call was valid or not.\n// These attributes work for COM interop.\n// </summary>\nexport class MidTxResult\n{\n    // <summary>\n    // This default stucture works for COM interop.\n    // </summary>\n    constructor(valid, message)\n    {\n        this.Valid = valid;\n        this.Message = message;\n    }\n}    \n\n// <summary>\n// Represents the State during a TransactionFlow\n// </summary>\nexport class TransactionFlowState\n{\n    constructor(posRefId, type, amountCents, message, msg)\n    {\n        // <summary>\n        //  The id given to this transaction\n        // </summary>\n        this.PosRefId   = posRefId;\n        this.Id         = posRefId; // obsolete, but let's maintain it for now, to mean same as PosRefId.\n\n        // <summary>\n        // Purchase/Refund/Settle/...\n        // </summary>\n        this.Type = type;\n\n        // <summary>\n        // A text message to display on your Transaction Flow Screen\n        // </summary>\n        this.DisplayMessage = msg;\n\n        // <summary>\n        // Amount in cents for this transaction\n        // </summary>\n        this.AmountCents = amountCents;\n\n        // <summary>\n        // Whther the request has been sent to the EFTPOS yet or not.\n        // In the PairedConnecting state, the transaction is initiated\n        // but the request is only sent once the connection is recovered.\n        // </summary>\n        this.RequestSent = false;\n\n        // <summary>\n        // The time when the request was sent to the EFTPOS.\n        // </summary>\n        this.RequestTime = null;\n                \n        // <summary>\n        // The time when we last asked for an update, including the original request at first\n        // </summary>\n        this.LastStateRequestTime = null;\n        \n        // <summary>\n        // The id of the last glt request message that was sent. used to match with the response.\n        // </summary>\n        this.LastGltRequestId = null;\n\n        // <summary>\n        // Whether we're currently attempting to Cancel the transaction.\n        // </summary>\n        this.AttemptingToCancel = null;\n    \n        // <summary>\n        // When this flag is on, you need to display the dignature accept/decline buttons in your \n        // transaction flow screen.\n        // </summary>\n        this.AwaitingSignatureCheck = false;\n\n        // <summary>\n        // When this flag is on, you need to show your user the phone number to call to get the authorisation code.\n        // Then you need to provide your user means to enter that given code and submit it via SubmitAuthCode().\n        // </summary>\n        this.AwaitingPhoneForAuth = null;\n\n        // <summary>\n        // Whether this transaction flow is over or not.\n        // </summary>\n        this.Finished = false;\n\n        // <summary>\n        // The success state of this transaction. Starts off as Unknown.\n        // When finished, can be Success, Failed OR Unknown.\n        // </summary>\n        this.Success = SuccessState.Unknown;\n\n        // <summary>\n        // The response at the end of the transaction. \n        // Might not be present in all edge cases.\n        // You can then turn this Message into the appropriate structure,\n        // such as PurchaseResponse, RefundResponse, etc\n        // </summary>\n        this.Response = null;\n\n        // <summary>\n        // The message the we received from EFTPOS that told us that signature is required.\n        // </summary>\n        this.SignatureRequiredMessage = null;\n    \n        // <summary>\n        // The message the we received from EFTPOS that told us that Phone For Auth is required.\n        // </summary>\n        this.PhoneForAuthRequiredMessage = null;\n\n        // <summary>\n        // The time when the cancel attempt was made.\n        // </summary>\n        this.CancelAttemptTime = null;\n\n        // <summary>\n        // The request message that we are sending/sent to the server.\n        // </summary>\n        this.Request = message;\n\n        // <summary>\n        // Whether we're currently waiting for a Get Last Transaction Response to get an update. \n        // </summary>\n        this.AwaitingGltResponse = null;\n\n        this.GLTResponsePosRefId = null;\n    }\n\n    Sent(msg)\n    {\n        this.RequestSent = true;\n        this.RequestTime = Date.now();\n        this.LastStateRequestTime = Date.now();\n        this.DisplayMessage = msg;\n    }\n\n    Cancelling(msg)\n    {\n        this.AttemptingToCancel = true;\n        this.CancelAttemptTime = Date.now();\n        this.DisplayMessage = msg;\n    }\n\n    CancelFailed(msg)\n    {\n        this.AttemptingToCancel = false;\n        this.DisplayMessage = msg;\n    }\n\n    CallingGlt(gltRequestId)\n    {\n        this.AwaitingGltResponse = true;\n        this.LastStateRequestTime = Date.now();\n        this.LastGltRequestId = gltRequestId;\n    }\n\n    GotGltResponse()\n    {\n        this.AwaitingGltResponse = false;\n    }\n    \n    Failed(response, msg)\n    {\n        this.Success = SuccessState.Failed;\n        this.Finished = true;\n        this.Response = response;\n        this.DisplayMessage = msg;\n    }\n\n    SignatureRequired(spiMessage, msg)\n    {\n        this.SignatureRequiredMessage = spiMessage;\n        this.AwaitingSignatureCheck = true;\n        this.DisplayMessage = msg;\n    }\n\n    SignatureResponded(msg)\n    {\n        this.AwaitingSignatureCheck = false;\n        this.DisplayMessage = msg;\n    }\n    \n    PhoneForAuthRequired(spiMessage, msg)\n    {\n        this.PhoneForAuthRequiredMessage = spiMessage;\n        this.AwaitingPhoneForAuth = true;\n        this.DisplayMessage = msg;\n    }\n    \n    AuthCodeSent(msg)\n    {\n        this.AwaitingPhoneForAuth = false;\n        this.DisplayMessage = msg;\n    }\n\n    Completed(state, response, msg)\n    {\n        this.Success = state;\n        this.Response = response;\n        this.Finished = true;\n        this.AttemptingToCancel = false;\n        this.AwaitingGltResponse = false;\n        this.AwaitingSignatureCheck = false;\n        this.AwaitingPhoneForAuth = false;\n        this.DisplayMessage = msg;\n    }\n\n    UnknownCompleted(msg)\n    {\n        this.Success = SuccessState.Unknown;\n        this.Response = null;\n        this.Finished = true;\n        this.AttemptingToCancel = false;\n        this.AwaitingGltResponse = false;\n        this.AwaitingSignatureCheck = false;\n        this.AwaitingPhoneForAuth = false;\n        this.DisplayMessage = msg;\n    }\n}\n\n// <summary>\n// Used as a return in the SubmitAuthCode method to signify whether Code is valid\n// </summary>\nexport class SubmitAuthCodeResult\n{\n    constructor(validFormat, message)\n    {\n        this.ValidFormat = validFormat;\n\n        // <summary>\n        // Text that gives reason for Invalidity\n        // </summary>\n        this.Message = message;\n    }\n}\n\nexport class SpiConfig\n{\n    constructor() {\n        this.PrintMerchantCopy = false;\n        this.PromptForCustomerCopyOnEftpos = false;\n        this.SignatureFlowOnEftpos = false;\n\n        this.EnabledPrintMerchantCopy = false;\n        this.EnabledPromptForCustomerCopyOnEftpos = false;\n        this.EnabledSignatureFlowOnEftpos = false;\n    }\n\n    AddReceiptConfig(messageData)\n    {\n        if (this.PromptForCustomerCopyOnEftpos && this.EnabledPromptForCustomerCopyOnEftpos)\n        {\n            messageData.prompt_for_customer_copy = this.PromptForCustomerCopyOnEftpos;\n        }\n        if (this.SignatureFlowOnEftpos && this.EnabledSignatureFlowOnEftpos)\n        {\n            messageData.print_for_signature_required_transactions = this.SignatureFlowOnEftpos;\n        }\n        if (this.PrintMerchantCopy && this.EnabledPrintMerchantCopy)\n        {\n            messageData.print_merchant_copy = this.PrintMerchantCopy;\n        }\n        return messageData;\n    }\n\n    ToString()\n    {\n        return `PromptForCustomerCopyOnEftpos:${this.PromptForCustomerCopyOnEftpos} SignatureFlowOnEftpos:${this.SignatureFlowOnEftpos} PrintMerchantCopy: ${this.PrintMerchantCopy}`;\n    }\n}\n\nexport class TransactionOptions\n{\n    constructor() {\n        this._customerReceiptHeader = \"\";\n        this._customerReceiptFooter = \"\";\n        this._merchantReceiptHeader = \"\";\n        this._merchantReceiptFooter = \"\";\n    }\n\n    SetCustomerReceiptHeader(customerReceiptHeader)\n    {\n        this._customerReceiptHeader = customerReceiptHeader;\n    }\n\n    SetCustomerReceiptFooter(customerReceiptFooter)\n    {\n        this._customerReceiptFooter = customerReceiptFooter;\n    }\n    SetMerchantReceiptHeader(merchantReceiptHeader)\n    {\n        this._merchantReceiptHeader = merchantReceiptHeader;\n    }\n    SetMerchantReceiptFooter(merchantReceiptFooter)\n    {\n        this._merchantReceiptFooter = merchantReceiptFooter;\n    }\n    AddOptions(messageData)\n    {\n        messageData.customer_receipt_header = this._customerReceiptHeader;\n        messageData.customer_receipt_footer = this._customerReceiptFooter;\n        messageData.merchant_receipt_header = this._merchantReceiptHeader;\n        messageData.merchant_receipt_footer = this._merchantReceiptFooter;\n\n        return messageData;\n    }\n}","let __RequestIdHelperCounter = 1;\n\nexport class RequestIdHelper {\n    static Id(prefix) {\n        return prefix + __RequestIdHelperCounter++;\n    }\n}\n","import {Events, Message} from './Messages';\nimport {RequestIdHelper} from './RequestIdHelper';\n\n// <summary>\n// Pairing Interaction 1: Outgoing\n// </summary>\nexport class PairRequest {\n    ToMessage() {\n        let data = {padding: true};\n        return new Message(RequestIdHelper.Id(\"pr\"), Events.PairRequest, data, false);\n    }\n}\n\n// Pairing Interaction 2: Incoming\nexport class KeyRequest {\n    constructor(m) {\n        this.RequestId = m.Id;\n        this.Aenc = m.Data.enc.A;\n        this.Ahmac = m.Data.hmac.A;\n    }\n}\n\n// Pairing Interaction 3: Outgoing\nexport class KeyResponse {\n    constructor(requestId, Benc, Bhmac) {\n        this.RequestId = requestId;\n        this.Benc = Benc;\n        this.Bhmac = Bhmac;\n    }\n\n    ToMessage() {\n        let data = {\n            enc: {\n                B: this.Benc\n            },\n            hmac: {\n                B: this.Bhmac\n            }\n        };\n\n        return new Message(this.RequestId, Events.KeyResponse, data, false);\n    }\n}\n\n// Pairing Interaction 4: Incoming\nexport class KeyCheck {\n    constructor(m) {\n        this.ConfirmationCode = m.IncomingHmac.substring(0,6);\n    }\n}\n\n// Pairing Interaction 5: Incoming\nexport class PairResponse {\n    constructor(m) {\n        this.Success = m.Data.success;\n    }\n}\n\n// Holder class for Secrets and KeyResponse, so that we can use them together in method signatures.\nexport class SecretsAndKeyResponse {\n    constructor(secrets, keyResponse) {\n        this.Secrets = secrets;\n        this.KeyResponse = keyResponse;\n    }\n}\n\nexport class DropKeysRequest\n{\n    ToMessage()\n    {\n        return new Message(RequestIdHelper.Id(\"drpkys\"), Events.DropKeysAdvice, null, true);\n    }\n}","export class Secrets {\n    constructor(encKey, hmacKey) {\n        this.EncKey     = encKey;\n        this.HmacKey    = hmacKey;\n    }\n\n    static save(EncKey, HmacKey) {\n        localStorage.setItem('EncKey', EncKey);\n        localStorage.setItem('HmacKey', HmacKey);\n    }\n\n    static restore() {\n        return new Secrets(localStorage.getItem('EncKey'), localStorage.getItem('HmacKey'));\n    }\n\n    static isSaved() {\n        return localStorage.getItem('EncKey') && localStorage.getItem('HmacKey');\n    }\n\n    static Reset() {\n        localStorage.removeItem('EncKey');\n        localStorage.removeItem('HmacKey');\n    }\n}\n","import BN from 'bn.js';\n\n// This creates the private and public keys for diffie-hellman (https://en.wikipedia.org/wiki/Diffie%E2%80%93Hellman_key_exchange#Cryptographic_explanation)\n// REQUIREMENTS: bn.js\n// ASSUMPTIONS: Inputs to the functions are hexadecimal strings\n\n// <summary>\n// This class implements the Diffie-Hellman algorithm using BigIntegers.\n// It can do the 3 main things:\n// 1. Generate a random Private Key for you.\n// 2. Generate your Public Key based on your Private Key.\n// 3. Generate the Secret given their Public Key and your Private Key\n// p and g are the shared constants for the algorithm, aka primeP and primeG.\n// </summary>\nexport class DiffieHellman {\n\n    constructor () {\n\n    }\n\n    // <summary>\n    // Generates a random Private Key that you can use.\n    // </summary>\n    // <param name=\"p\"></param>\n    // <returns>Random Private Key</returns>\n    RandomPrivateKey(maxValue) {\n        let maxValueBN      = new BN(maxValue);\n        let shiftDistance   = Math.floor((Math.random() * 1000) + 1);\n        let randBitInt      = maxValueBN.shrn(shiftDistance); // Right shift divides by a power of 2\n        let min             = new BN(2);\n\n        if(randBitInt.cmp(min) == -1) {\n            return min;\n        }\n\n        return randBitInt;\n    }\n\n    // <summary>\n    // Calculates the Public Key from a Private Key.\n    // </summary>\n    // <param name=\"p\"></param>\n    // <param name=\"g\"></param>\n    // <param name=\"privateKey\"></param>\n    // <returns>Public Key (Hex)</returns>\n    PublicKey(p, g, privateKey) {\n        const aHex = new BN(privateKey, 16);\n        const gHex = new BN(g, 16);\n        const montPrime = BN.mont(new BN(p, 16));\n        const gRed = gHex.toRed(montPrime);\n        const secret = gRed.redPow(aHex).fromRed().toString(16);\n\n        return secret;  \n    }\n\n    // <summary>\n    // Calculates the shared secret given their Public Key (A) and your Private Key (b)\n    // </summary>\n    // <param name=\"p\"></param>\n    // <param name=\"theirPublicKey\"></param>\n    // <param name=\"yourPrivateKey\"></param>\n    // <returns></returns>\n    Secret(p, theirPublicKey, yourPrivateKey) {\n        const bHex = new BN(theirPublicKey, 16);\n        const AHex = new BN(yourPrivateKey, 16);\n        const montPrime = BN.mont(new BN(p, 16));\n        const BRed = bHex.toRed(montPrime);\n\n        return BRed.redPow(AHex).fromRed().toString(16).toUpperCase();\n    }\n\n}\n","import {PairRequest, KeyResponse, SecretsAndKeyResponse} from './Pairing';\nimport {Secrets} from './Secrets';\nimport {Crypto} from './Crypto';\nimport {DiffieHellman} from './DiffieHellman';\n\n// This is the generator used for diffie-hellman in 2048-bit MODP Group 14 as per (https://tools.ietf.org/html/rfc3526#section-3)\nexport const GENERATOR = 2;\n\n// This is the prime used for diffie-hellman using 2048-bit MODP Group 14 as per (https://tools.ietf.org/html/rfc3526#section-3)\nexport const GROUP14_2048_BIT_MODP = 'FFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3DC2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F83655D23DCA3AD961C62F356208552BB9ED529077096966D670C354E4ABC9804F1746C08CA18217C32905E462E36CE3BE39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9DE2BCBF6955817183995497CEA956AE515D2261898FA051015728E5A8AACAA68FFFFFFFFFFFFFFFF';\n\n// <summary>\n// This static class helps you with the pairing process as documented here:\n// http://www.simplepaymentapi.com/#/api/pairing-process\n// </summary>\nexport class PairingHelper {\n    // <summary>\n    // Generates a pairing Request.\n    // </summary>\n    // <returns>New PairRequest</returns>\n    static NewPairRequest() {\n        return new PairRequest();\n    }\n\n    // <summary>\n    // Calculates/Generates Secrets and KeyResponse given an incoming KeyRequest.\n    // </summary>\n    // <param name=\"keyRequest\"></param>\n    // <returns>Secrets and KeyResponse to send back.</returns>\n    GenerateSecretsAndKeyResponse(keyRequest) {\n        let encPubAndSec = this._calculateMyPublicKeyAndSecret(keyRequest.Aenc);\n        let Benc = encPubAndSec.MyPublicKey;\n        let Senc = encPubAndSec.SharedSecretKey;\n\n        let hmacPubAndSec = this._calculateMyPublicKeyAndSecret(keyRequest.Ahmac);\n        let Bhmac = hmacPubAndSec.MyPublicKey;\n        let Shmac = hmacPubAndSec.SharedSecretKey;\n        \n        let secrets = new Secrets(Senc, Shmac);\n        let keyResponse = new KeyResponse(keyRequest.RequestId, Benc, Bhmac);\n\n        return new SecretsAndKeyResponse(secrets, keyResponse);\n    }\n\n    // <summary>\n    // Turns an incoming \"A\" value from the PinPad into the outgoing \"B\" value \n    // and the secret value using DiffieHelmman helper.\n    // </summary>\n    // <param name=\"theirPublicKey\">The incoming A value</param>\n    // <returns>Your B value and the Secret</returns>\n    _calculateMyPublicKeyAndSecret(theirPublicKey) {\n\n        let diffieHellman = new DiffieHellman();\n        let myPrivateBI = diffieHellman.RandomPrivateKey(GROUP14_2048_BIT_MODP);\n        let myPublicBI = diffieHellman.PublicKey(GROUP14_2048_BIT_MODP, GENERATOR, myPrivateBI);\n        let secretBI = diffieHellman.Secret(GROUP14_2048_BIT_MODP, theirPublicKey, myPrivateBI);\n\n        let secret = this.DHSecretToSPISecret(secretBI);\n\n        return new PublicKeyAndSecret(myPublicBI, secret);\n    }\n\n    // <summary>\n    // Converts the DH secret BigInteger into the hex-string to be used as the secret.\n    // There are some \"gotchyas\" here which is why this piece of work is abstracted so it can be tested separately.\n    // See: http://www.simplepaymentapi.com/#/api/pairing-process\n    // </summary>\n    // <param name=\"secretBI\">Secret as BigInteger</param>\n    // <returns>Secret as Hex-String</returns>\n    DHSecretToSPISecret(secret)\n    {      \n        // If the calculated hexadecimal secret doesn't have an even number of characters, we add an extra 0 to the start. This allows SHA-256 to operate on the hexadecimal secret as if it were a hexadecimal representation of a string.\n        if (secret.length % 2 === 1){\n            secret = '0' + secret;\n        }\n\n        secret = secret.padStart(512, '0');\n\n        // We sha256 that byte array and return the hex string result\n        return Crypto.GenerateHash(secret);\n    }\n}\n\n// <summary>\n// Internal Holder class for Public and Secret, so that we can use them together in method signatures. \n// </summary>\nexport class PublicKeyAndSecret {\n    constructor(myPublicKey, sharedSecretKey) {\n        this.MyPublicKey = myPublicKey;\n        this.SharedSecretKey = sharedSecretKey;\n    }\n}","export const ConnectionState = {\n    Disconnected: 'Disconnected',\n    Connecting: 'Connecting',\n    Connected: 'Connected'\n};\n\nexport const SPI_PROTOCOL   = 'spi.2.5.0';\n\nexport class ConnectionStateEventArgs\n{\n    constructor(connectionState) {\n        this.ConnectionState = connectionState;\n    }\n}\n\nexport class MessageEventArgs\n{\n    constructor(message) {\n        this.Message = message;\n    }\n}\n\nexport class Connection {\n    constructor() {\n        this.Address    = null;\n        this.Connected  = false;\n        this.State      = ConnectionState.Disconnected;\n        this.SpiProtocol = SPI_PROTOCOL;\n        this._ws        = null;\n\n        if(typeof WebSocket === 'undefined') {\n            throw new Error('Environment does not support WebSockets');\n        }\n    }\n\n    Connect(UseSecureWebSockets) {\n        if(this.State === ConnectionState.Connected || this.State === ConnectionState.Connecting) {\n            // already connected or connecting. disconnect first.\n            return;\n        }\n\n        this.State = ConnectionState.Connecting;\n\n        //Create a new socket instance specifying the url, SPI protocol and Websocket to use.\n        //The will create a TCP/IP socket connection to the provided URL and perform HTTP websocket negotiation\n        this._ws           = new WebSocket(this.Address, this.SpiProtocol);\n        this._ws.onopen    = () => this.pollWebSocketConnection();\n        this._ws.onmessage = (payload) => this.onMessageReceived(payload);\n        this._ws.onclose   = () => this.onClosed();\n        this._ws.onerror   = (err) => this.onError(err);\n\n        document.dispatchEvent(new CustomEvent('ConnectionStatusChanged', {detail: new ConnectionStateEventArgs(ConnectionState.Connecting)}));\n    }\n\n    Disconnect() {\n        if (this.State == ConnectionState.Disconnected) return;\n\n        if(this._ws && this._ws.readyState != this._ws.CLOSED) {\n            this._ws.close();\n        }\n\n        if (this._ws) {\n            this._ws.onopen    = null;\n            this._ws.onmessage = null;\n            this._ws.onclose   = null;\n            this._ws.onerror   = null;\n        }\n\n        this.onClosed();\n    }\n\n    Send(message) {\n        this._ws.send(message);\n    }\n\n    onOpened() {\n        this.State = ConnectionState.Connected;\n        this.Connected = true;\n        document.dispatchEvent(new CustomEvent('ConnectionStatusChanged', {detail: new ConnectionStateEventArgs(ConnectionState.Connected)}));\n    }\n\n    onClosed() {\n        this.Connected = false;\n        this.State = ConnectionState.Disconnected;\n        this._ws = null;\n        document.dispatchEvent(new CustomEvent('ConnectionStatusChanged', {detail: new ConnectionStateEventArgs(ConnectionState.Disconnected)}));\n    }\n\n    pollWebSocketConnection(count = 0) {\n        \n        if(this._ws.readyState === this._ws.OPEN) {\n            this.onOpened();\n            return true;\n        } else if(count < 25) {\n            count++;\n            setTimeout(() => this.pollWebSocketConnection(count), 200);\n        } else {\n            this.Disconnect();\n            return false;\n        }\n    }\n\n    onMessageReceived(message) {\n        document.dispatchEvent(new CustomEvent('MessageReceived', {detail: new MessageEventArgs(message.data)}));\n    }\n\n    onError(err) {\n        document.dispatchEvent(new CustomEvent('ErrorReceived', {detail: new MessageEventArgs(err)}));\n    }\n}\n","import {Events, SuccessState, Message} from './Messages';\nimport {RequestIdHelper} from './RequestIdHelper';\nimport {SpiConfig, TransactionOptions} from './SpiModels';\n\nexport class PurchaseRequest {\n    constructor(amountCents, posRefId) {\n        this.PosRefId = posRefId;\n        this.PurchaseAmount = amountCents;\n        this.TipAmount = 0;\n        this.CashoutAmount = 0;\n        this.PromptForCashout = false;\n        this.SurchargeAmount = 0;\n        this.Config = new SpiConfig();\n        this.Options = new TransactionOptions();\n\n        // Library Backwards Compatibility\n        this.Id = posRefId;\n        this.AmountCents = amountCents;\n    }\n\n    AmountSummary()\n    {\n        return `Purchase: ${(this.PurchaseAmount / 100.0).toFixed(2)}; \n            Tip: ${(this.TipAmount / 100.0).toFixed(2)}; \n            Cashout: ${(this.CashoutAmount / 100.0).toFixed(2)};`;\n    }\n\n    ToMessage() {\n        let data = {\n            pos_ref_id: this.PosRefId,\n            purchase_amount: this.PurchaseAmount,\n            tip_amount: this.TipAmount,\n            cash_amount: this.CashoutAmount,\n            prompt_for_cashout: this.PromptForCashout, \n            surcharge_amount: this.SurchargeAmount\n        };\n\n        this.Config.EnabledPrintMerchantCopy = true;\n        this.Config.EnabledPromptForCustomerCopyOnEftpos = true;\n        this.Config.EnabledSignatureFlowOnEftpos = true;\n        this.Config.AddReceiptConfig(data);\n        this.Options.AddOptions(data);\n        return new Message(RequestIdHelper.Id(\"prchs\"), Events.PurchaseRequest, data, true);\n    }\n}\n\nexport class PurchaseResponse\n{\n    constructor(m)\n    {\n        this._m = m;\n        this.RequestId = m.Id;\n        this.PosRefId = m.Data.pos_ref_id;\n        this.SchemeName = m.Data.scheme_name;\n        this.SchemeAppName = m.Data.scheme_name;\n        this.Success = m.GetSuccessState() == SuccessState.Success;\n    }\n\n    GetRRN()\n    {\n        return this._m.Data.rrn;\n    }\n\n    GetPurchaseAmount()\n    {\n        return this._m.Data.purchase_amount;\n    }\n\n    GetTipAmount()\n    {\n        return this._m.Data.tip_amount || 0;\n    }\n\n    GetSurchargeAmount()\n    {\n        return this._m.Data.surcharge_amount || 0;\n    }\n\n    GetCashoutAmount()\n    {\n        return this._m.Data.cash_amount;\n    }\n\n    GetBankNonCashAmount()\n    {\n        return this._m.Data.bank_noncash_amount;\n    }\n\n    GetBankCashAmount()\n    {\n        return this._m.Data.bank_cash_amount;\n    }\n\n    GetCustomerReceipt()\n    {\n        return this._m.Data.customer_receipt || \"\";\n    }\n\n    GetMerchantReceipt()\n    {\n        return this._m.Data.merchant_receipt || \"\";\n    }\n\n    GetResponseText()\n    {\n        return this._m.Data.host_response_text || \"\";\n    }\n\n    GetResponseCode()\n    {\n        return this._m.Data.host_response_code;\n    }\n    \n    GetTerminalReferenceId()\n    {\n        return this._m.Data.terminal_ref_id;\n    }\n\n    GetCardEntry()\n    {\n        return this._m.Data.card_entry;\n    }\n    \n    GetAccountType()\n    {\n        return this._m.Data.account_type;\n    }\n\n    GetAuthCode()\n    {\n        return this._m.Data.auth_code;\n    }\n\n    GetBankDate()\n    {\n        return this._m.Data.bank_date;\n    }\n\n    GetBankTime()\n    {\n        return this._m.Data.bank_time;\n    }\n    \n    GetMaskedPan()\n    {\n        return this._m.Data.masked_pan;\n    }\n    \n    GetTerminalId()\n    {\n        return this._m.Data.terminal_id;\n    }\n\n    WasMerchantReceiptPrinted()\n    {\n        return this._m.Data.merchant_receipt_printed;\n    }\n\n    WasCustomerReceiptPrinted()\n    {\n        return this._m.Data.customer_receipt_printed;\n    }\n    \n    GetSettlementDate()\n    {\n        //\"bank_settlement_date\":\"20042018\"\n        var dateStr = this._m.Data.bank_settlement_date;\n        if (!dateStr) return null;\n        return Message.ParseBankDate(dateStr);\n    }\n\n    GetResponseValue(attribute)\n    {\n        return this._m.Data[attribute];\n    }\n\n    ToPaymentSummary()\n    {\n        return {\n            account_type: this.GetAccountType(),\n            auth_code: this.GetAuthCode(),\n            bank_date: this.GetBankDate(),\n            bank_time: this.GetBankTime(),\n            host_response_code: this.GetResponseCode(),\n            host_response_text: this.GetResponseText(),\n            masked_pan: this.GetMaskedPan(),\n            purchase_amount: this.GetPurchaseAmount(),\n            rrn: this.GetRRN(),\n            scheme_name: this.SchemeName,\n            terminal_id: this.GetTerminalId(),\n            terminal_ref_id: this.GetTerminalReferenceId(),\n            tip_amount: this.GetTipAmount(),\n            surcharge_amount: this.GetSurchargeAmount()\n        };\n    }\n}\n\nexport class CancelTransactionRequest\n{\n    \n    ToMessage()\n    {\n        return new Message(RequestIdHelper.Id(\"ctx\"), Events.CancelTransactionRequest, null, true);\n    }\n}\n\nexport class CancelTransactionResponse\n{\n    constructor(m)\n    {\n        this._m = m;\n        this.PosRefId = this._m.Data.pos_ref_id;\n        this.Success = this._m.GetSuccessState() == SuccessState.Success;\n    }\n\n    GetErrorReason()\n    {\n        return this._m.Data.error_reason;\n    }\n\n    GetErrorDetail()\n    {\n        return this._m.Data.error_detail;\n    }\n\n    GetResponseValueWithAttribute(attribute)\n    {\n        return this._m.Data[attribute];\n    }\n}\n\nexport class GetLastTransactionRequest\n{\n    ToMessage()\n    {\n        return new Message(RequestIdHelper.Id(\"glt\"), Events.GetLastTransactionRequest, null, true);\n    }\n}\n\nexport class GetLastTransactionResponse\n{\n    constructor(m)\n    {\n        this._m = m;\n    }\n\n    WasRetrievedSuccessfully()\n    {\n        // We can't rely on checking \"success\" flag or \"error\" fields here,\n        // as retrieval may be successful, but the retrieved transaction was a fail.\n        // So we check if we got back an ResponseCode.\n        // (as opposed to say an operation_in_progress_error)\n        return !!this.GetResponseCode();\n    }\n\n    WasTimeOutOfSyncError()\n    {\n        return this._m.GetError().startsWith(\"TIME_OUT_OF_SYNC\");\n    }\n\n    WasOperationInProgressError()\n    {\n        return this._m.GetError().startsWith(\"OPERATION_IN_PROGRESS\");\n    }\n\n    IsWaitingForSignatureResponse()\n    {\n        return this._m.GetError().startsWith(\"OPERATION_IN_PROGRESS_AWAITING_SIGNATURE\");\n    }\n\n    IsWaitingForAuthCode()\n    {\n        return this._m.GetError().startsWith(\"OPERATION_IN_PROGRESS_AWAITING_PHONE_AUTH_CODE\");\n    }\n    \n    IsStillInProgress(posRefId)\n    {\n        return this.WasOperationInProgressError() && (this.GetPosRefId() == posRefId || this.GetPosRefId() == null);\n    }\n\n    GetSuccessState()\n    {\n        return this._m.GetSuccessState();\n    }\n\n    WasSuccessfulTx()\n    {\n        return this._m.GetSuccessState() == SuccessState.Success;\n    }\n\n    GetTxType()\n    {\n        return this._m.Data.transaction_type;\n    }\n\n    GetPosRefId()\n    {\n        return this._m.Data.pos_ref_id;\n    }\n\n    GetBankNonCashAmount()\n    {\n        return this._m.Data.bank_noncash_amount;\n    }\n\n    GetSchemeApp()\n    {\n        return this._m.Data.scheme_name;\n    }\n\n    GetSchemeName()\n    {\n        return this._m.Data.scheme_name;\n    }\n\n    GetAmount()\n    {\n        return this._m.Data.amount_purchase;\n    }\n\n    GetTransactionAmount()\n    {\n        return this._m.Data.amount_transaction_type;\n    }\n\n    GetBankDateTimeString()\n    {\n        var ds = this._m.Data.bank_date + this._m.Data.bank_time;\n        return ds;\n    }\n\n    GetRRN()\n    {\n        return this._m.Data.rrn;\n    }\n    \n    GetResponseText()\n    {\n        return this._m.Data.host_response_text | \"\";\n    }\n\n    GetResponseCode()\n    {\n        return this._m.Data.host_response_code;\n    }\n\n    // <summary>\n    // There is a bug, VSV-920, whereby the customer_receipt is missing from a glt response.\n    // The current recommendation is to use the merchant receipt in place of it if required.\n    // This method modifies the underlying incoming message data by copying\n    // the merchant receipt into the customer receipt only if there \n    // is a merchant_receipt and there is not a customer_receipt.   \n    // </summary>\n    CopyMerchantReceiptToCustomerReceipt()\n    {\n        var cr = this._m.Data.customer_receipt;\n        var mr = this._m.Data.merchant_receipt;\n        if (mr != \"\" && !(cr))\n        {\n            this._m.Data.customer_receipt = mr;\n        }\n    }\n}\n\nexport class RefundRequest\n{\n    constructor(amountCents, posRefId, suppressMerchantPassword)\n    {\n        this.AmountCents = amountCents;\n        this.Id = RequestIdHelper.Id(\"refund\");\n        this.PosRefId = posRefId;\n        this.SuppressMerchantPassword = suppressMerchantPassword;\n        this.Config = new SpiConfig();\n        this.Options = new TransactionOptions();\n    }\n    \n    ToMessage()\n    {\n        let data = {\n            refund_amount: this.AmountCents, \n            pos_ref_id: this.PosRefId,\n            suppress_merchant_password: this.SuppressMerchantPassword\n        };\n        \n        this.Config.EnabledPrintMerchantCopy = true;\n        this.Config.EnabledPromptForCustomerCopyOnEftpos = true;\n        this.Config.EnabledSignatureFlowOnEftpos = true;\n        this.Config.AddReceiptConfig(data);\n        this.Options.AddOptions(data);\n        return new Message(RequestIdHelper.Id(\"refund\"), Events.RefundRequest, data, true);\n    }\n}\n\nexport class RefundResponse\n{\n    constructor(m)\n    {\n        this._m = m;\n        this.RequestId = m.Id;\n        this.PosRefId = m.Data.pos_ref_id;\n        this.SchemeName = m.Data.scheme_name;\n        this.SchemeAppName = m.Data.scheme_name;\n        this.Success = m.GetSuccessState() == SuccessState.Success;\n    }\n\n    GetRefundAmount()\n    {\n        return this._m.Data.refund_amount;\n    }\n\n    GetRRN()\n    {\n        return this._m.Data.rrn;\n    }\n\n    GetCustomerReceipt()\n    {\n        return this._m.Data.customer_receipt || \"\";\n    }\n\n    GetMerchantReceipt()\n    {\n        return this._m.Data.merchant_receipt;\n    }\n    \n    GetResponseText()\n    {\n        return this._m.Data.host_response_text || \"\";\n    }\n\n    GetResponseCode()\n    {\n        return this._m.Data.host_response_code || \"\";\n    }\n\n\n    GetTerminalReferenceId()\n    {\n        return this._m.Data.terminal_ref_id || \"\";\n    }\n    GetCardEntry()\n    {\n        return this._m.Data.card_entry || \"\";\n    }\n    GetAccountType()\n    {\n        return this._m.Data.account_type || \"\";\n    }\n    GetAuthCode()\n    {\n        return this._m.Data.auth_code || \"\";\n    }\n    GetBankDate()\n    {\n        return this._m.Data.bank_date || \"\";\n    }\n    GetBankTime()\n    {\n        return this._m.Data.bank_time || \"\";\n    }\n    GetMaskedPan()\n    {\n        return this._m.Data.masked_pan || \"\";\n    }\n    GetTerminalId()\n    {\n        return this._m.Data.terminal_id || \"\";\n    }\n    WasMerchantReceiptPrinted()\n    {\n        return this._m.Data.merchant_receipt_printed;\n    }\n    WasCustomerReceiptPrinted()\n    {\n        return this._m.Data.customer_receipt_printed;\n    }\n    GetSettlementDate()\n    {\n        //\"bank_settlement_date\":\"20042018\"\n        var dateStr = this._m.Data.bank_settlement_date;\n        if (!dateStr) return null;\n        return Message.ParseBankDate(dateStr);\n    }\n\n    GetResponseValue(attribute)\n    {\n        return this._m.Data[attribute];\n    }\n}\n\nexport class SignatureRequired\n{\n    constructor(m)\n    {\n        this.RequestId = m.Id;\n        this.PosRefId = m.Data.pos_ref_id;\n        this._receiptToSign = m.Data.merchant_receipt;\n    }\n    \n    SignatureRequired(posRefId, requestId, receiptToSign)\n    {\n        this.RequestId = requestId;\n        this.PosRefId = posRefId;\n        this._receiptToSign = receiptToSign;\n    }\n\n    GetMerchantReceipt()\n    {\n        return this._receiptToSign;\n    }\n}\n\nexport class SignatureDecline\n{\n    constructor(posRefId)\n    {\n        this.PosRefId = posRefId;\n    }\n\n    ToMessage()\n    {\n        var data = {\n            pos_ref_id: this.PosRefId\n        };\n        return new Message(RequestIdHelper.Id(\"sigdec\"), Events.SignatureDeclined, data, true);\n    }\n}\n\nexport class SignatureAccept\n{\n    constructor(posRefId)\n    {\n        this.PosRefId = posRefId;\n    }\n\n    ToMessage()\n    {\n        var data = {\n            pos_ref_id: this.PosRefId\n        };\n        return new Message(RequestIdHelper.Id(\"sigacc\"), Events.SignatureAccepted, data, true);\n    }\n}\n\nexport class MotoPurchaseRequest\n{\n    constructor(amountCents, posRefId, surchargeAmount)\n    {\n        this.PosRefId = posRefId;\n        this.PurchaseAmount = amountCents;\n        this.SurchargeAmount = surchargeAmount;\n        this.SuppressMerchantPassword = false;\n        this.Config = new SpiConfig();\n        this.Options = new TransactionOptions();\n    }\n\n    ToMessage()\n    {\n        var data = {\n            pos_ref_id: this.PosRefId,\n            purchase_amount: this.PurchaseAmount,\n            surcharge_amount: this.SurchargeAmount,\n            suppress_merchant_password: this.SuppressMerchantPassword\n        };\n\n        this.Config.EnabledPrintMerchantCopy = true;\n        this.Config.EnabledPromptForCustomerCopyOnEftpos = true;\n        this.Config.EnabledSignatureFlowOnEftpos = true;\n        this.Config.AddReceiptConfig(data);\n        this.Options.AddOptions(data);\n        return new Message(RequestIdHelper.Id(\"moto\"), Events.MotoPurchaseRequest, data, true);\n    }\n}\n\nexport class MotoPurchaseResponse\n{\n    constructor(m)\n    {\n        this.PurchaseResponse = new PurchaseResponse(m);\n        this.PosRefId = PurchaseResponse.PosRefId;\n    }\n}\n\nexport class PhoneForAuthRequired\n{\n    constructor(...args)\n    {\n        if(args.length === 4) {\n            this.PosRefId = args[0];\n            this.RequestId = args[1];\n            this._phoneNumber = args[2];\n            this._merchantId = args[3];\n        } else if(args.length === 1) {\n            this.RequestId = args[0].Id;\n            this.PosRefId = args[0].Data.pos_ref_id;\n            this._phoneNumber = args[0].Data.auth_centre_phone_number;\n            this._merchantId = args[0].Data.merchant_id;\n        } else {\n            throw new Error('Invalid call sig for Phone auth required class');\n        }\n    }\n    \n    GetPhoneNumber()\n    {\n        return this._phoneNumber;\n    }\n    \n    GetMerchantId()\n    {\n        return this._merchantId;\n    }\n}\n\nexport class AuthCodeAdvice\n{\n    constructor(posRefId, authCode)\n    {\n        this.PosRefId = posRefId;\n        this.AuthCode = authCode;\n    }\n\n    ToMessage()\n    {\n        var data = {\n            pos_ref_id: this.PosRefId,\n            auth_code: this.AuthCode\n        };\n        return new Message(RequestIdHelper.Id(\"authad\"), Events.AuthCodeAdvice, data, true);\n    }\n}","import {Events, Message} from './Messages';\nimport {PurchaseResponse} from './Purchase';\n\n// <summary>\n// This class represents the BillDetails that the POS will be asked for throughout a PayAtTable flow.\n// </summary>\nexport class BillStatusResponse\n{\n    constructor() {\n        // <summary>\n        // Set this Error accordingly if you are not able to return the BillDetails that were asked from you.\n        // </summary>\n        this.Result = null;\n        \n        // <summary>\n        // This is a unique identifier that you assign to each bill.\n        // It migt be for example, the timestamp of when the cover was opened.\n        // </summary>\n        this.BillId = null;\n        \n        // <summary>\n        // This is the table id that this bill was for.\n        // The waiter will enter it on the Eftpos at the start of the PayAtTable flow and the Eftpos will \n        // retrieve the bill using the table id. \n        // </summary>\n        this.TableId = null;\n\n        this.OperatorId = null;\n        \n        // <summary>\n        // The Total Amount on this bill, in cents.\n        // </summary>\n        this.TotalAmount = 0;\n        \n        // <summary>\n        // The currently outsanding amount on this bill, in cents.\n        // </summary>\n        this.OutstandingAmount = 0;\n\n        // <summary>\n        // Your POS is required to persist some state on behalf of the Eftpos so the Eftpos can recover state.\n        // It is just a piece of string that you save against your billId.\n        // WHenever you're asked for BillDetails, make sure you return this piece of data if you have it.\n        // </summary>\n        this.BillData = \"\";\n    }\n\n    getBillPaymentHistory()\n    {\n        if (!this.BillData)\n        {\n            return [];\n        }\n        \n        let billPaymentHistory = [];\n        let savedBillData = JSON.parse(this.BillData);\n\n        return savedBillData.map((bill) => {\n            return new PaymentHistoryEntry(bill.payment_type, bill.payment_summary);\n        });\n    }\n\n    static ToBillData(ph)\n    {\n        if (ph.length < 1)\n        {\n            return \"\";\n        }\n\n        return JSON.stringify(ph);\n    }\n    \n    ToMessage(messageId)\n    {\n        var data = {\n            \"success\": this.Result==BillRetrievalResult.SUCCESS\n        };\n        \n        if (this.BillId) data.bill_id = this.BillId;\n        if (this.TableId) data.table_id = this.TableId;\n\n        if (this.Result == BillRetrievalResult.SUCCESS)\n        {\n            data.bill_total_amount = this.TotalAmount;\n            data.bill_outstanding_amount = this.OutstandingAmount;\n            data.bill_payment_history = this.getBillPaymentHistory();\n        }\n        else\n        {\n            data.error_reason = this.Result.toString();\n            data.error_detail = this.Result.toString();\n        }\n\n        return new Message(messageId, Events.PayAtTableBillDetails, data, true);\n    }\n}\n\nexport const BillRetrievalResult = \n{\n    SUCCESS: 'SUCCESS',\n    INVALID_TABLE_ID: 'INVALID_TABLE_ID',\n    INVALID_BILL_ID: 'INVALID_BILL_ID',\n    INVALID_OPERATOR_ID: 'INVALID_OPERATOR_ID'\n};\n\nexport const PaymentType = \n{\n    CARD: 'CARD',\n    CASH: 'CASH' \n};\n\nexport class BillPayment\n{\n    constructor(m)\n    {\n        this._incomingAdvice = m;\n        this.BillId = this._incomingAdvice.Data[\"bill_id\"];\n        this.TableId = this._incomingAdvice.Data[\"table_id\"];\n        this.OperatorId = this._incomingAdvice.Data[\"operator_id\"];\n        this.PaymentFlowStarted = null;\n        \n        var pt = this._incomingAdvice.Data[\"payment_type\"];\n        this.PaymentType = pt;\n        \n        // this is when we ply the sub object \"payment_details\" into a purchase response for convenience.\n        var purchaseMsg = new Message(m.Id, \"payment_details\", m.Data[\"payment_details\"], false);\n        this.PurchaseResponse = new PurchaseResponse(purchaseMsg);\n\n        this.PurchaseAmount = this.PurchaseResponse.GetPurchaseAmount();\n        this.TipAmount = this.PurchaseResponse.GetTipAmount();\n        this.SurchargeAmount = this.PurchaseResponse.GetSurchargeAmount();\n    }\n}\n\nexport class PaymentHistoryEntry\n{\n    constructor(paymentType, paymentSummary)\n    {\n        this.PaymentType = paymentType;\n        this.PaymentSummary = paymentSummary;\n    }\n\n    toJSON() {\n        return {\n            payment_type: this.PaymentType,\n            payment_summary: this.PaymentSummary\n        };\n    }\n    \n    GetTerminalRefId()\n    {\n        return this.PaymentSummary[\"terminal_ref_id\"];\n    }\n}\n\nexport class PayAtTableConfig\n{\n    constructor() {\n        this.PayAtTabledEnabled = false;\n        this.OperatorIdEnabled = false;\n        this.SplitByAmountEnabled = false;\n        this.EqualSplitEnabled = false;\n        this.TableRetrievalEnabled = false;\n     \n        this.TippingEnabled = false;\n    \n        this.SummaryReportEnabled = false;\n    \n        this.LabelPayButton = '';\n        this.LabelOperatorId = '';\n        this.LabelTableId = '';\n    \n        // \n        // <summary>\n        // Fill in with operator ids that the eftpos terminal will validate against. \n        // Leave Empty to allow any operator_id through. \n        // </summary>\n       this.AllowedOperatorIds = [];\n    }\n\n    ToMessage(messageId)\n    {\n        var data = {\n            \"pay_at_table_enabled\": this.PayAtTabledEnabled,\n            \"operator_id_enabled\": this.OperatorIdEnabled,\n            \"split_by_amount_enabled\": this.SplitByAmountEnabled,\n            \"equal_split_enabled\": this.EqualSplitEnabled,\n            \"tipping_enabled\": this.TippingEnabled,\n            \"summary_report_enabled\": this.SummaryReportEnabled,\n            \"pay_button_label\": this.LabelPayButton,\n            \"operator_id_label\": this.LabelOperatorId,\n            \"table_id_label\": this.LabelTableId,\n            \"operator_id_list\": this.AllowedOperatorIds,\n            \"table_retrieval_enabled\": this.TableRetrievalEnabled,\n        };\n\n        return new Message(messageId, Events.PayAtTableSetTableConfig, data, true);\n    }\n    \n    static FeatureDisableMessage(messageId) {\n        var data = {\n            \"pay_at_table_enabled\": false\n        };\n        return new Message(messageId, Events.PayAtTableSetTableConfig, data, true);\n    }\n}\n\n// <summary>\n// These attributes work for COM interop.\n// </summary>\nexport class GetOpenTablesResponse\n{\n    constructor() {\n        /// <summary>\n        /// Your POS is required to persist some state on behalf of the Eftpos so the Eftpos can recover state.\n        /// It is just a piece of string that you save against your operatorId.\n        /// Whenever you're asked for OpenTables, make sure you return this piece of data if you have it.\n        /// </summary>\n        this.TableData = null;\n    }\n\n    GetOpenTables()\n    {\n        if (!this.TableData)\n        {\n            return [];\n        }\n\n        return JSON.parse(this.TableData);\n    }\n\n    ToMessage(messageId)\n    {\n        var data = {\n            tables: this.GetOpenTables()\n        };\n\n        return new Message(messageId, Events.PayAtTableOpenTables, data, true);\n    }\n}\n\n// <summary>\n// These attributes work for COM interop.\n// </summary>\nexport class OpenTablesEntry\n{\n    constructor() {\n        this.TableId = null;\n        this.Label = null;\n        this.BillOutstandingAmount = null;\n    }\n\n    toJSON() {\n        return {\n            table_id: this.TableId,\n            label: this.Label,\n            bill_outstanding_amount: this.BillOutstandingAmount\n        }\n    }\n}\n\n/// <summary>\n/// These attributes work for COM interop.\n/// </summary>\n\nexport class BillPaymentFlowEndedResponse\n{\n    constructor(m)\n    {\n        this.BillId = m.Data.bill_id;\n        this.BillOutstandingAmount = m.Data.bill_outstanding_amount;\n        this.BillTotalAmount = m.Data.bill_total_amount;\n        this.OperatorId = m.Data.operator_id;\n        this.TableId = m.Data.table_id;\n        this.CardTotalCount = m.Data.card_total_count;\n        this.CardTotalAmount = m.Data.card_total_amount;\n        this.CashTotalCount = m.Data.cash_total_count;\n        this.CashTotalAmount = m.Data.cash_total_amount;\n    }\n}\n","import {RequestIdHelper} from './RequestIdHelper';\nimport {BillPayment, PayAtTableConfig, PaymentHistoryEntry, BillRetrievalResult, BillStatusResponse} from './PayAtTable';\n\nexport class SpiPayAtTable\n{  \n    constructor(spi)\n    {\n        this._spi = spi;\n        this._log = console;\n\n        this.Config = Object.assign(new PayAtTableConfig(), {\n            PayAtTabledEnabled: true,\n            OperatorIdEnabled: true,\n            AllowedOperatorIds: [],\n            EqualSplitEnabled: true,\n            SplitByAmountEnabled: true,\n            SummaryReportEnabled: true,\n            TippingEnabled: true,\n            LabelOperatorId: \"Operator ID\",\n            LabelPayButton: \"Pay at Table\",\n            LabelTableId: \"Table Number\",\n            TableRetrievalEnabled: true\n        });\n    }\n\n    // <summary>\n    // This delegate will be called when the Eftpos needs to know the current state of a bill for a table. \n    // <para />\n    // Parameters:<para />\n    // billId - The unique identifier of the bill. If empty, it means that the PayAtTable flow on the Eftpos is just starting, and the lookup is by tableId.<para />\n    // tableId - The identifier of the table that the bill is for. <para />\n    // operatorId - The id of the operator entered on the eftpos. <para />\n    // <para />\n    // Return:<para />\n    // You need to return the current state of the bill.\n    // </summary>\n    GetBillStatus(billId, tableId, operatorId, paymentFlowStarted) {\n        throw new Error('Method not implemented. Please overwrite this method in your POS');\n    }\n\n    // Abstract method, must implement in POS system\n    BillPaymentReceived(billPayment, updatedBillData) {\n        throw new Error('Method not implemented. Please overwrite this method in your POS');\n    }\n\n    GetOpenTables(operatorId) {\n        throw new Error('Method not implemented. Please overwrite this method in your POS');\n    }\n\n    BillPaymentFlowEnded(message) {\n        throw new Error('Method not implemented. Please overwrite this method in your POS');\n    }\n\n    PushPayAtTableConfig()\n    {\n        this._spi._send(this.Config.ToMessage(RequestIdHelper.Id(\"patconf\")));\n    } \n    \n    _handleGetBillDetailsRequest(m)\n    {\n        var operatorId = m.Data[\"operator_id\"];\n        var tableId = m.Data[\"table_id\"];\n        var paymentFlowStarted = m.Data[\"payment_flow_started\"];\n\n        // Ask POS for Bill Details for this tableId, inluding encoded PaymentData\n        return Promise.resolve(this.GetBillStatus(\"\", tableId, operatorId, paymentFlowStarted)).then(billStatus => {\n            billStatus.TableId = tableId;\n            if (billStatus.TotalAmount <= 0)\n            {\n              this._log.info(\"Table has 0 total amount. not sending it to eftpos.\");\n              billStatus.Result = BillRetrievalResult.INVALID_TABLE_ID;\n            }\n        \n            this._spi._send(billStatus.ToMessage(m.Id));\n        })\n    }\n\n    _handleBillPaymentAdvice(m)\n    {\n        var billPayment = new BillPayment(m);\n        \n        // Ask POS for Bill Details, inluding encoded PaymentData\n        return Promise.resolve(this.GetBillStatus(billPayment.BillId, billPayment.TableId, billPayment.OperatorId, billPayment.PaymentFlowStarted)).then(existingBillStatus => {\n            if (existingBillStatus.Result != BillRetrievalResult.SUCCESS)\n            {\n                this._log.warn(\"Could not retrieve Bill Status for Payment Advice. Sending Error to Eftpos.\");\n                this._spi._send(existingBillStatus.ToMessage(m.Id));\n            }\n                        \n            var existingPaymentHistory = existingBillStatus.getBillPaymentHistory();\n   \n            var foundExistingEntry = existingPaymentHistory.find(phe => phe.GetTerminalRefId() == billPayment.PurchaseResponse.GetTerminalReferenceId());\n            if (foundExistingEntry)\n            {\n                // We have already processed this payment.\n                // perhaps Eftpos did get our acknowledgement.\n                // Let's update Eftpos.\n                this._log.warn(\"Had already received this bill_paymemnt advice from eftpos. Ignoring.\");\n                this._spi._send(existingBillStatus.ToMessage(m.Id));\n                return;\n            }\n\n            // Let's add the new entry to the history\n            var updatedHistoryEntries = existingPaymentHistory;\n            updatedHistoryEntries.push(\n                new PaymentHistoryEntry(billPayment.PaymentType.toLowerCase(), billPayment.PurchaseResponse.ToPaymentSummary())\n            );\n            \n            var updatedBillData = BillStatusResponse.ToBillData(updatedHistoryEntries);\n\n            // Advise POS of new payment against this bill, and the updated BillData to Save.\n            Promise.resolve(this.BillPaymentReceived(billPayment, updatedBillData)).then(updatedBillStatus => {\n\n                // Just in case client forgot to set these:\n                updatedBillStatus.BillId = billPayment.BillId;\n                updatedBillStatus.TableId = billPayment.TableId;\n\n                if (updatedBillStatus.Result != BillRetrievalResult.SUCCESS)\n                {\n                  this._log.warn(\"POS Errored when being Advised of Payment. Letting EFTPOS know, and sending existing bill data.\");\n                  updatedBillStatus.BillData = existingBillStatus.BillData;\n                }\n                else\n                {\n                  updatedBillStatus.BillData = updatedBillData;\n                }\n    \n                this._spi._send(updatedBillStatus.ToMessage(m.Id));\n            })\n        })\n    }\n    \n    _handleGetTableConfig(m)\n    {\n        this._spi._send(this.Config.ToMessage(m.Id));\n    }\n\n    _handleGetOpenTablesRequest(m)\n    {\n        var operatorId = m.Data[\"operator_id\"];\n\n        // Ask POS for Bill Details for this tableId, inluding encoded PaymentData\n        var openTablesResponse = this.GetOpenTables(operatorId); // JSON or string?\n        if (openTablesResponse.TableData.length <= 0)\n        {\n            this._log.info(\"There is no open table.\");\n        }\n\n        this._spi._send(openTablesResponse.ToMessage(m.Id));\n    }\n\n    _handleBillPaymentFlowEnded(m)\n    {\n        this.BillPaymentFlowEnded(m);\n    }\n}\n","import {RequestIdHelper} from './RequestIdHelper';\nimport {Message} from './Messages';\nimport {PurchaseResponse} from './Purchase';\nimport {SpiConfig, TransactionOptions} from './SpiModels';\n\nexport const PreauthEvents = \n{\n    AccountVerifyRequest: \"account_verify\",\n    AccountVerifyResponse: \"account_verify_response\",\n    \n    PreauthOpenRequest : \"preauth\",\n    PreauthOpenResponse : \"preauth_response\",\n\n    PreauthTopupRequest: \"preauth_topup\",\n    PreauthTopupResponse: \"preauth_topup_response\",\n\n    PreauthExtendRequest: \"preauth_extend\",\n    PreauthExtendResponse: \"preauth_extend_response\",\n\n    PreauthPartialCancellationRequest : \"preauth_partial_cancellation\",\n    PreauthPartialCancellationResponse : \"preauth_partial_cancellation_response\",\n    \n    PreauthCancellationRequest : \"preauth_cancellation\",\n    PreauthCancellationResponse : \"preauth_cancellation_response\",\n\n    PreauthCompleteRequest : \"completion\",\n    PreauthCompleteResponse : \"completion_response\"\n};\n\nexport class AccountVerifyRequest\n{\n    constructor(posRefId)\n    {\n        this.PosRefId = posRefId;\n    }\n\n    ToMessage()\n    {\n        var data = {\n            \"pos_ref_id\": this.PosRefId\n        };\n\n        return new Message(RequestIdHelper.Id(\"prav\"), PreauthEvents.AccountVerifyRequest, data, true);\n    }\n}\n\nexport class AccountVerifyResponse\n{\n    constructor(m)\n    {\n        this.Details = new PurchaseResponse(m);\n        this.PosRefId = this.Details.PosRefId;\n        this._m = m;\n    }\n}\n\nexport class PreauthOpenRequest\n{\n    constructor(amountCents, posRefId)\n    {\n        this.PosRefId = posRefId;\n        this.PreauthAmount = amountCents;\n        this.Config = new SpiConfig();\n        this.Options = new TransactionOptions();\n    }\n\n    ToMessage()\n    {\n        var data = {\n            \"pos_ref_id\": this.PosRefId,\n            \"preauth_amount\": this.PreauthAmount\n        };\n\n        this.Config.EnabledPrintMerchantCopy = true;\n        this.Config.EnabledPromptForCustomerCopyOnEftpos = true;\n        this.Config.EnabledSignatureFlowOnEftpos = true;\n        this.Config.AddReceiptConfig(data);\n        this.Options.AddOptions(data);\n        return new Message(RequestIdHelper.Id(\"prac\"), PreauthEvents.PreauthOpenRequest, data, true);\n    }\n}\n\nexport class PreauthTopupRequest\n{\n    constructor(preauthId, topupAmountCents, posRefId)\n    {\n        this.PreauthId = preauthId;\n        this.TopupAmount = topupAmountCents;\n        this.PosRefId = posRefId;\n        this.Config = new SpiConfig();\n        this.Options = new TransactionOptions();\n    }\n\n    ToMessage()\n    {\n        var data = {\n            \"pos_ref_id\": this.PosRefId,\n            \"preauth_id\": this.PreauthId,\n            \"topup_amount\": this.TopupAmount\n        };\n\n        this.Config.EnabledPrintMerchantCopy = true;\n        this.Config.EnabledPromptForCustomerCopyOnEftpos = true;\n        this.Config.EnabledSignatureFlowOnEftpos = true;\n        this.Config.AddReceiptConfig(data);\n        this.Options.AddOptions(data);\n        return new Message(RequestIdHelper.Id(\"prtu\"), PreauthEvents.PreauthTopupRequest, data, true);\n    }\n}\n\nexport class PreauthPartialCancellationRequest\n{\n    constructor(preauthId, partialCancellationAmountCents, posRefId)\n    {\n        this.PreauthId = preauthId;\n        this.PartialCancellationAmount = partialCancellationAmountCents;\n        this.PosRefId = posRefId;\n        this.Config = new SpiConfig();\n        this.Options = new TransactionOptions();\n    }\n\n    ToMessage()\n    {\n        var data = {\n            \"pos_ref_id\": this.PosRefId,\n            \"preauth_id\": this.PreauthId,\n            \"preauth_cancel_amount\": this.PartialCancellationAmount\n        };\n\n        this.Config.EnabledPrintMerchantCopy = true;\n        this.Config.EnabledPromptForCustomerCopyOnEftpos = true;\n        this.Config.EnabledSignatureFlowOnEftpos = true;\n        this.Config.AddReceiptConfig(data);\n        this.Options.AddOptions(data);\n        return new Message(RequestIdHelper.Id(\"prpc\"), PreauthEvents.PreauthPartialCancellationRequest, data, true);\n    }\n}\n\nexport class PreauthExtendRequest\n{\n    constructor(preauthId, posRefId)\n    {\n        this.PreauthId = preauthId;\n        this.PosRefId = posRefId;\n        this.Config = new SpiConfig();\n        this.Options = new TransactionOptions();\n    }\n\n    ToMessage()\n    {\n        var data = {\n            \"pos_ref_id\": this.PosRefId,\n            \"preauth_id\": this.PreauthId\n        };\n\n        this.Config.EnabledPrintMerchantCopy = true;\n        this.Config.EnabledPromptForCustomerCopyOnEftpos = true;\n        this.Config.EnabledSignatureFlowOnEftpos = true;\n        this.Config.AddReceiptConfig(data);\n        this.Options.AddOptions(data);\n        return new Message(RequestIdHelper.Id(\"prext\"), PreauthEvents.PreauthExtendRequest, data, true);\n    }\n}\n\nexport class PreauthCancelRequest\n{\n    constructor(preauthId, posRefId)\n    {\n        this.PreauthId = preauthId;\n        this.PosRefId = posRefId;\n        this.Config = new SpiConfig();\n        this.Options = new TransactionOptions();\n    }\n\n    ToMessage()\n    {\n        var data = {\n            \"pos_ref_id\": this.PosRefId,\n            \"preauth_id\": this.PreauthId\n        };\n\n        this.Config.EnabledPrintMerchantCopy = true;\n        this.Config.EnabledPromptForCustomerCopyOnEftpos = true;\n        this.Config.EnabledSignatureFlowOnEftpos = true;\n        this.Config.AddReceiptConfig(data);\n        this.Options.AddOptions(data);\n        return new Message(RequestIdHelper.Id(\"prac\"), PreauthEvents.PreauthCancellationRequest, data, true);\n    }\n}\n\nexport class PreauthCompletionRequest\n{\n    constructor(preauthId, completionAmountCents, posRefId, surchargeAmount)\n    {\n        this.PreauthId = preauthId;\n        this.CompletionAmount = completionAmountCents;\n        this.PosRefId = posRefId;\n        this.SurchargeAmount = surchargeAmount;\n        this.Config = new SpiConfig();\n        this.Options = new TransactionOptions();\n    }\n\n    ToMessage()\n    {\n        var data = {\n            \"pos_ref_id\": this.PosRefId,\n            \"preauth_id\": this.PreauthId,\n            \"completion_amount\": this.CompletionAmount,\n            \"surcharge_amount\": this.SurchargeAmount\n        };\n\n        this.Config.EnabledPrintMerchantCopy = true;\n        this.Config.EnabledPromptForCustomerCopyOnEftpos = true;\n        this.Config.EnabledSignatureFlowOnEftpos = true;\n        this.Config.AddReceiptConfig(data);\n        this.Options.AddOptions(data);\n        return new Message(RequestIdHelper.Id(\"prac\"), PreauthEvents.PreauthCompleteRequest, data, true);\n    }\n}\n\nexport class PreauthResponse\n{\n    constructor(m)\n    {\n        this.PreauthId = m.Data[\"preauth_id\"];\n        this.Details = new PurchaseResponse(m);\n        this.PosRefId = this.Details.PosRefId;\n        this._m = m;\n    }\n\n    GetBalanceAmount()\n    {\n        var txType = this._m.Data[\"transaction_type\"];\n        switch (txType)\n        {\n            case \"PRE-AUTH\":\n                return this._m.Data[\"preauth_amount\"];\n            case \"TOPUP\":\n                return this._m.Data[\"balance_amount\"];\n            case \"CANCEL\": // PARTIAL CANCELLATION\n                return this._m.Data[\"balance_amount\"];\n            case \"PRE-AUTH EXT\":\n                return this._m.Data[\"balance_amount\"];\n            case \"PCOMP\":\n                return 0; // Balance is 0 after completion\n            case \"PRE-AUTH CANCEL\":\n                return 0; // Balance is 0 after cancellation\n            default:\n                return 0;\n        }\n    }\n\n    GetPreviousBalanceAmount()\n    {\n        var txType = this._m.Data[\"transaction_type\"];\n        switch (txType)\n        {   \n            case \"PRE-AUTH\":\n                return 0;\n            case \"TOPUP\":\n                return this._m.Data[\"existing_preauth_amount\"];\n            case \"CANCEL\": // PARTIAL CANCELLATION\n                return this._m.Data[\"existing_preauth_amount\"];\n            case \"PRE-AUTH EXT\":\n                return this._m.Data[\"existing_preauth_amount\"];\n            case \"PCOMP\":\n                // THIS IS TECHNICALLY NOT CORRECT WHEN COMPLETION HAPPENS FOR A PARTIAL AMOUNT.\n                // BUT UNFORTUNATELY, THIS RESPONSE DOES NOT CONTAIN \"existing_preauth_amount\".\n                // SO \"completion_amount\" IS THE CLOSEST WE HAVE.\n                return this._m.Data[\"completion_amount\"];\n            case \"PRE-AUTH CANCEL\":\n                return this._m.Data[\"preauth_amount\"];\n            default:\n                return 0;\n        }\n    }\n    \n    GetCompletionAmount()\n    {\n        var txType = this._m.Data[\"transaction_type\"];\n        switch (txType)\n        {   \n            case \"PCOMP\":\n                return this._m.Data[\"completion_amount\"];\n            default:\n                return 0;\n        }\n\n    }\n\n    GetSurchargeAmount()\n    {\n        var txType = this._m.Data[\"transaction_type\"];\n        switch (txType)\n        {\n            case \"PCOMP\":\n                return this._m.Data[\"surcharge_amount\"];\n            default:\n                return 0;\n        }\n    }\n\n    WasMerchantReceiptPrinted()\n    {\n        return this._m.Data[\"merchant_receipt_printed\"];\n    }\n\n    WasCustomerReceiptPrinted()\n    {\n        return this._m.Data[\"customer_receipt_printed\"];\n    }\n}","import {\n    PreauthEvents,\n    AccountVerifyRequest, \n    PreauthOpenRequest, \n    PreauthTopupRequest, \n    PreauthPartialCancellationRequest, \n    PreauthExtendRequest,\n    PreauthCompletionRequest,\n    PreauthCancelRequest} from './Preauth';\n\n\nimport {TransactionFlowState, TransactionType, InitiateTxResult, SpiStatus, SpiFlow, SpiConfig, TransactionOptions} from './SpiModels';\n\nexport class SpiPreauth\n{\n    constructor(spi)\n    {\n        this._spi = spi;\n        this._log = console;\n\n        this.Config = new SpiConfig();\n    }\n\n    InitiateAccountVerifyTx(posRefId)\n    {\n        var verifyMsg = new AccountVerifyRequest(posRefId).ToMessage();\n\n        var tfs = new TransactionFlowState(\n            posRefId, TransactionType.AccountVerify, 0, verifyMsg,\n            \"Waiting for EFTPOS connection to make account verify request\");\n        var sentMsg = \"Asked EFTPOS to verify account\";\n        return this._initiatePreauthTx(tfs, sentMsg);\n    }\n    \n    InitiateOpenTx(posRefId, amountCents, options = new TransactionOptions())\n    {\n        var msg = Object.assign(new PreauthOpenRequest(amountCents, posRefId),\n        {\n            Config: this.Config,\n            Options: options\n        }).ToMessage();\n\n        var tfs = new TransactionFlowState(\n            posRefId, TransactionType.Preauth, amountCents, msg,\n            `Waiting for EFTPOS connection to make preauth request for ${(amountCents / 100.0).toFixed(2)}`);\n        var sentMsg = `Asked EFTPOS to create preauth for ${(amountCents / 100.0).toFixed(2)}`;\n        return this._initiatePreauthTx(tfs, sentMsg);\n    }\n\n    InitiateTopupTx(posRefId, preauthId, amountCents, options = new TransactionOptions())\n    {\n        var msg = Object.assign(new PreauthTopupRequest(preauthId, amountCents, posRefId),\n        {\n            Config: this.Config,\n            Options: options\n        }).ToMessage();\n\n        var tfs = new TransactionFlowState(\n            posRefId, TransactionType.Preauth, amountCents, msg,\n            `Waiting for EFTPOS connection to make preauth topup request for ${(amountCents / 100.0).toFixed(2)}`);\n        var sentMsg = `Asked EFTPOS to make preauth topup for ${(amountCents / 100.0).toFixed(2)}`;\n        return this._initiatePreauthTx(tfs, sentMsg);\n    }\n\n    InitiatePartialCancellationTx(posRefId, preauthId, amountCents, options = new TransactionOptions())\n    {\n        var msg = Object.assign(new PreauthPartialCancellationRequest(preauthId, amountCents, posRefId),\n        {\n            Config: this.Config,\n            Options: options\n        }).ToMessage();\n\n        var tfs = new TransactionFlowState(\n            posRefId, TransactionType.Preauth, amountCents, msg,\n            `Waiting for EFTPOS connection to make preauth partial cancellation request for ${(amountCents / 100.0).toFixed(2)}`);\n        var sentMsg = `Asked EFTPOS to make preauth partial cancellation for ${(amountCents / 100.0).toFixed(2)}`;\n        return this._initiatePreauthTx(tfs, sentMsg);\n    }\n\n    InitiateExtendTx(posRefId, preauthId, options = new TransactionOptions())\n    {\n        var msg = Object.assign(new PreauthExtendRequest(preauthId, posRefId),\n        {\n            Config: this.Config,\n            Options: options\n        }).ToMessage();\n\n        var tfs = new TransactionFlowState(\n            posRefId, TransactionType.Preauth, 0, msg,\n            \"Waiting for EFTPOS connection to make preauth Extend request\");\n        var sentMsg = \"Asked EFTPOS to make preauth Extend request\";\n        return this._initiatePreauthTx(tfs, sentMsg);\n    }\n\n    InitiateCompletionTx(posRefId, preauthId, amountCents, surchargeAmount = 0, options = new TransactionOptions())\n    {\n        var msg = Object.assign(new PreauthCompletionRequest(preauthId, amountCents, posRefId),\n        {\n            Config: this.Config,\n            SurchargeAmount: surchargeAmount,\n            Options: options\n        }).ToMessage();\n\n        var tfs = new TransactionFlowState(\n            posRefId, TransactionType.Preauth, amountCents, msg,\n            `Waiting for EFTPOS connection to make preauth completion request for ${(amountCents / 100.0).toFixed(2)}`);\n        var sentMsg = `Asked EFTPOS to make preauth completion for ${(amountCents / 100.0).toFixed(2)}`;\n        return this._initiatePreauthTx(tfs, sentMsg);\n    }\n\n    InitiateCancelTx(posRefId, preauthId, options = new TransactionOptions())\n    {\n        var msg = Object.assign(new PreauthCancelRequest(preauthId, posRefId),\n        {\n            Config: this.Config,\n            Options: options\n        }).ToMessage();\n\n        var tfs = new TransactionFlowState(\n            posRefId, TransactionType.Preauth, 0, msg,\n            \"Waiting for EFTPOS connection to make preauth cancellation request\");\n        var sentMsg = \"Asked EFTPOS to make preauth cancellation request\";\n        return this._initiatePreauthTx(tfs, sentMsg);\n    }\n\n    _initiatePreauthTx(tfs, sentMsg)\n    {\n        if (this._spi.CurrentStatus == SpiStatus.Unpaired) return new InitiateTxResult(false, \"Not Paired\");\n\n        if (this._spi.CurrentFlow != SpiFlow.Idle) return new InitiateTxResult(false, \"Not Idle\");\n\n        this._spi.CurrentFlow = SpiFlow.Transaction;\n        this._spi.CurrentTxFlowState = tfs;\n        if (this._spi._send(tfs.Request))\n        {\n            this._spi.CurrentTxFlowState.Sent(sentMsg);\n        }\n    \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this._spi.CurrentTxFlowState}));\n        return new InitiateTxResult(true, \"Preauth Initiated\");\n    }\n\n    _handlePreauthMessage(m)\n    {\n        switch (m.EventName)\n        {\n            case PreauthEvents.AccountVerifyResponse:\n                this._handleAccountVerifyResponse(m);\n                break;\n            case PreauthEvents.PreauthOpenResponse:\n            case PreauthEvents.PreauthTopupResponse:\n            case PreauthEvents.PreauthPartialCancellationResponse:\n            case PreauthEvents.PreauthExtendResponse:\n            case PreauthEvents.PreauthCompleteResponse:\n            case PreauthEvents.PreauthCancellationResponse:\n                this._handlePreauthResponse(m);\n                break;\n            default:\n                this._log.info(`I don't Understand Preauth Event: ${m.EventName}, ${m.Data}. Perhaps I have not implemented it yet.`);\n                break;\n        }\n    }\n\n    _handleAccountVerifyResponse(m)\n    {\n        var incomingPosRefId = m.Data.pos_ref_id;\n        var currentTxFlowState = this._spi.CurrentTxFlowState;\n        if (this._spi.CurrentFlow != SpiFlow.Transaction || currentTxFlowState.Finished || !currentTxFlowState.PosRefId === incomingPosRefId)\n        {\n            this._log.info(`Received Account Verify response but I was not waiting for one. Incoming Pos Ref ID: ${incomingPosRefId}`);\n            return;\n        }\n        // TH-1A, TH-2A\n\n        currentTxFlowState.Completed(m.GetSuccessState(), m, \"Account Verify Transaction Ended.\");\n        // TH-6A, TH-6E\n        \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this._spi.CurrentTxFlowState}));\n    }\n    \n    _handlePreauthResponse(m)\n    {\n        var incomingPosRefId = m.Data.pos_ref_id;\n        var currentTxFlowState = this._spi.CurrentTxFlowState;\n        if (this._spi.CurrentFlow != SpiFlow.Transaction || currentTxFlowState.Finished || !currentTxFlowState.PosRefId === incomingPosRefId)\n        {\n            this._log.info(`Received Preauth response but I was not waiting for one. Incoming Pos Ref ID: ${incomingPosRefId}`);\n            return;\n        }\n        // TH-1A, TH-2A\n\n        currentTxFlowState.Completed(m.GetSuccessState(), m, \"Preauth Transaction Ended.\");\n        // TH-6A, TH-6E\n        \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this._spi.CurrentTxFlowState}));\n    }\n\n    static IsPreauthEvent(eventName)\n    {\n        return eventName.lastIndexOf(\"preauth\",0) === 0 \n                || eventName == PreauthEvents.PreauthCompleteResponse\n                || eventName == PreauthEvents.PreauthCompleteRequest\n                || eventName == PreauthEvents.AccountVerifyRequest\n                || eventName == PreauthEvents.AccountVerifyResponse;\n    }\n}\n","import {Message, Events, SuccessState} from './Messages';\nimport {SpiConfig, TransactionOptions} from './SpiModels';\nimport {RequestIdHelper} from './RequestIdHelper';\n\nexport class CashoutOnlyRequest\n{  \n    constructor(amountCents, posRefId)\n    {\n        this.PosRefId = posRefId;\n        this.CashoutAmount = amountCents;\n\n        this.SurchargeAmount = null;\n        this.Config = new SpiConfig();\n        this.Options = new TransactionOptions();\n    }\n    \n    ToMessage()\n    {\n        var data = {\n            \"pos_ref_id\": this.PosRefId,\n            \"cash_amount\": this.CashoutAmount,\n            \"surcharge_amount\": this.SurchargeAmount\n        };\n\n        this.Config.EnabledPrintMerchantCopy = true;\n        this.Config.EnabledPromptForCustomerCopyOnEftpos = true;\n        this.Config.EnabledSignatureFlowOnEftpos = true;\n        this.Config.AddReceiptConfig(data);\n        this.Options.AddOptions(data);\n\n        return new Message(RequestIdHelper.Id(\"cshout\"), Events.CashoutOnlyRequest, data, true);\n    }\n}\n\nexport class CashoutOnlyResponse\n{\n    constructor(m)\n    {\n        this._m = m;\n        this.RequestId = m.Id;\n        this.PosRefId = m.Data.pos_ref_id;\n        this.SchemeName = m.Data.scheme_name;\n        this.Success = m.GetSuccessState() == SuccessState.Success;\n    }\n\n    GetRRN()\n    {\n        return this._m.Data[\"rrn\"];\n    }\n\n    GetCashoutAmount()\n    {\n        return this._m.Data[\"cash_amount\"];\n    }\n\n    GetBankNonCashAmount()\n    {\n        return this._m.Data[\"bank_noncash_amount\"];\n    }\n\n    GetBankCashAmount()\n    {\n        return this._m.Data[\"bank_cash_amount\"];\n    }\n    \n    GetCustomerReceipt()\n    {\n        return this._m.Data[\"customer_receipt\"];\n    }\n\n    GetMerchantReceipt()\n    {\n        return this._m.Data[\"merchant_receipt\"];\n    }\n    \n    GetResponseText()\n    {\n        return this._m.Data[\"host_response_text\"];\n    }\n\n    GetResponseCode()\n    {\n        return this._m.Data[\"host_response_code\"];\n    }\n    \n    GetTerminalReferenceId()\n    {\n        return this._m.Data[\"terminal_ref_id\"];\n    }\n\n    GetAccountType()\n    {\n        return this._m.Data[\"account_type\"];\n    }\n\n    GetAuthCode()\n    {\n        return this._m.Data[\"auth_code\"];\n    }\n\n    GetBankDate()\n    {\n        return this._m.Data[\"bank_date\"];\n    }\n\n    GetBankTime()\n    {\n        return this._m.Data[\"bank_time\"];\n    }\n    \n    GetMaskedPan()\n    {\n        return this._m.Data[\"masked_pan\"];\n    }\n    \n    GetTerminalId()\n    {\n        return this._m.Data[\"terminal_id\"];\n    }\n\n    WasMerchantReceiptPrinted()\n    {\n        return this._m.Data[\"merchant_receipt_printed\"];\n    }\n\n    WasCustomerReceiptPrinted()\n    {\n        return this._m.Data[\"customer_receipt_printed\"];\n    }\n    \n    GetSurchargeAmount()\n    {\n        return this._m.Data[\"surcharge_amount\"];\n    }\n\n    GetResponseValue(attribute)\n    {\n        return this._m.Data[attribute];\n    }\n\n}","import {Events, SuccessState, Message} from './Messages';\nimport {SpiConfig, TransactionOptions} from './SpiModels';\n\nexport class SettleRequest {\n    constructor(id) {\n        this.Id = id;\n        this.Config = new SpiConfig();\n        this.Options = new TransactionOptions();\n    }\n\n    ToMessage() {\n        var data = {};\n\n        this.Config.EnabledPrintMerchantCopy = true;\n        this.Config.EnabledPromptForCustomerCopyOnEftpos = false;\n        this.Config.EnabledSignatureFlowOnEftpos = false;\n        this.Config.AddReceiptConfig(data);\n        this.Options.AddOptions(data);\n        return new Message(this.Id, Events.SettleRequest, data, true);\n    }\n}\n\nexport class Settlement {\n    constructor(m) {\n        this.RequestId = m.Id;\n        this._m = m;\n        this.Success = m.GetSuccessState() == SuccessState.Success;\n    }\n\n    GetSettleByAcquirerCount()\n    {\n        return this._m.Data.accumulated_settle_by_acquirer_count;\n    }\n\n    GetSettleByAcquirerValue()\n    {\n        return this._m.Data.accumulated_settle_by_acquirer_value;\n    }\n\n    GetTotalCount()\n    {\n        return this._m.Data.accumulated_total_count;\n    }\n\n    GetTotalValue()\n    {\n        return this._m.Data.accumulated_total_value;\n    }\n\n    GetPeriodStartTime()\n    {\n        var timeStr = this._m.Data.settlement_period_start_time; // \"05:00\"\n        var dateStr = this._m.Data.settlement_period_start_date; // \"05Oct17\"\n        return Message.ParseBankDateTimeStr(dateStr, timeStr);\n    }\n\n    GetPeriodEndTime()\n    {\n        var timeStr = this._m.Data.settlement_period_end_time; // \"05:00\"\n        var dateStr = this._m.Data.settlement_period_end_date; // \"05Oct17\"\n        return Message.ParseBankDateTimeStr(dateStr, timeStr);\n    }\n\n    GetTriggeredTime()\n    {\n        var timeStr = this._m.Data.settlement_triggered_time; // \"05:00:45\"\n        var dateStr = this._m.Data.settlement_triggered_date; // \"05Oct17\"\n        return Message.ParseBankDateTimeStr(dateStr, timeStr);\n    }\n\n    GetResponseText()\n    {\n        return this._m.Data.host_response_text;\n    }\n    \n    GetReceipt()\n    {\n        return this._m.Data.merchant_receipt;\n    }\n\n    GetTransactionRange()\n    {\n        return this._m.Data.transaction_range;\n    }\n\n    GetTerminalId()\n    {\n        return this._m.Data.terminal_id;\n    }\n\n    WasMerchantReceiptPrinted()\n    {\n        return this._m.Data.merchant_receipt_printed;\n    }\n\n    GetSchemeSettlementEntries()\n    {\n        var schemes = this._m.Data.schemes;\n        if (!schemes) return [];\n\n        return schemes.map((scheme) => {\n            return new SchemeSettlementEntry(scheme);\n        });\n    }\n}\n\nexport class SchemeSettlementEntry\n{\n    // SchemeSettlementEntry(string schemeName, bool settleByAcquirer, int totalCount, int totalValue)\n    // SchemeSettlementEntry(Object schemeObj)\n    constructor(...args)\n    {\n        if(args.length === 1) {\n            this.SchemeName = args[0].scheme_name;\n            this.SettleByAcquirer = args[0].settle_by_acquirer.toLowerCase() == \"yes\";\n            this.TotalValue = parseInt(args[0].total_value,10);\n            this.TotalCount = parseInt(args[0].total_count,10);\n        } else if(args.length === 4) {\n            this.SchemeName = args[0];\n            this.SettleByAcquirer = args[1];\n            this.TotalCount = args[2];\n            this.TotalValue = args[3];\n        }\n    }\n    \n    ToString()\n    {\n        return `SchemeName: ${this.SchemeName}, SettleByAcquirer: ${this.SettleByAcquirer}, TotalCount: ${this.TotalCount}, TotalValue: ${this.TotalValue}`;\n    }\n}\n\nexport class SettlementEnquiryRequest\n{\n    constructor(id)\n    {\n        this.Id = id;\n        this.Config = new SpiConfig();\n        this.Options = new TransactionOptions();\n    }\n    \n    ToMessage()\n    {\n        var data = {};\n\n        this.Config.EnabledPrintMerchantCopy = true;\n        this.Config.EnabledPromptForCustomerCopyOnEftpos = false;\n        this.Config.EnabledSignatureFlowOnEftpos = false;\n        this.Config.AddReceiptConfig(data);\n        this.Options.AddOptions(data);\n        return new Message(this.Id, Events.SettlementEnquiryRequest, data, true);\n    }\n}","import {Message, Events, SuccessState} from './Messages';\nimport {RequestIdHelper} from './RequestIdHelper';\n\nexport class SetPosInfoRequest\n{\n    constructor(version, vendorId, libraryLanguage, libraryVersion, otherInfo)\n    {\n        this._version = version;\n        this._vendorId = vendorId;\n        this._libraryLanguage = libraryLanguage;\n        this._libraryVersion = libraryVersion;\n        this._otherInfo = otherInfo;\n    }\n\n    toMessage()\n    {\n        var data = {\n            pos_version: this._version,\n            pos_vendor_id: this._vendorId,\n            library_language: this._libraryLanguage,\n            library_version: this._libraryVersion,\n            other_info: this._otherInfo\n        };\n\n        return new Message(RequestIdHelper.Id(\"prav\"), Events.SetPosInfoRequest, data, true);\n    }\n}\n\nexport class SetPosInfoResponse\n{\n    constructor(m)\n    {\n        this._success = m.GetSuccessState() == SuccessState.Success;\n        this._m = m;\n    }\n    isSuccess()\n    {\n        return this._success;\n    }\n    getErrorReason()\n    {\n        return this._m.Data.error_reason;\n    }\n    getErrorDetail()\n    {\n        return this._m.Data.error_detail;\n    }\n    getResponseValueWithAttribute(attribute)\n    {\n        return this._m.Data[attribute];\n    }\n}\n\nexport class DeviceInfo\n{\n    static GetAppDeviceInfo()\n    {\n        var deviceInfo = {};\n        deviceInfo['device_system'] = navigator.userAgent;\n        // deviceInfo.Add(\"device_system\", Environment.OSVersion.Platform.ToString() + \" \" + Environment.OSVersion.Version.ToString());\n        return deviceInfo;\n    }\n}\n","import {PurchaseRequest, RefundRequest} from './Purchase';\n\nexport class PurchaseHelper\n{\n    static CreatePurchaseRequest(amountCents, purchaseId)\n    {\n        return new PurchaseRequest(amountCents, purchaseId);\n    }\n    \n    static CreatePurchaseRequestV2(posRefId, purchaseAmount, tipAmount, cashoutAmount, promptForCashout, surchargeAmount)\n    {\n        var pr = Object.assign(new PurchaseRequest(purchaseAmount, posRefId),\n        {\n            CashoutAmount: cashoutAmount,\n            TipAmount: tipAmount,\n            PromptForCashout: promptForCashout,\n            SurchargeAmount: surchargeAmount\n        });\n\n        return pr;\n    }\n\n    static CreateRefundRequest(amountCents, purchaseId, suppressMerchantPassword)\n    {\n        return new RefundRequest(amountCents, purchaseId, suppressMerchantPassword);\n    }\n\n}\n","import {Events, Message} from './Messages';\nimport {Crypto} from './Crypto';\nimport {Secrets} from './Secrets';\n\nexport class KeyRollingHelper {\n    static PerformKeyRolling(krRequest, currentSecrets)\n    {\n        let m = new Message(krRequest.Id, Events.KeyRollResponse, {\"status\": \"confirmed\"}, true);\n        let newSecrets = new Secrets(Crypto.GenerateHash(currentSecrets.EncKey).toUpperCase(),Crypto.GenerateHash(currentSecrets.HmacKey).toUpperCase());\n        return new KeyRollingResult(m, newSecrets);\n    }\n}\n\nexport class KeyRollingResult {\n    constructor(keyRollingConfirmation, newSecrets) {\n        this.KeyRollingConfirmation = keyRollingConfirmation;\n        this.NewSecrets = newSecrets;\n    }\n}\n","import {RequestIdHelper} from './RequestIdHelper';\nimport {Events, Message} from './Messages';\n\nexport class PongHelper\n{\n    static GeneratePongRessponse(ping)\n    {\n        return new Message(ping.Id, Events.Pong, null, true);\n    }\n}\n\nexport class PingHelper\n{\n    static GeneratePingRequest()\n    {\n        return new Message(RequestIdHelper.Id(\"ping\"), Events.Ping, null, true);\n    }\n}\n","export class DeviceAddressStatus\n{\n    get Address()\n    {\n        if(this.UseSecureWebSockets) \n        {\n            return this.fqdn;\n        } \n        else\n        {\n            return this.ip;\n        }\n    }\n\n    set Address(address)\n    {\n        if(this.UseSecureWebSockets) \n        {\n            this.fqdn = addreses;\n        } \n        else\n        {\n            this.ip = address;\n        }\n    }\n\n    constructor(useSecureWebSockets) \n    {\n        this.UseSecureWebSockets = useSecureWebSockets;\n\n        this.ip = null;\n        this.fqdn = null;\n        this.LastUpdated = null;\n\n        this.DeviceAddressResponseCode = null;\n        this.ResponseStatusDescription = null;\n        this.ResponseMessage = null;\n    }\n}\n\nexport const DeviceAddressResponseCode =\n{\n    SUCCESS: 'SUCCESS',\n    INVALID_SERIAL_NUMBER: 'INVALID_SERIAL_NUMBER',\n    ADDRESS_NOT_CHANGED: 'ADDRESS_NOT_CHANGED',\n    SERIAL_NUMBER_NOT_CHANGED: 'SERIAL_NUMBER_NOT_CHANGED',\n    DEVICE_SERVICE_ERROR: 'DEVICE_SERVICE_ERROR'\n};\n\nexport const HttpStatusCode = \n{\n    NotFound: 404\n};\n\nexport class DeviceAddressService\n{\n    // RetrieveService(serialNumber, apiKey = 'spi-sample-pos1', acquirerCode, useSecureWebSockets, isTestMode)\n    async RetrieveService(serialNumber, apiKey = 'spi-sample-pos1', acquirerCode, isSecureConnection, isTestMode)    \n    {\n        var path = isSecureConnection ? 'fqdn' : 'ip';\n        var deviceAddressUri = isTestMode ? `https://device-address-api-sb.${acquirerCode}.msp.assemblypayments.com/v1/${serialNumber}/${path}` : `https://device-address-api.${acquirerCode}.msp.assemblypayments.com/v1/${serialNumber}/${path}`;\n\n        var response = await fetch(deviceAddressUri, {\n            method: 'GET',\n            headers: {\n                \"ASM-MSP-DEVICE-ADDRESS-API-KEY\": apiKey\n            }\n        });\n\n        return response;\n    }\n}\n","import {Events, Message, SuccessState} from './Messages';\nimport {RequestIdHelper} from './RequestIdHelper';\n\nexport class PrintingRequest\n{\n    constructor(key, payload)\n    {\n        this._key = key;\n        this._payload = payload;\n    }\n\n    toMessage()\n    {\n        var data = {\n            \"key\": this._key,\n            \"payload\": this._payload\n        };\n\n        return new Message(RequestIdHelper.Id(\"print\"), Events.PrintingRequest, data, true);\n    }\n}\n\nexport class PrintingResponse\n{\n    constructor(m)\n    {\n        this._success = m.GetSuccessState() == SuccessState.Success;\n        this._m = m;\n    }\n    isSuccess()\n    {\n        return this._success;\n    }\n    getErrorReason()\n    {\n        return this._m.Data.error_reason;\n    }\n    getErrorDetail()\n    {\n        return this._m.Data.error_detail;\n    }\n    getResponseValueWithAttribute(attribute)\n    {\n        return this._m.Data[attribute];\n    }\n}\n\n/**\n * This class is a mock printer for the terminal to print Receipts\n */\nexport class Printer {\n    constructor(element) {\n        this.buffer     = [];\n        this.element    = element;\n    }\n\n    print(...args) {\n        this.buffer.push(args.join(' '));\n        this._render();\n    }\n\n    _render() {\n        this.element.innerText = this.buffer.join(`\\n\\n \\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/\\\\/ \\n\\n`);\n        this.element.scrollTop = this.element.scrollHeight;\n    }\n\n    Clear() {\n        this.buffer = [];\n        this._render();\n    }\n}","import {Events, Message} from './Messages';\nimport {RequestIdHelper} from './RequestIdHelper';\n\nexport class TerminalStatusRequest\n{\n    ToMessage()\n    {\n        var data = {};\n\n        return new Message(RequestIdHelper.Id(\"trmnl\"), Events.TerminalStatusRequest, data, true);\n    }\n}\n\nexport class TerminalStatusResponse\n{\n    constructor(m)\n    {\n        this._m = m;\n    }\n    GetStatus()\n    {\n        return this._m.Data.status;\n    }\n    GetBatteryLevel()\n    {\n        return parseInt(this._m.Data.battery_level,10);\n    }\n    IsCharging()\n    {\n        return !!this._m.Data.charging;\n    }\n}\n\nexport class TerminalBattery\n{\n    constructor(m)\n    {\n        this.BatteryLevel = parseInt(m.Data.battery_level,10);\n    }\n}\n","import {Message, MessageStamp, Events, SuccessState} from './Messages';\nimport {SpiConfig, SpiFlow, SpiStatus, PairingFlowState, TransactionFlowState, TransactionType, InitiateTxResult, MidTxResult, SubmitAuthCodeResult, TransactionOptions} from './SpiModels';\nimport {RequestIdHelper} from './RequestIdHelper';\nimport {PairingHelper} from './PairingHelper';\nimport {Connection, ConnectionState} from './Connection';\nimport {SpiPayAtTable} from './SpiPayAtTable';\nimport {PayAtTableConfig} from './PayAtTable';\nimport {SpiPreauth} from './SpiPreauth';\nimport {CashoutOnlyRequest} from './Cashout';\nimport {SettleRequest, SettlementEnquiryRequest} from './Settlement';\nimport {DropKeysRequest, KeyRequest, KeyCheck, PairResponse} from './Pairing';\nimport {SetPosInfoRequest, SetPosInfoResponse, DeviceInfo} from './PosInfo';\nimport {PurchaseHelper} from './PurchaseHelper';\nimport {KeyRollingHelper} from './KeyRollingHelper';\nimport {PingHelper, PongHelper} from './PingHelper';\nimport {GetLastTransactionRequest, GetLastTransactionResponse, SignatureAccept, SignatureDecline, MotoPurchaseRequest, AuthCodeAdvice, CancelTransactionRequest, SignatureRequired, CancelTransactionResponse, PhoneForAuthRequired} from './Purchase';\nimport {DeviceAddressService, DeviceAddressStatus, DeviceAddressResponseCode, HttpStatusCode} from './Service/DeviceService';\nimport {PrintingRequest} from './Printing';\nimport {TerminalStatusRequest} from './TerminalStatus';\n\nexport const SPI_VERSION = '2.6.0';\n\nexport default class Spi {\n\n    get CurrentStatus() {\n        return this._currentStatus;\n    }\n\n    set CurrentStatus(value) {\n        if(this._currentStatus === value) {\n            return;\n        }\n\n        this._currentStatus = value;\n        document.dispatchEvent(new CustomEvent('StatusChanged', {detail: value}));\n    }\n\n    constructor(posId, serialNumber, eftposAddress, secrets) \n    {\n        this._posId = posId;\n        this._serialNumber = serialNumber;\n        this._secrets = secrets;\n        this._forceSecureWebSockets = false;\n        this._eftposAddress = \"ws://\" + eftposAddress;\n        this._log = console;\n        this.Config = new SpiConfig();\n        this._conn = new Connection();\n\n        this.CurrentDeviceStatus = null;\n        this._deviceApiKey  = null;\n        this._acquirerCode  = null;\n        this._inTestMode    = false;\n        this._autoAddressResolutionEnabled = false;\n\n        // Our stamp for signing outgoing messages\n        this._spiMessageStamp = new MessageStamp(this._posId, this._secrets, 0);\n\n        this._posVendorId = null;\n        this._posVersion = null;\n        this._hasSetInfo = null;\n\n        // We will maintain some state\n        this._mostRecentPingSent = null;\n        this._mostRecentPongReceived = null;\n        this._missedPongsCount = 0;\n        this._retriesSinceLastDeviceAddressResolution = 0;\n        this._mostRecentLoginResponse = null;\n\n        this._pongTimeout = 5000;\n        this._pingFrequency = 18000;\n        \n        this._readyToTransact = null;\n        this._periodicPingThread = null;\n\n        this._txMonitorCheckFrequency = 1000;\n        this._checkOnTxFrequency = 20000;\n        this._maxWaitForCancelTx = 10000;\n        this._sleepBeforeReconnectMs = 3000;\n        this._missedPongsToDisconnect = 2;\n        this._retriesBeforeResolvingDeviceAddress = 5;\n\n        this.CurrentFlow                = null;\n        this.CurrentPairingFlowState    = null;\n        this.CurrentTxFlowState         = null;\n    }\n\n    EnablePayAtTable()\n    {\n        this._spiPat = new SpiPayAtTable(this);\n        return this._spiPat;\n    }\n\n    DisablePayAtTable()\n    {\n        this._spiPat = new SpiPayAtTable(this);\n        this._spiPat.Config.PayAtTabledEnabled = false;\n        return this._spiPat;\n    }\n\n    EnablePreauth()\n    {\n        this._spiPreauth = new SpiPreauth(this);\n        return this._spiPreauth;\n    }\n\n    Start() {\n\n        if (!this._posVendorId || !this._posVersion)\n        {\n            // POS information is now required to be set\n            this._log.warn(\"Missing POS vendor ID and version. posVendorId and posVersion are required before starting\");\n            throw new Error(\"Missing POS vendor ID and version. posVendorId and posVersion are required before starting\");\n        }\n\n        this._resetConn();\n        this._startTransactionMonitoringThread();\n\n        this.CurrentFlow = SpiFlow.Idle;\n        if (this._secrets != null)\n        {\n            this._log.info(\"Starting in Paired State\");\n            this._currentStatus = SpiStatus.PairedConnecting;\n            this._conn.Connect(); // This is non-blocking\n        }\n        else\n        {\n            this._log.info(\"Starting in Unpaired State\");\n            this._currentStatus = SpiStatus.Unpaired;\n        } \n    }\n\n    /// <summary>\n    /// Set the acquirer code of your bank, please contact Assembly's Integration Engineers for acquirer code.\n    /// </summary>\n    SetAcquirerCode(acquirerCode)\n    {\n        this._acquirerCode = acquirerCode;\n        return true;\n    }\n\n    /// <summary>\n    /// Set the api key used for auto address discovery feature\n    /// </summary>\n    /// <returns></returns>\n    SetDeviceApiKey(deviceApiKey)\n    {\n        this._deviceApiKey = deviceApiKey;\n        return true;\n    }\n\n    /// <summary>\n    /// Allows you to set the serial number of the Eftpos\n    /// </summary>\n    SetSerialNumber(serialNumber)\n    {\n        if (this.CurrentStatus != SpiStatus.Unpaired)\n            return false;\n\n        var was = this._serialNumber;\n        this._serialNumber = serialNumber;\n        if (this.HasSerialNumberChanged(was))\n        {\n            this._autoResolveEftposAddress();\n        }\n        else\n        {\n            if (this.CurrentDeviceStatus == null)\n            {\n                this.CurrentDeviceStatus = new DeviceAddressStatus();\n            }\n\n            this.CurrentDeviceStatus.DeviceAddressResponseCode = DeviceAddressResponseCode.SERIAL_NUMBER_NOT_CHANGED;\n            document.dispatchEvent(new CustomEvent('DeviceAddressChanged', {detail: this.CurrentDeviceStatus}));\n        }\n\n        return true;\n    }\n\n    /// <summary>\n    /// Allows you to set the auto address discovery feature. \n    /// </summary>\n    /// <returns></returns>\n    SetAutoAddressResolution(autoAddressResolutionEnable)\n    {\n        if (this.CurrentStatus == SpiStatus.PairedConnected)\n            return false;\n\n        var was = this._autoAddressResolutionEnabled;\n        this._autoAddressResolutionEnabled = autoAddressResolutionEnable;\n        if (autoAddressResolutionEnable && !was)\n        {\n            // we're turning it on\n            this._autoResolveEftposAddress();\n        }\n\n        return true;\n    }\n\n    /// <summary>\n    /// Call this method to set the client library test mode.\n    /// Set it to true only while you are developing the integration. \n    /// It defaults to false. For a real merchant, always leave it set to false. \n    /// </summary>\n    /// <param name=\"testMode\"></param>\n    /// <returns></returns>\n    SetTestMode(testMode)\n    {\n        if (this.CurrentStatus && this.CurrentStatus != SpiStatus.Unpaired)\n            return false;\n\n        if (testMode == this._inTestMode)\n            return true;\n\n        // we're changing mode\n        this._inTestMode = testMode;\n        this._autoResolveEftposAddress();\n\n        return true;\n    }\n\n    /// <summary>\n    /// Set the client library to use secure web sockets TLS (wss protocol)\n    /// </summary>\n    /// <param name=\"isSecure\"></param>\n    /// <returns></returns>\n    SetSecureWebSockets(useSecureWebSockets)\n    {\n        this._forceSecureWebSockets = useSecureWebSockets;\n    }\n\n    // <summary>\n    // Allows you to set the PosId which identifies this instance of your POS.\n    // Can only be called in thge Unpaired state. \n    // </summary>\n    SetPosId(posId)\n    {\n        if (this.CurrentStatus != SpiStatus.Unpaired)\n            return false;\n\n        this._posId = posId;\n        this._spiMessageStamp.PosId = posId;\n        return true;\n    }\n\n    // <summary>\n    // Allows you to set the PinPad address. Sometimes the PinPad might change IP address \n    // (we recommend reserving static IPs if possible).\n    // Either way you need to allow your User to enter the IP address of the PinPad.\n    // </summary>\n    SetEftposAddress(address)\n    {\n        if (this.CurrentStatus == SpiStatus.PairedConnected || this._autoAddressResolutionEnabled) {\n            return false;\n        }\n\n        this._eftposAddress = \"ws://\" + address;\n        this._conn.Address = this._eftposAddress;\n        return true;\n    }\n\n    static GetVersion()\n    {\n        return SPI_VERSION;\n    }\n\n    /**\n     * Sets values used to identify the POS software to the EFTPOS terminal.\n     * Must be set before starting!\n     *\n     * @param posVendorId Vendor identifier of the POS itself.\n     * @param posVersion  Version string of the POS itself.\n     */\n    SetPosInfo(posVendorId, posVersion)\n    {\n        this._posVendorId = posVendorId;\n        this._posVersion = posVersion;\n    }\n\n    // <summary>\n    // Call this one when a flow is finished and you want to go back to idle state.\n    // Typically when your user clicks the \"OK\" bubtton to acknowldge that pairing is\n    // finished, or that transaction is finished.\n    // When true, you can dismiss the flow screen and show back the idle screen.\n    // </summary>\n    // <returns>true means we have moved back to the Idle state. false means current flow was not finished yet.</returns>\n    AckFlowEndedAndBackToIdle()\n    {\n        if (this.CurrentFlow == SpiFlow.Idle)\n            return true; // already idle\n\n        if (this.CurrentFlow == SpiFlow.Pairing && this.CurrentPairingFlowState.Finished)\n        {\n            this.CurrentFlow = SpiFlow.Idle;\n            return true;\n        }\n        \n        if (this.CurrentFlow == SpiFlow.Transaction && this.CurrentTxFlowState.Finished)\n        {\n            this.CurrentFlow = SpiFlow.Idle;\n            return true;\n        }\n\n        return false;\n    }\n\n    // endregion\n\n    // <summary>\n    // This will connect to the Eftpos and start the pairing process.\n    // Only call this if you are in the Unpaired state.\n    // Subscribe to the PairingFlowStateChanged event to get updates on the pairing process.\n    // </summary>\n    // <returns>Whether pairing has initiated or not</returns>\n    Pair()\n    {\n        if (this.CurrentStatus != SpiStatus.Unpaired) {\n            this._log.warn(\"Tried to Pair but we're already so.\");\n            return false;\n        }\n\n        if (!this._posId || !this._eftposAddress)\n        {\n            this._log.warn(\"Tried to Pair but missing posId or updatedEftposAddress\");\n            return false;\n        }\n\n        this.CurrentFlow = SpiFlow.Pairing;\n        this.CurrentPairingFlowState = new PairingFlowState\n        ({\n            Successful: false,\n            Finished: false,\n            Message: \"Connecting...\",\n            AwaitingCheckFromEftpos: false,\n            AwaitingCheckFromPos: false,\n            ConfirmationCode: \"\"\n        });\n\n        document.dispatchEvent(new CustomEvent('PairingFlowStateChanged', {detail: this.CurrentPairingFlowState}));\n        this._conn.Connect(); // Non-Blocking\n        return true;\n    }\n\n    // <summary>\n    // Call this when your user clicks yes to confirm the pairing code on your \n    // screen matches the one on the Eftpos.\n    // </summary>\n    PairingConfirmCode()\n    {\n        if (!this.CurrentPairingFlowState.AwaitingCheckFromPos)\n        {\n            // We weren't expecting this\n            return;\n        }\n\n        this.CurrentPairingFlowState.AwaitingCheckFromPos = false;\n        if (this.CurrentPairingFlowState.AwaitingCheckFromEftpos)\n        {\n            // But we are still waiting for confirmation from Eftpos side.\n            this._log.info(\"Pair Code Confirmed from POS side, but am still waiting for confirmation from Eftpos.\");\n            this.CurrentPairingFlowState.Message =\n                \"Click YES on EFTPOS if code is: \" + this.CurrentPairingFlowState.ConfirmationCode;\n            document.dispatchEvent(new CustomEvent('PairingFlowStateChanged', {detail: this.CurrentPairingFlowState}));\n        }\n        else\n        {\n            // Already confirmed from Eftpos - So all good now. We're Paired also from the POS perspective.\n            this._log.info(\"Pair Code Confirmed from POS side, and was already confirmed from Eftpos side. Pairing finalised.\");\n            this._onPairingSuccess();\n            this._onReadyToTransact();\n        }\n    }\n\n    // <summary>\n    // Call this if your user clicks CANCEL or NO during the pairing process.\n    // </summary>\n    PairingCancel()\n    {\n        if (this.CurrentFlow != SpiFlow.Pairing || this.CurrentPairingFlowState.Finished) {\n            return;\n        }\n\n        if (this.CurrentPairingFlowState.AwaitingCheckFromPos && !this.CurrentPairingFlowState.AwaitingCheckFromEftpos)\n        {\n            // This means that the Eftpos already thinks it's paired.\n            // Let's tell it to drop keys\n            this._send(new DropKeysRequest().ToMessage());\n        }\n        this._onPairingFailed();\n    }\n\n    // <summary>\n    // Call this when your uses clicks the Unpair button.\n    // This will disconnect from the Eftpos and forget the secrets.\n    // The CurrentState is then changed to Unpaired.\n    // Call this only if you are not yet in the Unpaired state.\n    // </summary>\n    Unpair()\n    {\n        if (this.CurrentStatus == SpiStatus.Unpaired) {\n            return false;\n        }\n\n        if (this.CurrentFlow != SpiFlow.Idle) {\n            return false;\n        }\n        \n        // Best effort letting the eftpos know that we're dropping the keys, so it can drop them as well.\n        this._send(new DropKeysRequest().ToMessage());\n        this._doUnpair();\n        return true;\n    }\n\n    // endregion\n\n    // region Transaction Methods\n\n    // <summary>\n    // Initiates a purchase transaction. Be subscribed to TxFlowStateChanged event to get updates on the process.\n    // </summary>\n    // <param name=\"posRefId\">Alphanumeric Identifier for your purchase.</param>\n    // <param name=\"amountCents\">Amount in Cents to charge</param>\n    // <returns>InitiateTxResult</returns>\n    InitiatePurchaseTx(posRefId, amountCents)\n    {\n        if (this.CurrentStatus == SpiStatus.Unpaired) {\n            return new InitiateTxResult(false, \"Not Paired\");\n        }\n\n        if (this.CurrentFlow != SpiFlow.Idle) {\n            return new InitiateTxResult(false, \"Not Idle\");\n        }\n\n        var purchaseRequest = PurchaseHelper.CreatePurchaseRequest(amountCents, posRefId);\n        purchaseRequest.Config = this.Config;\n        var purchaseMsg = purchaseRequest.ToMessage();\n        this.CurrentFlow = SpiFlow.Transaction;\n        this.CurrentTxFlowState = new TransactionFlowState(\n            posRefId, TransactionType.Purchase, amountCents, purchaseMsg,\n            `Waiting for EFTPOS connection to make payment request for ${amountCents / 100.0}`);\n        if (this._send(purchaseMsg))\n        {\n            this.CurrentTxFlowState.Sent(`Asked EFTPOS to accept payment for ${amountCents / 100.0}`);\n        }\n        \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\n        return new InitiateTxResult(true, \"Purchase Initiated\");\n    }\n\n    // <summary>\n    // Initiates a purchase transaction. Be subscribed to TxFlowStateChanged event to get updates on the process.\n    // <para>Tip and cashout are not allowed simultaneously.</para>\n    // </summary>\n    // <param name=\"posRefId\">An Unique Identifier for your Order/Purchase</param>\n    // <param name=\"purchaseAmount\">The Purchase Amount in Cents.</param>\n    // <param name=\"tipAmount\">The Tip Amount in Cents</param>\n    // <param name=\"cashoutAmount\">The Cashout Amount in Cents</param>\n    // <param name=\"promptForCashout\">Whether to prompt your customer for cashout on the Eftpos</param>\n    // <param name=\"options\">The Setting to set Header and Footer for the Receipt</param>\n    // <param name=\"surchargeAmount\">The Surcharge Amount in Cents</param>\n    // <returns>InitiateTxResult</returns>\n    InitiatePurchaseTxV2(posRefId, purchaseAmount, tipAmount, cashoutAmount, promptForCashout, options = new TransactionOptions(), surchargeAmount = 0)\n    {\n        if (this.CurrentStatus == SpiStatus.Unpaired) return new InitiateTxResult(false, \"Not Paired\");\n\n        if (tipAmount > 0 && (cashoutAmount > 0 || promptForCashout)) return new InitiateTxResult(false, \"Cannot Accept Tips and Cashout at the same time.\");\n        \n        if (this.CurrentFlow != SpiFlow.Idle) return new InitiateTxResult(false, \"Not Idle\");\n        this.CurrentFlow = SpiFlow.Transaction;\n        \n        var purchase = PurchaseHelper.CreatePurchaseRequestV2(posRefId, purchaseAmount, tipAmount, cashoutAmount, promptForCashout, surchargeAmount);\n        purchase.Config = this.Config;\n        purchase.Options = options;\n        var purchaseMsg = purchase.ToMessage();\n        this.CurrentTxFlowState = new TransactionFlowState(\n            posRefId, TransactionType.Purchase, purchaseAmount, purchaseMsg,\n            `Waiting for EFTPOS connection to make payment request. ${purchase.AmountSummary()}`);\n        if (this._send(purchaseMsg))\n        {\n            this.CurrentTxFlowState.Sent(`Asked EFTPOS to accept payment for ${purchase.AmountSummary()}`);\n        }\n        \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\n        return new InitiateTxResult(true, \"Purchase Initiated\");\n    }\n\n    // <summary>\n    // Initiates a refund transaction. Be subscribed to TxFlowStateChanged event to get updates on the process.\n    // </summary>\n    // <param name=\"posRefId\">Alphanumeric Identifier for your refund.</param>\n    // <param name=\"amountCents\">Amount in Cents to charge</param>\n    // <param name=\"suppressMerchantPassword\">Merchant Password control in VAA</param>\n    // <param name=\"options\">The Setting to set Header and Footer for the Receipt</param>\n    // <returns>InitiateTxResult</returns>\n    InitiateRefundTx(posRefId, amountCents, suppressMerchantPassword = false, options = new TransactionOptions())\n    {\n        if (this.CurrentStatus == SpiStatus.Unpaired) {\n            return new InitiateTxResult(false, \"Not Paired\");\n        }\n\n        if (this.CurrentFlow != SpiFlow.Idle) {\n            return new InitiateTxResult(false, \"Not Idle\");\n        }\n\n        var refundRequest = PurchaseHelper.CreateRefundRequest(amountCents, posRefId, suppressMerchantPassword);\n        refundRequest.Config = this.Config;\n        refundRequest.Options = options;\n        var refundMsg = refundRequest.ToMessage();\n        this.CurrentFlow = SpiFlow.Transaction;\n        this.CurrentTxFlowState = new TransactionFlowState(\n            posRefId, TransactionType.Refund, amountCents, refundMsg, \n            `Waiting for EFTPOS connection to make refund request for ${(amountCents / 100.0).toFixed(2)}`);\n        if (this._send(refundMsg))\n        {\n            this.CurrentTxFlowState.Sent(`Asked EFTPOS to refund ${(amountCents / 100.0).toFixed(2)}`);\n        }\n        \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\n        return new InitiateTxResult(true, \"Refund Initiated\");\n    }\n    \n    // <summary>\n    // Let the EFTPOS know whether merchant accepted or declined the signature\n    // </summary>\n    // <param name=\"accepted\">whether merchant accepted the signature from customer or not</param>\n    AcceptSignature(accepted)\n    {\n        if (this.CurrentFlow != SpiFlow.Transaction || this.CurrentTxFlowState.Finished || !this.CurrentTxFlowState.AwaitingSignatureCheck)\n        {\n            this._log.info(\"Asked to accept signature but I was not waiting for one.\");\n            return new MidTxResult(false, \"Asked to accept signature but I was not waiting for one.\");\n        }\n\n        this.CurrentTxFlowState.SignatureResponded(accepted ? \"Accepting Signature...\" : \"Declining Signature...\");\n        var sigReqMsg = this.CurrentTxFlowState.SignatureRequiredMessage;\n        this._send(accepted\n            ? new SignatureAccept(this.CurrentTxFlowState.PosRefId).ToMessage()\n            : new SignatureDecline(this.CurrentTxFlowState.PosRefId).ToMessage());\n        \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\n        return new MidTxResult(true, \"\");\n    }\n\n    // <summary>\n    // Submit the Code obtained by your user when phoning for auth. \n    // It will return immediately to tell you whether the code has a valid format or not. \n    // If valid==true is returned, no need to do anything else. Expect updates via standard callback.\n    // If valid==false is returned, you can show your user the accompanying message, and invite them to enter another code. \n    // </summary>\n    // <param name=\"authCode\">The code obtained by your user from the merchant call centre. It should be a 6-character alpha-numeric value.</param>\n    // <returns>Whether code has a valid format or not.</returns>\n    SubmitAuthCode(authCode)\n    {\n        if (authCode.length != 6)\n        {\n            return new SubmitAuthCodeResult(false, \"Not a 6-digit code.\");    \n        }\n                \n        if (this.CurrentFlow != SpiFlow.Transaction || this.CurrentTxFlowState.Finished || !this.CurrentTxFlowState.AwaitingPhoneForAuth)\n        {\n            this._log.info(\"Asked to send auth code but I was not waiting for one.\");\n            return new SubmitAuthCodeResult(false, \"Was not waiting for one.\");\n        }\n\n        this.CurrentTxFlowState.AuthCodeSent(`Submitting Auth Code ${authCode}`);\n        this._send(new AuthCodeAdvice(this.CurrentTxFlowState.PosRefId, authCode).ToMessage());\n        \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\n        return new SubmitAuthCodeResult(true, \"Valid Code.\");\n    }\n\n    // <summary>\n    // Attempts to cancel a Transaction. \n    // Be subscribed to TxFlowStateChanged event to see how it goes.\n    // Wait for the transaction to be finished and then see whether cancellation was successful or not.\n    // </summary>\n    // <returns>MidTxResult - false only if you called it in the wrong state</returns>\n    CancelTransaction()\n    {\n        if (this.CurrentFlow != SpiFlow.Transaction || this.CurrentTxFlowState.Finished)\n        {\n            this._log.info(\"Asked to cancel transaction but I was not in the middle of one.\");\n            return new MidTxResult(false, \"Asked to cancel transaction but I was not in the middle of one.\");\n        }\n\n        // TH-1C, TH-3C - Merchant pressed cancel\n        if (this.CurrentTxFlowState.RequestSent)\n        {\n            var cancelReq = new CancelTransactionRequest();\n            this.CurrentTxFlowState.Cancelling(\"Attempting to Cancel Transaction...\");\n            this._send(cancelReq.ToMessage());\n        }\n        else\n        {\n            // We Had Not Even Sent Request Yet. Consider as known failed.\n            this.CurrentTxFlowState.Failed(null, \"Transaction Cancelled. Request Had not even been sent yet.\");\n        }\n        \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\n        return new MidTxResult(true, \"\");\n    }\n\n    // <summary>\n    // Initiates a cashout only transaction. Be subscribed to TxFlowStateChanged event to get updates on the process.\n    // </summary>\n    // <param name=\"posRefId\">Alphanumeric Identifier for your transaction.</param>\n    // <param name=\"amountCents\">Amount in Cents to cash out</param>\n    // <param name=\"surchargeAmount\">The Surcharge Amount in Cents</param>\n    // <returns>InitiateTxResult</returns>\n    InitiateCashoutOnlyTx(posRefId, amountCents, surchargeAmount = 0, options = new TransactionOptions())\n    {\n        if (this.CurrentStatus == SpiStatus.Unpaired) return new InitiateTxResult(false, \"Not Paired\");\n\n        if (this.CurrentFlow != SpiFlow.Idle) return new InitiateTxResult(false, \"Not Idle\");\n\n        var cashoutMsg = Object.assign(new CashoutOnlyRequest(amountCents, posRefId), {\n            SurchargeAmount: surchargeAmount,\n            Options: options,\n            Config: this.Config\n        }).ToMessage();\n\n        this.CurrentFlow = SpiFlow.Transaction;\n        this.CurrentTxFlowState = new TransactionFlowState(\n            posRefId, TransactionType.CashoutOnly, amountCents, cashoutMsg,\n            `Waiting for EFTPOS connection to send cashout request for ${(amountCents / 100).toFixed(2)}`);\n        if (this._send(cashoutMsg))\n        {\n            this.CurrentTxFlowState.Sent(`Asked EFTPOS to do cashout for ${(amountCents / 100).toFixed(2)}`);\n        }\n        \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\n        return new InitiateTxResult(true, \"Cashout Initiated\");\n    }    \n\n    // <summary>\n    // Initiates a Mail Order / Telephone Order Purchase Transaction\n    // </summary>\n    // <param name=\"posRefId\">Alphanumeric Identifier for your transaction.</param>\n    // <param name=\"amountCents\">Amount in Cents</param>\n    // <param name=\"surchargeAmount\">The Surcharge Amount in Cents</param>\n    // <param name=\"suppressMerchantPassword\">>Merchant Password control in VAA</param>\n    // <param name=\"options\">The Setting to set Header and Footer for the Receipt</param>\n    // <returns>InitiateTxResult</returns>\n    InitiateMotoPurchaseTx(posRefId, amountCents, surchargeAmount = 0, suppressMerchantPassword = false, options = new TransactionOptions())\n    {\n        if (this.CurrentStatus == SpiStatus.Unpaired) return new InitiateTxResult(false, \"Not Paired\");\n\n        if (this.CurrentFlow != SpiFlow.Idle) return new InitiateTxResult(false, \"Not Idle\");\n        var motoPurchaseMsg = Object.assign(new MotoPurchaseRequest(amountCents, posRefId),\n        {\n            SurchargeAmount: surchargeAmount,\n            SuppressMerchantPassword: suppressMerchantPassword,\n            Config: this.Config,\n            Options: options\n        }).ToMessage();\n\n        this.CurrentFlow = SpiFlow.Transaction;\n        this.CurrentTxFlowState = new TransactionFlowState(\n            posRefId, TransactionType.MOTO, amountCents, motoPurchaseMsg,\n            `Waiting for EFTPOS connection to send MOTO request for ${(amountCents / 100).toFixed(2)}`);\n        if (this._send(motoPurchaseMsg))\n        {\n            this.CurrentTxFlowState.Sent(`Asked EFTPOS do MOTO for ${(amountCents / 100).toFixed(2)}`);\n        }\n        \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\n        return new InitiateTxResult(true, \"MOTO Initiated\");\n    }\n\n    // <summary>\n    // Initiates a settlement transaction.\n    // Be subscribed to TxFlowStateChanged event to get updates on the process.\n    // <param name=\"options\">The Setting to set Header and Footer for the Receipt</param>\n    // </summary>\n    InitiateSettleTx(posRefId, options = new TransactionOptions())\n    {\n        if (this.CurrentStatus == SpiStatus.Unpaired) {\n            return new InitiateTxResult(false, \"Not Paired\");\n        }\n\n        if (this.CurrentFlow != SpiFlow.Idle) {\n            return new InitiateTxResult(false, \"Not Idle\");\n        }\n\n        var settleMsg = Object.assign(new SettleRequest(RequestIdHelper.Id(\"settle\")),\n        {\n            Config: this.Config,\n            Options: options\n        }).ToMessage();\n\n        this.CurrentFlow = SpiFlow.Transaction;\n        this.CurrentTxFlowState = new TransactionFlowState(\n            posRefId, TransactionType.Settle, 0, settleMsg, \n            `Waiting for EFTPOS connection to make a settle request`);\n\n        if (this._send(settleMsg))\n        {\n            this.CurrentTxFlowState.Sent(`Asked EFTPOS to settle.`);\n        }\n        \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\n        return new InitiateTxResult(true, \"Settle Initiated\");   \n    }\n\n    // <summary>\n    // <param name=\"options\">The Setting to set Header and Footer for the Receipt</param>\n    // </summary>\n    InitiateSettlementEnquiry(posRefId, options = new TransactionOptions())\n    {\n        if (this.CurrentStatus == SpiStatus.Unpaired) return new InitiateTxResult(false, \"Not Paired\");\n\n        if (this.CurrentFlow != SpiFlow.Idle) return new InitiateTxResult(false, \"Not Idle\");\n        var stlEnqMsg = Object.assign(new SettlementEnquiryRequest(RequestIdHelper.Id(\"stlenq\")),\n        {\n            Config: this.Config,\n            Options: options\n        }).ToMessage();\n\n        this.CurrentFlow = SpiFlow.Transaction;\n        this.CurrentTxFlowState = new TransactionFlowState(\n            posRefId, TransactionType.SettlementEnquiry, 0, stlEnqMsg,\n            \"Waiting for EFTPOS connection to make a settlement enquiry\");\n        if (this._send(stlEnqMsg))\n        {\n            this.CurrentTxFlowState.Sent(\"Asked EFTPOS to make a settlement enquiry.\");\n        }\n        \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\n        return new InitiateTxResult(true, \"Settle Initiated\");   \n    }\n\n    // <summary>\n    // Initiates a Get Last Transaction. Use this when you want to retrieve the most recent transaction\n    // that was processed by the Eftpos.\n    // Be subscribed to TxFlowStateChanged event to get updates on the process.\n    // </summary>\n    InitiateGetLastTx()\n    {\n        if (this.CurrentStatus == SpiStatus.Unpaired) {\n            return new InitiateTxResult(false, \"Not Paired\");\n        }\n\n        if (this.CurrentFlow != SpiFlow.Idle) {\n            return new InitiateTxResult(false, \"Not Idle\");\n        }\n\n        var gltRequestMsg = new GetLastTransactionRequest().ToMessage();\n        this.CurrentFlow = SpiFlow.Transaction;\n        var posRefId = gltRequestMsg.Id; // GetLastTx is not trying to get anything specific back. So we just use the message id.\n        this.CurrentTxFlowState = new TransactionFlowState(\n            posRefId, TransactionType.GetLastTransaction, 0, gltRequestMsg, \n            \"Waiting for EFTPOS connection to make a Get-Last-Transaction request.\");\n        this.CurrentTxFlowState.CallingGlt(gltRequestMsg.Id);\n        if (this._send(gltRequestMsg))\n        {\n            this.CurrentTxFlowState.Sent(`Asked EFTPOS for last transaction.`);\n        }\n    \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\n        return new InitiateTxResult(true, \"GLT Initiated\");   \n    }\n\n    // <summary>\n    // This is useful to recover from your POS crashing in the middle of a transaction.\n    // When you restart your POS, if you had saved enough state, you can call this method to recover the client library state.\n    // You need to have the posRefId that you passed in with the original transaction, and the transaction type.\n    // This method will return immediately whether recovery has started or not.\n    // If recovery has started, you need to bring up the transaction modal to your user a be listening to TxFlowStateChanged.\n    // </summary>\n    // <param name=\"posRefId\">The is that you had assigned to the transaction that you are trying to recover.</param>\n    // <param name=\"txType\">The transaction type.</param>\n    // <returns></returns>\n    InitiateRecovery(posRefId, txType)\n    {\n        if (this.CurrentStatus == SpiStatus.Unpaired) return new InitiateTxResult(false, \"Not Paired\");\n    \n        if (this.CurrentFlow != SpiFlow.Idle) return new InitiateTxResult(false, \"Not Idle\");\n        \n        this.CurrentFlow = SpiFlow.Transaction;\n        \n        var gltRequestMsg = new GetLastTransactionRequest().ToMessage();\n        this.CurrentTxFlowState = new TransactionFlowState(\n            posRefId, txType, 0, gltRequestMsg, \n            \"Waiting for EFTPOS connection to attempt recovery.\");\n        \n        if (this._send(gltRequestMsg))\n        {\n            this.CurrentTxFlowState.Sent(`Asked EFTPOS to recover state.`);\n        }\n    \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\n        return new InitiateTxResult(true, \"Recovery Initiated\");\n    }\n\n    // <summary>\n    // GltMatch attempts to conclude whether a gltResponse matches an expected transaction and returns\n    // the outcome. \n    // If Success/Failed is returned, it means that the gtlResponse did match, and that transaction was succesful/failed.\n    // If Unknown is returned, it means that the gltResponse does not match the expected transaction. \n    // </summary>\n    // <param name=\"gltResponse\">The GetLastTransactionResponse message to check</param>\n    // <param name=\"posRefId\">The Reference Id that you passed in with the original request.</param>\n    // <param name=\"expectedAmount\">The total amount in the original request</param>\n    // <param name=\"requestTime\">The request time</param>\n    // <returns></returns>\n    GltMatch(gltResponse, posRefId, expectedAmount, requestTime, ...deprecatedArgs) \n    {\n        // Obsolete method call check\n        // Old interface: GltMatch(GetLastTransactionResponse gltResponse, TransactionType expectedType, int expectedAmount, DateTime requestTime, string posRefId)\n        if(deprecatedArgs.length) {\n            if(deprecatedArgs.length === 1) {\n                this._log.info(\"Obsolete method call detected: Use GltMatch(gltResponse, posRefId)\");\n                return this.GltMatch(gltResponse, deprecatedArgs[0]);\n            } else {\n                throw new Error(\"Obsolete method call with unknown args: Use GltMatch(GetLastTransactionResponse gltResponse, string posRefId)\");\n            }\n        }\n\n        this._log.info(`GLT CHECK: PosRefId: ${posRefId}->${gltResponse.GetPosRefId()}`);\n\n        var gltBankDateTimeStr = gltResponse.GetBankDateTimeString(); // ddMMyyyyHHmmss\n        var gltBankDateTime = new Date(`${gltBankDateTimeStr.substr(4,4)}-${gltBankDateTimeStr.substr(2,2)}-${gltBankDateTimeStr.substr(0,2)} ${gltBankDateTimeStr.substr(8,2)}:${gltBankDateTimeStr.substr(10,2)}:${gltBankDateTimeStr.substr(12,2)}`);\n        var compare = requestTime.getTime() - gltBankDateTime.getTime();\n\n        if (!posRefId == gltResponse.GetPosRefId())\n        {\n            return SuccessState.Unknown;\n        }\n\n        if (gltResponse.GetTxType().toUpperCase() == \"PURCHASE\" && gltResponse.GetBankNonCashAmount() != expectedAmount && compare > 0)\n        {\n            return Message.SuccessState.Unknown;\n        }\n\n        return gltResponse.GetSuccessState();\n    }\n    \n    PrintReceipt(key, payload)\n    {\n        this._send(new PrintingRequest(key, payload).toMessage());\n    }\n\n    GetTerminalStatus()\n    {\n        this._send(new TerminalStatusRequest().ToMessage());\n    }\n\n    // endregion\n        \n    // region Internals for Pairing Flow\n\n    // <summary>\n    // Handling the 2nd interaction of the pairing process, i.e. an incoming KeyRequest.\n    // </summary>\n    // <param name=\"m\">incoming message</param>\n    _handleKeyRequest(m)\n    {\n        this.CurrentPairingFlowState.Message = \"Negotiating Pairing...\";\n        document.dispatchEvent(new CustomEvent('PairingFlowStateChanged', {detail: this.CurrentPairingFlowState}));\n\n        // Use the helper. It takes the incoming request, and generates the secrets and the response.\n        var ph      = new PairingHelper();\n        var result  = ph.GenerateSecretsAndKeyResponse(new KeyRequest(m));\n        this._secrets = result.Secrets; // we now have secrets, although pairing is not fully finished yet.\n        this._spiMessageStamp.Secrets = this._secrets; // updating our stamp with the secrets so can encrypt messages later.\n        this._send(result.KeyResponse.ToMessage()); // send the key_response, i.e. interaction 3 of pairing.\n    }\n\n    // <summary>\n    // Handling the 4th interaction of the pairing process i.e. an incoming KeyCheck.\n    // </summary>\n    // <param name=\"m\"></param>\n    _handleKeyCheck(m)\n    {\n        var keyCheck = new KeyCheck(m);\n        this.CurrentPairingFlowState.ConfirmationCode = keyCheck.ConfirmationCode;\n        this.CurrentPairingFlowState.AwaitingCheckFromEftpos = true;\n        this.CurrentPairingFlowState.AwaitingCheckFromPos = true;\n        this.CurrentPairingFlowState.Message = \"Confirm that the following Code is showing on the Terminal\";\n        document.dispatchEvent(new CustomEvent('PairingFlowStateChanged', {detail: this.CurrentPairingFlowState}));\n    }\n\n    // <summary>\n    // Handling the 5th and final interaction of the pairing process, i.e. an incoming PairResponse\n    // </summary>\n    // <param name=\"m\"></param>\n    _handlePairResponse(m)\n    {\n        var pairResp = new PairResponse(m);\n\n        this.CurrentPairingFlowState.AwaitingCheckFromEftpos = false;\n        if (pairResp.Success)\n        {\n            if (this.CurrentPairingFlowState.AwaitingCheckFromPos)\n            {\n                // Still Waiting for User to say yes on POS\n                this._log.info(\"Got Pair Confirm from Eftpos, but still waiting for use to confirm from POS.\");\n                this.CurrentPairingFlowState.Message = \"Confirm that the following Code is what the EFTPOS showed\";\n                document.dispatchEvent(new CustomEvent('PairingFlowStateChanged', {detail: this.CurrentPairingFlowState}));\n            }\n            else\n            {\n                this._log.info(\"Got Pair Confirm from Eftpos, and already had confirm from POS. Now just waiting for first pong.\");\n                this._onPairingSuccess();\n            }\n            // I need to ping/login even if the pos user has not said yes yet, \n            // because otherwise within 5 seconds connectiong will be dropped by eftpos.\n            this._startPeriodicPing();\n        }\n        else\n        {\n            this._onPairingFailed();\n        }\n    }\n\n    _handleDropKeysAdvice(m)\n    {\n        this._log.info(\"Eftpos was Unpaired. I shall unpair from my end as well.\");\n        this._doUnpair();\n    }\n\n    _onPairingSuccess()\n    {\n        this.CurrentPairingFlowState.Successful = true;\n        this.CurrentPairingFlowState.Finished = true;\n        this.CurrentPairingFlowState.Message = \"Pairing Successful!\";\n        this.CurrentStatus = SpiStatus.PairedConnected;\n        document.dispatchEvent(new CustomEvent('SecretsChanged', {detail: this._secrets}));\n        document.dispatchEvent(new CustomEvent('PairingFlowStateChanged', {detail: this.CurrentPairingFlowState}));\n    }\n\n    _onPairingFailed()\n    {\n        this._secrets = null;\n        this._spiMessageStamp.Secrets = null;\n        this._conn.Disconnect();\n\n        this.CurrentStatus = SpiStatus.Unpaired;\n        this.CurrentPairingFlowState.Message = \"Pairing Failed\";\n        this.CurrentPairingFlowState.Finished = true;\n        this.CurrentPairingFlowState.Successful = false;\n        this.CurrentPairingFlowState.AwaitingCheckFromPos = false;\n        document.dispatchEvent(new CustomEvent('PairingFlowStateChanged', {detail: this.CurrentPairingFlowState}));\n    }\n\n    _doUnpair()\n    {\n        this.CurrentStatus = SpiStatus.Unpaired;\n        this._conn.Disconnect();\n        this._secrets = null;\n        this._spiMessageStamp.Secrets = null;\n        document.dispatchEvent(new CustomEvent('SecretsChanged', {detail: this._secrets}));\n    }\n\n    // <summary>\n    // Sometimes the server asks us to roll our secrets.\n    // </summary>\n    // <param name=\"m\"></param>\n    _handleKeyRollingRequest(m)\n    {\n        // we calculate the new ones...\n        var krRes = KeyRollingHelper.PerformKeyRolling(m, this._secrets);\n        this._secrets = krRes.NewSecrets; // and update our secrets with them\n        this._spiMessageStamp.Secrets = this._secrets; // and our stamp\n        this._send(krRes.KeyRollingConfirmation); // and we tell the server that all is well.\n        document.dispatchEvent(new CustomEvent('SecretsChanged', {detail: this._secrets}));\n    }\n\n    // <summary>\n    // The PinPad server will send us this message when a customer signature is reqired.\n    // We need to ask the customer to sign the incoming receipt.\n    // And then tell the pinpad whether the signature is ok or not.\n    // </summary>\n    // <param name=\"m\"></param>\n    _handleSignatureRequired(m)\n    {\n        var incomingPosRefId = m.Data.pos_ref_id;\n        if (this.CurrentFlow != SpiFlow.Transaction || this.CurrentTxFlowState.Finished || !this.CurrentTxFlowState.PosRefId == incomingPosRefId)\n        {\n            this._log.info(`Received Signature Required but I was not waiting for one. Incoming Pos Ref ID: ${incomingPosRefId}`);\n            return;\n        }\n        this.CurrentTxFlowState.SignatureRequired(new SignatureRequired(m), \"Ask Customer to Sign the Receipt\");\n    \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\n    }\n\n    // <summary>\n    // The PinPad server will send us this message when an auth code is required.\n    // </summary>\n    // <param name=\"m\"></param>\n    _handleAuthCodeRequired(m)\n    {\n        var incomingPosRefId = m.Data.pos_ref_id;\n        if (this.CurrentFlow != SpiFlow.Transaction || this.CurrentTxFlowState.Finished || !this.CurrentTxFlowState.PosRefId == incomingPosRefId)\n        {\n            _log.info(`Received Auth Code Required but I was not waiting for one. Incoming Pos Ref ID: ${incomingPosRefId}`);\n            return;\n        }\n        var phoneForAuthRequired = new PhoneForAuthRequired(m);\n        var msg = `Auth Code Required. Call ${phoneForAuthRequired.GetPhoneNumber()} and quote merchant id ${phoneForAuthRequired.GetMerchantId()}`;\n        this.CurrentTxFlowState.PhoneForAuthRequired(phoneForAuthRequired, msg);\n    \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\n    }\n\n    // <summary>\n    // The PinPad server will reply to our PurchaseRequest with a PurchaseResponse.\n    // </summary>\n    // <param name=\"m\"></param>\n    _handlePurchaseResponse(m)\n    {\n        var incomingPosRefId = m.Data.pos_ref_id;\n        if (this.CurrentFlow != SpiFlow.Transaction || this.CurrentTxFlowState.Finished || !this.CurrentTxFlowState.PosRefId == incomingPosRefId)\n        {\n            this._log.info(`Received Purchase response but I was not waiting for one. Incoming Pos Ref ID: ${incomingPosRefId}\"`);\n            return;\n        }\n        // TH-1A, TH-2A\n        \n        this.CurrentTxFlowState.Completed(m.GetSuccessState(), m, \"Purchase Transaction Ended.\");\n        // TH-6A, TH-6E\n        \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\n    }\n\n    // <summary>\n    // The PinPad server will reply to our CashoutOnlyRequest with a CashoutOnlyResponse.\n    // </summary>\n    // <param name=\"m\"></param>\n    _handleCashoutOnlyResponse(m)\n    {\n        var incomingPosRefId = m.Data.pos_ref_id;\n        if (this.CurrentFlow != SpiFlow.Transaction || this.CurrentTxFlowState.Finished || !this.CurrentTxFlowState.PosRefId == incomingPosRefId)\n        {\n            this._log.info(`Received Cashout Response but I was not waiting for one. Incoming Pos Ref ID: ${incomingPosRefId}`);\n            return;\n        }\n        // TH-1A, TH-2A\n        \n        this.CurrentTxFlowState.Completed(m.GetSuccessState(), m, \"Cashout Transaction Ended.\");\n        // TH-6A, TH-6E\n        \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\n    }\n\n    // <summary>\n    // The PinPad server will reply to our MotoPurchaseRequest with a MotoPurchaseResponse.\n    // </summary>\n    // <param name=\"m\"></param>\n    _handleMotoPurchaseResponse(m)\n    {\n        var incomingPosRefId = m.Data.pos_ref_id;\n        if (this.CurrentFlow != SpiFlow.Transaction || this.CurrentTxFlowState.Finished || !this.CurrentTxFlowState.PosRefId == incomingPosRefId)\n        {\n            this._log.info(`Received Moto Response but I was not waiting for one. Incoming Pos Ref ID: ${incomingPosRefId}`);\n            return;\n        }\n        // TH-1A, TH-2A\n        \n        this.CurrentTxFlowState.Completed(m.GetSuccessState(), m, \"Moto Transaction Ended.\");\n        // TH-6A, TH-6E\n        \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\n    }   \n\n    // <summary>\n    // The PinPad server will reply to our RefundRequest with a RefundResponse.\n    // </summary>\n    // <param name=\"m\"></param>\n    _handleRefundResponse(m)\n    {\n        var incomingPosRefId = m.Data.pos_ref_id;\n        if (this.CurrentFlow != SpiFlow.Transaction || this.CurrentTxFlowState.Finished | !this.CurrentTxFlowState.PosRefId == incomingPosRefId)\n        {\n            this._log.info(`Received Refund response but I was not waiting for this one. Incoming Pos Ref ID: ${incomingPosRefId}`);\n            return;\n        }\n        // TH-1A, TH-2A\n        \n        this.CurrentTxFlowState.Completed(m.GetSuccessState(), m, \"Refund Transaction Ended.\");\n        // TH-6A, TH-6E\n        \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\n    }\n\n    // <summary>\n    // TODO: Handle the Settlement Response received from the PinPad\n    // </summary>\n    // <param name=\"m\"></param>\n    HandleSettleResponse(m)\n    {\n        if (this.CurrentFlow != SpiFlow.Transaction || this.CurrentTxFlowState.Finished)\n        {\n            this._log.info(`Received Settle response but I was not waiting for one. ${m.DecryptedJson}`);\n            return;\n        }\n        // TH-1A, TH-2A\n        \n        this.CurrentTxFlowState.Completed(m.GetSuccessState(), m, \"Settle Transaction Ended.\");\n        // TH-6A, TH-6E\n    \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\n    }\n\n    // <summary>\n    // Handle the Settlement Enquiry Response received from the PinPad\n    // </summary>\n    // <param name=\"m\"></param>\n    _handleSettlementEnquiryResponse(m)\n    {\n        if (this.CurrentFlow != SpiFlow.Transaction || this.CurrentTxFlowState.Finished)\n        {\n            this._log.info(`Received Settlement Enquiry response but I was not waiting for one. ${m.DecryptedJson}`);\n            return;\n        }\n        // TH-1A, TH-2A\n        \n        this.CurrentTxFlowState.Completed(m.GetSuccessState(), m, \"Settlement Enquiry Ended.\");\n        // TH-6A, TH-6E\n        \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\n    }\n\n    // <summary>\n    // Sometimes we receive event type \"error\" from the server, such as when calling cancel_transaction and there is no transaction in progress.\n    // </summary>\n    // <param name=\"m\"></param>\n    _handleErrorEvent(m)\n    {\n        if (this.CurrentFlow == SpiFlow.Transaction\n            && !this.CurrentTxFlowState.Finished\n            && this.CurrentTxFlowState.AttemptingToCancel\n            && m.GetError() == \"NO_TRANSACTION\")\n        {\n            // TH-2E\n            this._log.info(`Was trying to cancel a transaction but there is nothing to cancel. Calling GLT to see what's up`);\n            this._callGetLastTransaction();\n        }\n        else\n        {\n            this._log.info(`Received Error Event But Don't know what to do with it. ${m.DecryptedJson}`);\n        }\n    }\n\n    // <summary>\n    // When the PinPad returns to us what the Last Transaction was.\n    // </summary>\n    // <param name=\"m\"></param>\n    _handleGetLastTransactionResponse(m)\n    {\n        var txState = this.CurrentTxFlowState;\n        if (this.CurrentFlow != SpiFlow.Transaction || txState.Finished)\n        {\n            this._log.info(\"Received glt response but we were not in the middle of a tx. ignoring.\");\n            return;\n        }\n\n        if (!txState.AwaitingGltResponse)\n        {\n            this._log.info(\"received a glt response but we had not asked for one within this transaction. Perhaps leftover from previous one. ignoring.\");\n            return;\n        }\n\n        if (txState.LastGltRequestId != m.Id)\n        {\n            this._log.info(\"received a glt response but the message id does not match the glt request that we sent. strange. ignoring.\");\n            return;\n        }\n\n        // TH-4 We were in the middle of a transaction.\n        // Let's attempt recovery. This is step 4 of Transaction Processing Handling\n        this._log.info(`Got Last Transaction..`);\n        txState.GotGltResponse();\n        var gtlResponse = new GetLastTransactionResponse(m);\n        txState.GLTResponsePosRefId = gtlResponse.GetPosRefId();\n        if (!gtlResponse.WasRetrievedSuccessfully())\n        {\n            if (gtlResponse.IsStillInProgress(txState.PosRefId))\n            {\n                // TH-4E - Operation In Progress\n\n                if (gtlResponse.IsWaitingForSignatureResponse() && !txState.AwaitingSignatureCheck)\n                {\n                    this._log.info(\"Eftpos is waiting for us to send it signature accept/decline, but we were not aware of this. \" +\n                              \"The user can only really decline at this stage as there is no receipt to print for signing.\");\n                    this.CurrentTxFlowState.SignatureRequired(new SignatureRequired(txState.PosRefId, m.Id, \"MISSING RECEIPT\\n DECLINE AND TRY AGAIN.\"), \"Recovered in Signature Required but we don't have receipt. You may Decline then Retry.\");\n                }\n                else if (gtlResponse.IsWaitingForAuthCode() && !txState.AwaitingPhoneForAuth)\n                {\n                    this._log.info(\"Eftpos is waiting for us to send it auth code, but we were not aware of this. \" +\n                              \"We can only cancel the transaction at this stage as we don't have enough information to recover from this.\");\n                    this.CurrentTxFlowState.PhoneForAuthRequired(new PhoneForAuthRequired(txState.PosRefId, m.Id, \"UNKNOWN\", \"UNKNOWN\"), \"Recovered mid Phone-For-Auth but don't have details. You may Cancel then Retry.\");\n                }\n                else\n                {\n                    this._log.info(\"Operation still in progress... stay waiting.\");\n                    // No need to publish txFlowStateChanged. Can return;\n                    return;\n                }\n            }\n            else if (gtlResponse.WasTimeOutOfSyncError())\n            {\n                // Let's not give up based on a TOOS error.\n                // Let's log it, and ignore it. \n                this._log.info(`Time-Out-Of-Sync error in Get Last Transaction response. Let's ignore it and we'll try again.`);\n                // No need to publish txFlowStateChanged. Can return;\n                return;\n            }\n            else\n            {\n                // TH-4X - Unexpected Response when recovering\n                this._log.info(`Unexpected Response in Get Last Transaction during - Received posRefId:${gtlResponse.GetPosRefId()} Error:${m.GetError()}. Ignoring.`);\n                return;\n            }\n        }\n        else\n        {\n            if (txState.Type == TransactionType.GetLastTransaction)\n            {\n                // THIS WAS A PLAIN GET LAST TRANSACTION REQUEST, NOT FOR RECOVERY PURPOSES.\n                this._log.info(\"Retrieved Last Transaction as asked directly by the user.\");\n                gtlResponse.CopyMerchantReceiptToCustomerReceipt();\n                txState.Completed(m.GetSuccessState(), m, \"Last Transaction Retrieved\");\n            }\n            else\n            {\n                // TH-4A - Let's try to match the received last transaction against the current transaction\n                var successState = this.GltMatch(gtlResponse, txState.PosRefId, txState.AmountCents, txState.RequestTime);\n                if (successState == SuccessState.Unknown)\n                {\n                    // TH-4N: Didn't Match our transaction. Consider Unknown State.\n                    this._log.info(\"Did not match transaction.\");\n                    txState.UnknownCompleted(\"Failed to recover Transaction Status. Check EFTPOS. \");\n                }\n                else\n                {\n                    // TH-4Y: We Matched, transaction finished, let's update ourselves\n                    gtlResponse.CopyMerchantReceiptToCustomerReceipt();\n                    txState.Completed(successState, m, \"Transaction Ended.\");\n                }\n            } \n        }\n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: txState}));\n    }\n\n    //When the transaction cancel response is returned.\n    _handleCancelTransactionResponse(m)\n    {\n        var incomingPosRefId = m.Data.pos_ref_id;\n        if (this.CurrentFlow != SpiFlow.Transaction || this.CurrentTxFlowState.Finished || !this.CurrentTxFlowState.PosRefId == incomingPosRefId)\n        {\n            this._log.info(`Received Cancel Required but I was not waiting for one. Incoming Pos Ref ID: ${incomingPosRefId}`);\n            return;\n        }\n\n        var txState = this.CurrentTxFlowState;\n        var cancelResponse = new CancelTransactionResponse(m);\n\n        if (cancelResponse.Success) return;\n\n        this._log.warn(\"Failed to cancel transaction: reason=\" + cancelResponse.GetErrorReason() + \", detail=\" + cancelResponse.GetErrorDetail());\n\n        txState.CancelFailed(\"Failed to cancel transaction: \" + cancelResponse.GetErrorDetail() + \". Check EFTPOS.\");\n    \n        document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: txState}));\n    }\n\n    _handleSetPosInfoResponse(m)\n    {\n        var response = new SetPosInfoResponse(m);\n        if (response.isSuccess())\n        {\n            this._hasSetInfo = true;\n            this._log.info(\"Setting POS info successful\");\n        }\n        else\n        {\n            this._log.warn(\"Setting POS info failed: reason=\" + response.getErrorReason() + \", detail=\" + response.getErrorDetail());\n        }\n    }\n\n    _startTransactionMonitoringThread()\n    {\n        var needsPublishing = false;\n    \n        var txState = this.CurrentTxFlowState;\n        if (this.CurrentFlow == SpiFlow.Transaction && !txState.Finished)\n        {\n            var state = txState;\n            if (state.AttemptingToCancel && Date.now() > state.CancelAttemptTime + this._maxWaitForCancelTx)\n            {\n                // TH-2T - too long since cancel attempt - Consider unknown\n                this._log.info(`Been too long waiting for transaction to cancel.`);\n                txState.UnknownCompleted(`Waited long enough for Cancel Transaction result. Check EFTPOS. `);\n                needsPublishing = true;\n            }\n            else if (state.RequestSent && Date.now() > state.LastStateRequestTime + this._checkOnTxFrequency)\n            {\n                // TH-1T, TH-4T - It's been a while since we received an update, let's call a GLT\n                this._log.info(`Checking on our transaction. Last we asked was at ${state.LastStateRequestTime}...`);\n                this._callGetLastTransaction();\n            }\n        }\n        \n        if (needsPublishing) {\n            document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\n        }\n\n        setTimeout(() => this._startTransactionMonitoringThread(), this._txMonitorCheckFrequency);\n    }\n\n    PrintingResponse(m) {\n        throw new Error('Method not implemented. Please overwrite this method in your POS');\n    }\n\n    TerminalStatusResponse(m) {\n        throw new Error('Method not implemented. Please overwrite this method in your POS');\n    }\n\n    BatteryLevelChanged(m) {\n        throw new Error('Method not implemented. Please overwrite this method in your POS');\n    }\n\n    _handlePrintingResponse(m)\n    {\n        this.PrintingResponse(m);\n    }\n\n    _handleTerminalStatusResponse(m)\n    {\n        this.TerminalStatusResponse(m);\n    }\n\n    _handleBatteryLevelChanged(m)\n    {\n        this.BatteryLevelChanged(m);\n    }\n\n    // endregion\n        \n    // region Internals for Connection Management\n\n    _resetConn()\n    {\n        // Setup the Connection\n        this._conn = new Connection();\n\n        if (this._isUsingHttps() || this._forceSecureWebSockets) {\n            this._log.info(\"Secure connection detected.\");\n            this._eftposAddress = this._eftposAddress.replace(\"ws://\", \"wss://\");\n          }\n          this._conn.Address = this._eftposAddress;\n    \n        // Register our Event Handlers\n        document.addEventListener('ConnectionStatusChanged', (e) => this._onSpiConnectionStatusChanged(e.detail));\n        document.addEventListener('MessageReceived', (e) => this._onSpiMessageReceived(e.detail));\n        document.addEventListener('ErrorReceived', (e) => this._onWsErrorReceived(e.detail));\n    }\n\n    // <summary>\n    // This method will be called when the connection status changes.\n    // You are encouraged to display a PinPad Connection Indicator on the POS screen.\n    // </summary>\n    // <param name=\"state\"></param>\n    _onSpiConnectionStatusChanged(state)\n    {\n        switch (state.ConnectionState)\n        {\n            case ConnectionState.Connecting:\n                this._log.info(`I'm Connecting to the Eftpos at ${this._eftposAddress}...`);\n                break;\n\n            case ConnectionState.Connected:\n                this._retriesSinceLastDeviceAddressResolution = 0;\n\n                if (this.CurrentFlow == SpiFlow.Pairing && this.CurrentStatus == SpiStatus.Unpaired)\n                {\n                    this.CurrentPairingFlowState.Message = \"Requesting to Pair...\";\n                    document.dispatchEvent(new CustomEvent('PairingFlowStateChanged', {detail: this.CurrentPairingFlowState}));\n                    var pr = PairingHelper.NewPairRequest();\n                    this._send(pr.ToMessage());\n                }\n                else\n                {\n                    this._log.info(`I'm Connected to ${this._eftposAddress}...`);\n                    this._spiMessageStamp.Secrets = this._secrets;\n                    this._startPeriodicPing();\n                }\n                break;\n\n            case ConnectionState.Disconnected:\n                // Let's reset some lifecycle related to connection state, ready for next connection\n                this._log.info(`I'm disconnected from ${this._eftposAddress}...`);\n                this._mostRecentPingSent = null;\n                this._mostRecentPongReceived = null;\n                this._missedPongsCount = 0;\n                this._stopPeriodicPing();\n\n                if (this.CurrentStatus != SpiStatus.Unpaired)\n                {\n                    this.CurrentStatus = SpiStatus.PairedConnecting;\n\n                    if (this.CurrentFlow == SpiFlow.Transaction && !this.CurrentTxFlowState.Finished)\n                    {\n                        // we're in the middle of a transaction, just so you know!\n                        // TH-1D\n                        this._log.info(`Lost connection in the middle of a transaction...`);\n                    }\n                    \n                    if (this._conn == null) return; // This means the instance has been disposed. Aborting.\n                    \n                    if (this._autoAddressResolutionEnabled)\n                    {\n                        if (this._retriesSinceLastDeviceAddressResolution >= this._retriesBeforeResolvingDeviceAddress)\n                        {\n                            this._autoResolveEftposAddress();\n                            this._retriesSinceLastDeviceAddressResolution = 0;\n                        }\n                        else\n                        {\n                            this._retriesSinceLastDeviceAddressResolution += 1;\n                        }\n                    }\n\n                    this._log.info(`Will try to reconnect in ${this._sleepBeforeReconnectMs}ms...`);\n                    setTimeout(() => {\n                        if (this.CurrentStatus != SpiStatus.Unpaired)\n                        {\n                            // This is non-blocking\n                            if(this._conn) \n                            {\n                                this._conn.Connect();\n                            }\n                        }\n                    }, this._sleepBeforeReconnectMs);\n                }\n                else if (this.CurrentFlow == SpiFlow.Pairing)\n                {\n                    this._log.info(\"Lost Connection during pairing.\");\n                    this.CurrentPairingFlowState.Message = \"Could not Connect to Pair. Check Network and Try Again...\";\n                    this._onPairingFailed();\n                    document.dispatchEvent(new CustomEvent('PairingFlowStateChanged', {detail: this.CurrentPairingFlowState}));\n                }\n                break;\n            default:\n                throw new Error('Unknown state: ' + state);\n        }\n    }\n\n    // <summary>\n    // This is an important piece of the puzzle. It's a background thread that periodically\n    // sends Pings to the server. If it doesn't receive Pongs, it considers the connection as broken\n    // so it disconnects. \n    // </summary>\n    _startPeriodicPing() {\n        this._stopPeriodicPing();\n        this._periodicPingThread = setInterval(() => this._periodicPing(),this._pingFrequency);\n        this._periodicPing();\n    }\n\n    _periodicPing() {\n        // while i'm still connected AND paired...\n        if(this._conn.Connected && this._secrets != null) {\n            this._doPing();\n\n            setTimeout(() => {\n                if (this._mostRecentPingSent != null &&\n                    (this._mostRecentPongReceived == null || this._mostRecentPongReceived.Id != this._mostRecentPingSent.Id))\n                {\n                    this._missedPongsCount += 1;\n\n                    this._log.info(`Eftpos didn't reply to my Ping. Missed Count: ${this._missedPongsCount}/${this._missedPongsToDisconnect}.`);\n\n                    if (this._missedPongsCount < this._missedPongsToDisconnect)\n                    {\n                        this._log.info(\"Trying another ping...\");\n                        this._startPeriodicPing();\n                        return;\n                    }\n\n                    // This means that we have not received a pong for our most recent ping.\n                    // We consider this connection as broken.\n                    // Let's Disconnect.\n                    this._log.info(\"Disconnecting...\");\n                    this._conn.Disconnect();\n                    this._stopPeriodicPing();\n                }\n\n                this._missedPongsCount = 0;\n\n            },this._pongTimeout);\n\n        } else {\n            this._stopPeriodicPing();\n            this._log.info(\"Cancelling periodic ping as were disconnected or not paired\");\n        }\n    }\n\n    // <summary>\n    // We call this ourselves as soon as we're ready to transact with the PinPad after a connection is established.\n    // This function is effectively called after we received the first Login Response from the PinPad.\n    // </summary>\n    _onReadyToTransact()\n    {\n        this._log.info(\"On Ready To Transact!\");\n\n        // So, we have just made a connection, pinged and logged in successfully.\n        this.CurrentStatus = SpiStatus.PairedConnected;\n\n        if (this.CurrentFlow == SpiFlow.Transaction && !this.CurrentTxFlowState.Finished)\n        {\n            if (this.CurrentTxFlowState.RequestSent)\n            {\n                // TH-3A - We've just reconnected and were in the middle of Tx.\n                // Let's get the last transaction to check what we might have missed out on.\n                this._callGetLastTransaction();\n            }\n            else\n            {\n                // TH-3AR - We had not even sent the request yet. Let's do that now\n                this._send(this.CurrentTxFlowState.Request);\n                this.CurrentTxFlowState.Sent(`Sending Request Now...`);\n                document.dispatchEvent(new CustomEvent('TxFlowStateChanged', {detail: this.CurrentTxFlowState}));\n            }\n        }\n        else\n        {\n            if (!this._hasSetInfo) { \n                this._callSetPosInfo(); \n            }\n\n            // let's also tell the eftpos our latest table configuration.\n            if(this._spiPat) {\n                this._spiPat.PushPayAtTableConfig();\n            }\n        }\n    }\n\n    _callSetPosInfo()\n    {\n        var setPosInfoRequest = new SetPosInfoRequest(this._posVersion, this._posVendorId, \"js\", SPI_VERSION, DeviceInfo.GetAppDeviceInfo());\n        this._send(setPosInfoRequest.toMessage());\n    }\n\n    // <summary>\n    // When we disconnect, we should also stop the periodic ping.\n    // </summary>\n    _stopPeriodicPing() {\n        if(this._periodicPingThread) {\n            // If we were already set up, clean up before restarting.\n            clearInterval(this._periodicPingThread);\n            this._periodicPingThread = null;\n        }\n    }\n\n    // Send a Ping to the Server\n    _doPing()\n    {\n        var ping = PingHelper.GeneratePingRequest();\n        this._mostRecentPingSent = ping;\n        this._send(ping);\n        this._mostRecentPingSentTime = Date.now();\n    }\n\n    // <summary>\n    // Received a Pong from the server\n    // </summary>\n    // <param name=\"m\"></param>\n    _handleIncomingPong(m)\n    {\n        // We need to maintain this time delta otherwise the server will not accept our messages.\n        this._spiMessageStamp.ServerTimeDelta = m.GetServerTimeDelta();\n\n        if (this._mostRecentPongReceived == null)\n        {\n            // First pong received after a connection, and after the pairing process is fully finalised.\n            if (this.CurrentStatus != SpiStatus.Unpaired)\n            {\n                this._log.info(\"First pong of connection and in paired state.\");\n                this._onReadyToTransact();\n            }\n            else\n            {\n                this._log.info(\"First pong of connection but pairing process not finalised yet.\");\n            }\n        }\n\n        this._mostRecentPongReceived = m;\n        this._log.debug(`PongLatency:${Date.now() - this._mostRecentPingSentTime}`);\n    }\n\n    // <summary>\n    // The server will also send us pings. We need to reply with a pong so it doesn't disconnect us.\n    // </summary>\n    // <param name=\"m\"></param>\n    _handleIncomingPing(m)\n    {\n        var pong = PongHelper.GeneratePongRessponse(m);\n        this._send(pong);\n    }\n\n    // <summary>\n    // Ask the PinPad to tell us what the Most Recent Transaction was\n    // </summary>\n    _callGetLastTransaction()\n    {\n        var gltRequestMsg = new GetLastTransactionRequest().ToMessage();\n        this.CurrentTxFlowState.CallingGlt(gltRequestMsg.Id);\n        this._send(gltRequestMsg);\n    }\n\n    // <summary>\n    // This method will be called whenever we receive a message from the Connection\n    // </summary>\n    // <param name=\"messageJson\"></param>\n    _onSpiMessageReceived(messageJson)\n    {\n        // First we parse the incoming message\n        var m = Message.FromJson(messageJson.Message, this._secrets);\n        this._log.info(\"Received:\" + m.DecryptedJson);\n\n        if (SpiPreauth.IsPreauthEvent(m.EventName))\n        {\n            this._spiPreauth._handlePreauthMessage(m);\n            return;\n        }\n\n        // And then we switch on the event type.\n        switch (m.EventName)\n        {\n            case Events.KeyRequest:\n                this._handleKeyRequest(m);\n                break;\n            case Events.KeyCheck:\n                this._handleKeyCheck(m);\n                break;\n            case Events.PairResponse:\n                this._handlePairResponse(m);\n                break;\n            case Events.DropKeysAdvice:\n                this._handleDropKeysAdvice(m);\n                break;\n            case Events.PurchaseResponse:\n                this._handlePurchaseResponse(m);\n                break;\n            case Events.RefundResponse:\n                this._handleRefundResponse(m);\n                break;\n            case Events.CashoutOnlyResponse:\n                this._handleCashoutOnlyResponse(m);\n                break;\n            case Events.MotoPurchaseResponse:\n                this._handleMotoPurchaseResponse(m);\n                break;\n            case Events.SignatureRequired:\n                this._handleSignatureRequired(m);\n                break;\n            case Events.AuthCodeRequired:\n                this._handleAuthCodeRequired(m);\n                break;\n            case Events.GetLastTransactionResponse:\n                this._handleGetLastTransactionResponse(m);\n                break;\n            case Events.SettleResponse:\n                this.HandleSettleResponse(m);\n                break;\n            case Events.SettlementEnquiryResponse:\n                this._handleSettlementEnquiryResponse(m);\n                break;\n            case Events.Ping:\n                this._handleIncomingPing(m);\n                break;\n            case Events.Pong:\n                this._handleIncomingPong(m);\n                break;\n            case Events.KeyRollRequest:\n                this._handleKeyRollingRequest(m);\n                break;\n            case Events.CancelTransactionResponse:\n                this._handleCancelTransactionResponse(m);\n                break;\n            case Events.SetPosInfoResponse:\n                this._handleSetPosInfoResponse(m);\n                break;\n            case Events.PayAtTableGetTableConfig:\n                if (this._spiPat == null)\n                {\n                    this._send(PayAtTableConfig.FeatureDisableMessage(RequestIdHelper.Id(\"patconf\")));\n                    break;\n                }\n                this._spiPat._handleGetTableConfig(m);\n                break;\n            case Events.PayAtTableGetBillDetails:\n                this._spiPat._handleGetBillDetailsRequest(m);\n                break;\n            case Events.PayAtTableBillPayment:\n                this._spiPat._handleBillPaymentAdvice(m);\n                break;\n            case Events.PayAtTableGetOpenTables:\n                this._spiPat._handleGetOpenTablesRequest(m);\n                break;\n            case Events.PayAtTableBillPaymentFlowEnded:\n                this._spiPat._handleBillPaymentFlowEnded(m);\n                break;\n            case Events.PrintingResponse:\n                this._handlePrintingResponse(m);\n                break;\n            case Events.TerminalStatusResponse:\n                this._handleTerminalStatusResponse(m);\n                break;\n            case Events.BatteryLevelChanged:\n                this._handleBatteryLevelChanged(m);\n                break;\n            case Events.Error:\n                this._handleErrorEvent(m);\n                break;\n            case Events.InvalidHmacSignature:\n                this._log.info(\"I could not verify message from Eftpos. You might have to Un-pair Eftpos and then reconnect.\");\n                break;\n            default:\n                this._log.info(`I don't Understand Event: ${m.EventName}, ${m.Data}. Perhaps I have not implemented it yet.`);\n                break;\n        }\n    }\n\n    _onWsErrorReceived(error)\n    {\n        this._log.warn(\"Received WS Error\", error.Message);\n    }\n\n    _send(message)\n    {\n        var json = message.ToJson(this._spiMessageStamp);\n        if (this._conn.Connected)\n        {\n            this._log.info(\"Sending: \" + message.DecryptedJson);\n            this._conn.Send(json);\n            return true;\n        }\n        else\n        {\n            this._log.info(\"Asked to send, but not connected: \" + message.DecryptedJson);\n            return false;\n        }\n    }\n\n    HasSerialNumberChanged(updatedSerialNumber)\n    {\n        return this._serialNumber != updatedSerialNumber;\n    }\n\n    HasEftposAddressChanged(updatedEftposAddress)\n    {\n        return this._eftposAddress != updatedEftposAddress;\n    }\n\n    async _autoResolveEftposAddress()\n    {\n        if (!this._autoAddressResolutionEnabled)\n            return;\n    \n        if (!this._serialNumber || !this._deviceApiKey) {\n            this._log.warn(\"Missing serialNumber and/or deviceApiKey. Need to set them before for Auto Address to work.\");    \n            return;\n        }\n\n        var isSecureConnection = this._isSecureConnection();\n\n        var service = new DeviceAddressService();\n\n        try\n        {\n            var addressResponse     = await service.RetrieveService(this._serialNumber, this._deviceApiKey, this._acquirerCode, isSecureConnection, this._inTestMode);\n            var addressResponseJson = await addressResponse.json();\n\n            this.CurrentDeviceStatus = Object.assign(new DeviceAddressStatus(isSecureConnection), \n            {\n                ip: addressResponseJson.ip,\n                fqdn: addressResponseJson.fqdn,\n                DeviceAddressResponseCode: addressResponse.status,\n                ResponseStatusDescription: addressResponse.statusText,\n                ResponseMessage: addressResponse.statusText,\n                LastUpdated: addressResponseJson.last_updated\n            });\n        }\n        catch (err) \n        {\n            this.CurrentDeviceStatus.DeviceAddressResponseCode = DeviceAddressResponseCode.DEVICE_SERVICE_ERROR;\n            this.CurrentDeviceStatus.ResponseStatusDescription = err;\n            this.CurrentDeviceStatus.ResponseMessage = err;\n\n            document.dispatchEvent(new CustomEvent('DeviceAddressChanged', {detail: this.CurrentDeviceStatus}));\n            return; \n        }\n\n        if (addressResponse.status == HttpStatusCode.NotFound)\n        {\n            this.CurrentDeviceStatus.DeviceAddressResponseCode = DeviceAddressResponseCode.INVALID_SERIAL_NUMBER;\n\n            document.dispatchEvent(new CustomEvent('DeviceAddressChanged', {detail: this.CurrentDeviceStatus}));\n            return;\n        }\n\n        if(!addressResponse.ok || !addressResponseJson || !this.CurrentDeviceStatus.Address) {\n            this.CurrentDeviceStatus.DeviceAddressResponseCode = DeviceAddressResponseCode.DEVICE_SERVICE_ERROR;\n\n            document.dispatchEvent(new CustomEvent('DeviceAddressChanged', {detail: this.CurrentDeviceStatus}));\n            return;\n        }\n\n        if (!this.HasEftposAddressChanged(this.CurrentDeviceStatus.Address))\n        {\n            this.CurrentDeviceStatus.DeviceAddressResponseCode = DeviceAddressResponseCode.ADDRESS_NOT_CHANGED;\n\n            document.dispatchEvent(new CustomEvent('DeviceAddressChanged', {detail: this.CurrentDeviceStatus}));\n            return;\n        }\n\n        // update device and connection address\n        var protocol = isSecureConnection ? \"wss\" : \"ws\";\n        this._eftposAddress = protocol + \"://\" + this.CurrentDeviceStatus.Address;\n        this._conn.Address = this._eftposAddress;\n        this.CurrentDeviceStatus.DeviceAddressResponseCode = DeviceAddressResponseCode.SUCCESS;\n\n        document.dispatchEvent(new CustomEvent('DeviceAddressChanged', {detail: this.CurrentDeviceStatus}));\n    }\n\n    _isUsingHttps() \n    {\n        return 'https:' == document.location.protocol ? true : false;\n    }\n\n    // determine whether to use wss or not\n    _isSecureConnection() \n    {\n        return this._isUsingHttps() || this._forceSecureWebSockets;\n    }\n}\n\nexport {Spi};\n","export default class Logger {\n    constructor(element, lineSeperator = '\\n') {\n        this.buffer     = [];\n        this.element    = element;\n        this.lineSeperator = lineSeperator;\n    }\n\n    Info(...args) {\n        this.buffer.push(args.join(' '));\n        this._render();\n    }\n\n    Debug(...args) {\n        this.buffer.push(args.join(' '));\n        this._render();\n    }\n\n    Warn(...args) {\n        this.buffer.push(args.join(' '));\n        this._render();\n    }\n\n    Error(...args) {\n        this.buffer.push(args.join(' '));\n        this._render();\n    }\n\n    Console(...args) {\n        console.log(args.join(' '));\n    }\n\n    _render() {\n        this.element.innerText = this.buffer.join(this.lineSeperator);\n        this.element.scrollTop = this.element.scrollHeight;\n    }\n\n    Clear() {\n        this.buffer = [];\n        this._render();\n    }\n}\n\nexport {Logger};","import {Spi} from \"./src/Spi\";\nimport {Logger} from './src/Logger';\nimport {Printer} from './src/Printing';\n\n// Re-exported modules required for POS vendors\nexport {Spi} from './src/Spi';\nexport {Logger} from './src/Logger';\nexport {Secrets} from './src/Secrets';\nexport {SuccessState} from './src/Messages';\nexport {TransactionOptions, TransactionType, SpiFlow, SpiStatus} from './src/SpiModels';\nexport {PrintingResponse} from './src/Printing';\nexport {RefundResponse, PurchaseResponse, GetLastTransactionResponse, MotoPurchaseResponse} from './src/Purchase';\nexport {TerminalStatusResponse, TerminalBattery} from './src/TerminalStatus';\nexport {CashoutOnlyResponse} from './src/Cashout';\nexport {Settlement} from './src/Settlement';\nexport {RequestIdHelper} from './src/RequestIdHelper';\nexport {DeviceAddressResponseCode} from './src/Service/DeviceService';\nexport {BillStatusResponse, BillRetrievalResult, GetOpenTablesResponse, OpenTablesEntry, BillPaymentFlowEndedResponse} from './src/PayAtTable';\nexport {PreauthResponse} from './src/Preauth';\nwindow.Spi = Spi;\nwindow.Logger = Logger;\nwindow.Printer = Printer;\n"],"sourceRoot":""}